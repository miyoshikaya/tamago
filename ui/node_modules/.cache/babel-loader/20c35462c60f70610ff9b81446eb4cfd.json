{"ast":null,"code":"import _objectSpread from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _defineProperty from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\uni\\\\tamago\\\\ui\\\\src\\\\components\\\\StartPage\\\\SignForm\\\\PwdReset.js\";\nimport React, { Component } from 'react';\nimport './login-style.css';\nimport { Link } from 'react-router-dom';\nimport { auth } from '../../../firebase';\nimport * as routes from './constants/routes.js';\n\nvar PwdReset = function PwdReset() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"PasswordForget\"), React.createElement(PasswordForgetForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }));\n};\n\nvar byPropKey = function byPropKey(propertyName, value) {\n  return function () {\n    return _defineProperty({}, propertyName, value);\n  };\n};\n\nvar INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nvar PasswordForgetForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PasswordForgetForm, _Component);\n\n  function PasswordForgetForm(props) {\n    var _this;\n\n    _classCallCheck(this, PasswordForgetForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PasswordForgetForm).call(this, props));\n\n    _this.onSubmit = function (event) {\n      var email = _this.state.email;\n      auth.doPasswordReset(email).then(function () {\n        _this.setState(_objectSpread({}, INITIAL_STATE));\n      }).catch(function (error) {\n        _this.setState(byPropKey('error', error));\n      });\n      event.preventDefault();\n    };\n\n    _this.state = _objectSpread({}, INITIAL_STATE);\n    return _this;\n  }\n\n  _createClass(PasswordForgetForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          email = _this$state.email,\n          error = _this$state.error;\n      var isInvalid = email === '';\n      return React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: this.state.email,\n        onChange: function onChange(event) {\n          return _this2.setState(byPropKey('email', event.target.value));\n        },\n        type: \"text\",\n        placeholder: \"Email Address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        disabled: isInvalid,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \" Reset My Password \"), error && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, error.message));\n    }\n  }]);\n\n  return PasswordForgetForm;\n}(Component);\n\nvar PasswordForgetLink = function PasswordForgetLink() {\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: routes.PASSWORD_FORGET,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Forgot Password?\"));\n};\n\nexport default PwdReset;\nexport { PasswordForgetForm, PasswordForgetLink };","map":{"version":3,"sources":["D:\\uni\\tamago\\ui\\src\\components\\StartPage\\SignForm\\PwdReset.js"],"names":["React","Component","Link","auth","routes","PwdReset","byPropKey","propertyName","value","INITIAL_STATE","email","error","PasswordForgetForm","props","onSubmit","event","state","doPasswordReset","then","setState","catch","preventDefault","isInvalid","target","message","PasswordForgetLink","PASSWORD_FORGET"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,mBAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAO,KAAKC,MAAZ,MAAwB,uBAAxB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,EAEC,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADgB;AAAA,CAAjB;;AAMA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,YAAD,EAAeC,KAAf;AAAA,SAAyB;AAAA,+BACzCD,YADyC,EAC1BC,KAD0B;AAAA,GAAzB;AAAA,CAAlB;;AAIA,IAAMC,aAAa,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,KAAK,EAAE;AAFc,CAAtB;;IAKMC,kB;;;;;AACL,8BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,4FAAMA,KAAN;;AADkB,UAKpBC,QALoB,GAKT,UAACC,KAAD,EAAW;AAAA,UACbL,KADa,GACH,MAAKM,KADF,CACbN,KADa;AAErBP,MAAAA,IAAI,CAACc,eAAL,CAAqBP,KAArB,EACCQ,IADD,CACM,YAAM;AAAE,cAAKC,QAAL,mBAAmBV,aAAnB;AAAsC,OADpD,EAECW,KAFD,CAEO,UAAAT,KAAK,EAAI;AACf,cAAKQ,QAAL,CAAcb,SAAS,CAAC,OAAD,EAAUK,KAAV,CAAvB;AACA,OAJD;AAMAI,MAAAA,KAAK,CAACM,cAAN;AACA,KAdmB;;AAElB,UAAKL,KAAL,qBAAkBP,aAAlB;AAFkB;AAGnB;;;;6BAaS;AAAA;;AAAA,wBAGJ,KAAKO,KAHD;AAAA,UACAN,KADA,eACAA,KADA;AAAA,UAEPC,KAFO,eAEPA,KAFO;AAKR,UAAMW,SAAS,GAAGZ,KAAK,KAAK,EAA5B;AAEA,aACC;AAAM,QAAA,QAAQ,EAAE,KAAKI,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAO,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWN,KAAzB;AACA,QAAA,QAAQ,EAAE,kBAAAK,KAAK;AAAA,iBAAI,MAAI,CAACI,QAAL,CAAcb,SAAS,CAAC,OAAD,EAAUS,KAAK,CAACQ,MAAN,CAAaf,KAAvB,CAAvB,CAAJ;AAAA,SADf;AAEA,QAAA,IAAI,EAAC,MAFL;AAGA,QAAA,WAAW,EAAC,eAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAKC;AAAQ,QAAA,QAAQ,EAAEc,SAAlB;AAA6B,QAAA,IAAI,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BALD,EAOGX,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,KAAK,CAACa,OAAV,CAPZ,CADD;AAUC;;;;EAlC8BvB,S;;AAoCjC,IAAMwB,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,SAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAErB,MAAM,CAACsB,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADD,CAD0B;AAAA,CAA3B;;AAKA,eAAerB,QAAf;AAEA,SACCO,kBADD,EAECa,kBAFD","sourcesContent":["import React, { Component } from 'react';\r\nimport './login-style.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from '../../../firebase';\r\nimport * as routes from './constants/routes.js';\r\n \r\nconst PwdReset = () =>\r\n\t<div> \r\n\t\t<h1>PasswordForget</h1> \r\n\t\t<PasswordForgetForm />\r\n\t</div>\r\n\r\nconst byPropKey = (propertyName, value) => () => ({\r\n\t[propertyName]: value, \r\n});\r\n\r\nconst INITIAL_STATE = { \r\n\temail: '', \r\n\terror: null, \r\n};\r\n\r\nclass PasswordForgetForm extends Component { \r\n\tconstructor(props) { \r\n\t\tsuper(props);\r\n\t\tthis.state = { ...INITIAL_STATE };\r\n}\r\n\r\nonSubmit = (event) => { \r\n\tconst { email } = this.state;\r\n\tauth.doPasswordReset(email) \r\n\t.then(() => { this.setState({ ...INITIAL_STATE }); }) \r\n\t.catch(error => { \r\n\t\tthis.setState(byPropKey('error', error)); \r\n\t});\r\n\r\n\tevent.preventDefault();\r\n}\r\n\r\n\trender() { \r\n\t\tconst { email, \r\n\t\t\terror, \r\n\t\t} = this.state;\r\n\r\n\t\tconst isInvalid = email === '';\r\n\r\n\t\treturn ( \r\n\t\t\t<form onSubmit={this.onSubmit}> \r\n\t\t\t\t<input value={this.state.email} \r\n\t\t\t\tonChange={event => this.setState(byPropKey('email', event.target.value))} \r\n\t\t\t\ttype=\"text\" \r\n\t\t\t\tplaceholder=\"Email Address\" /> \r\n\t\t\t\t<button disabled={isInvalid} type=\"submit\"> Reset My Password </button>\r\n\r\n\t\t\t\t{ error && <p>{error.message}</p> } \r\n\t\t\t</form> );\r\n\t\t}\r\n}\r\nconst PasswordForgetLink = () => \r\n\t<p> \r\n\t\t<Link to={routes.PASSWORD_FORGET}>Forgot Password?</Link> \r\n\t</p>\r\n\r\nexport default PwdReset;\r\n\r\nexport { \r\n\tPasswordForgetForm, \r\n\tPasswordForgetLink, \r\n};"]},"metadata":{},"sourceType":"module"}