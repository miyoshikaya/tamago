{"ast":null,"code":"import _classCallCheck from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\uni\\\\tamago\\\\ui\\\\src\\\\components\\\\HomePage\\\\TestSection\\\\CardsContainer\\\\CardsContainer.js\";\nimport React, { Component } from 'react';\nimport FlashCard from './FlashCard/FlashCard.js';\nimport DrawButton from './DrawButton/DrawButton.js';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport { DB_CONFIG } from './Config/Firebase/db_config';\n\nvar CardsContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CardsContainer, _Component);\n\n  function CardsContainer(props) {\n    var _this;\n\n    _classCallCheck(this, CardsContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CardsContainer).call(this, props));\n    _this.app = firebase.initializeApp(DB_CONFIG);\n    _this.database = _this.app.database().ref().child('cards');\n    _this.updateCard = _this.updateCard.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      cards: [],\n      currentCard: {}\n    };\n    return _this;\n  }\n\n  _createClass(CardsContainer, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      console.log(this.app.database().ref().child('cards'));\n      var currentCards = this.state.cards;\n      this.database.on('child_added', function (snap) {\n        currentCards.push({\n          id: snap.key,\n          eng: snap.val().eng,\n          kan: snap.val().kan,\n          rom: snap.val().rom\n        });\n\n        _this2.setState({\n          cards: currentCards,\n          currentCard: _this2.getRandomCard(currentCards)\n        });\n      });\n    }\n  }, {\n    key: \"getRandomCard\",\n    value: function getRandomCard(currentCards) {\n      var randomIndex = Math.floor(Math.random() * currentCards.length);\n      var card = currentCards[randomIndex];\n\n      if (card === this.state.currentCard) {\n        this.getRandomCard(currentCards);\n      }\n\n      return card;\n    }\n  }, {\n    key: \"updateCard\",\n    value: function updateCard() {\n      var currentCards = this.state.cards;\n      this.setState({\n        currentCard: this.getRandomCard(currentCards)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cardRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(FlashCard, {\n        eng: this.state.currentCard.eng,\n        kan: this.state.currentCard.kan,\n        rom: this.state.currentCard.rom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"buttonRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(DrawButton, {\n        drawCard: this.updateCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CardsContainer;\n}(Component);\n\nexport default CardsContainer;","map":{"version":3,"sources":["D:\\uni\\tamago\\ui\\src\\components\\HomePage\\TestSection\\CardsContainer\\CardsContainer.js"],"names":["React","Component","FlashCard","DrawButton","firebase","DB_CONFIG","CardsContainer","props","app","initializeApp","database","ref","child","updateCard","bind","state","cards","currentCard","console","log","currentCards","on","snap","push","id","key","eng","val","kan","rom","setState","getRandomCard","randomIndex","Math","floor","random","length","card"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport FlashCard from './FlashCard/FlashCard.js';\r\nimport DrawButton from './DrawButton/DrawButton.js';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\n\r\nimport { DB_CONFIG } from './Config/Firebase/db_config';\r\n\r\nclass CardsContainer extends Component {\r\n\r\n\tconstructor(props){\r\n    super(props);\r\n\r\n    this.app = firebase.initializeApp(DB_CONFIG);\r\n    this.database = this.app.database().ref().child('cards');\r\n    this.updateCard = this.updateCard.bind(this);\r\n\r\n    this.state = {\r\n      cards: [],\r\n      currentCard: {} \r\n    }\r\n  }\r\n\r\n  componentWillMount(){\r\n    console.log(this.app.database().ref().child('cards'))\r\n    const currentCards = this.state.cards;\r\n    this.database.on('child_added', snap => {\r\n      currentCards.push({\r\n        id: snap.key,\r\n        eng: snap.val().eng,\r\n        kan: snap.val().kan,\r\n        rom: snap.val().rom,\r\n      })\r\n\r\n      this.setState({\r\n        cards: currentCards,\r\n        currentCard: this.getRandomCard(currentCards)\r\n      })\r\n\r\n    })\r\n  }\r\n\r\n  getRandomCard(currentCards){\r\n    var randomIndex = Math.floor(Math.random() * currentCards.length);\r\n    var card = currentCards[randomIndex];\r\n    if(card === this.state.currentCard){\r\n      this.getRandomCard(currentCards)\r\n    }\r\n\r\n    return(card);\r\n  }\r\n\r\n  \tupdateCard(){\r\n  \t\tconst currentCards = this.state.cards;\r\n\r\n  \t\tthis.setState({\r\n  \t\t\tcurrentCard: this.getRandomCard(currentCards),\r\n\r\n  \t\t})\r\n  \t}\r\n\r\n\r\n\trender() {\r\n\t    return (\r\n\t      <div className=\"App\">\r\n\t        <div className=\"cardRow\">\r\n\t          <FlashCard \teng={this.state.currentCard.eng}\r\n\t            \t\t\tkan={this.state.currentCard.kan}\r\n\t            \t\t\trom={this.state.currentCard.rom}\r\n\t          />\r\n\t        </div>\r\n\t        <div className=\"buttonRow\">\r\n\t        \t<DrawButton drawCard={this.updateCard}/>\r\n\t        </div>\r\n\t      </div>\r\n\t    );\r\n  \t}\r\n\r\n}\r\n\r\nexport default CardsContainer;"]},"metadata":{},"sourceType":"module"}