{"ast":null,"code":"import _classCallCheck from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\uni\\\\tamago\\\\ui\\\\src\\\\components\\\\HomePage\\\\PetSection\\\\PetCard\\\\CountdownTimers\\\\FoodTimer.js\";\nimport React from 'react';\n\nvar Example =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  function Example() {\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Example).call(this));\n    _this.state = {\n      time: {},\n      seconds: 5\n    };\n    _this.timer = 0;\n    _this.startTimer = _this.startTimer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.countDown = _this.countDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"secondsToTime\",\n    value: function secondsToTime(secs) {\n      var hours = Math.floor(secs / (60 * 60));\n      var divisor_for_minutes = secs % (60 * 60);\n      var minutes = Math.floor(divisor_for_minutes / 60);\n      var divisor_for_seconds = divisor_for_minutes % 60;\n      var seconds = Math.ceil(divisor_for_seconds);\n      var obj = {\n        \"h\": hours,\n        \"m\": minutes,\n        \"s\": seconds\n      };\n      return obj;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var timeLeftVar = this.secondsToTime(this.state.seconds);\n      this.setState({\n        time: timeLeftVar\n      });\n    }\n  }, {\n    key: \"startTimer\",\n    value: function startTimer() {\n      if (this.timer === 0 && this.state.seconds > 0) {\n        this.timer = setInterval(this.countDown, 1000);\n        this.setState({\n          seconds: 5\n        });\n      }\n    }\n  }, {\n    key: \"countDown\",\n    value: function countDown() {\n      // Remove one second, set state so a re-render happens.\n      var seconds = this.state.seconds - 1;\n      this.setState({\n        time: this.secondsToTime(seconds),\n        seconds: seconds\n      }); // Check if we're at zero.\n\n      if (seconds === 0) {\n        clearInterval(this.timer); //PET DEAD\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.startTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Start\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"m: \", this.state.time.m, \" s: \", this.state.time.s));\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nexport default Example;","map":{"version":3,"sources":["D:\\uni\\tamago\\ui\\src\\components\\HomePage\\PetSection\\PetCard\\CountdownTimers\\FoodTimer.js"],"names":["React","Example","state","time","seconds","timer","startTimer","bind","countDown","secs","hours","Math","floor","divisor_for_minutes","minutes","divisor_for_seconds","ceil","obj","timeLeftVar","secondsToTime","setState","setInterval","clearInterval","m","s","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,O;;;;;AACJ,qBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,OAAO,EAAE;AAArB,KAAb;AACA,UAAKC,KAAL,GAAa,CAAb;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AACA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,uDAAjB;AALY;AAMb;;;;kCAEaE,I,EAAK;AACjB,UAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,IAAI,KAAK,EAAT,CAAf,CAAZ;AAEA,UAAII,mBAAmB,GAAGJ,IAAI,IAAI,KAAK,EAAT,CAA9B;AACA,UAAIK,OAAO,GAAGH,IAAI,CAACC,KAAL,CAAWC,mBAAmB,GAAG,EAAjC,CAAd;AAEA,UAAIE,mBAAmB,GAAGF,mBAAmB,GAAG,EAAhD;AACA,UAAIT,OAAO,GAAGO,IAAI,CAACK,IAAL,CAAUD,mBAAV,CAAd;AAEA,UAAIE,GAAG,GAAG;AACR,aAAKP,KADG;AAER,aAAKI,OAFG;AAGR,aAAKV;AAHG,OAAV;AAKA,aAAOa,GAAP;AACD;;;wCAEmB;AAClB,UAAIC,WAAW,GAAG,KAAKC,aAAL,CAAmB,KAAKjB,KAAL,CAAWE,OAA9B,CAAlB;AACA,WAAKgB,QAAL,CAAc;AAAEjB,QAAAA,IAAI,EAAEe;AAAR,OAAd;AACD;;;iCAEY;AACX,UAAI,KAAKb,KAAL,KAAe,CAAf,IAAoB,KAAKH,KAAL,CAAWE,OAAX,GAAqB,CAA7C,EAAgD;AAC9C,aAAKC,KAAL,GAAagB,WAAW,CAAC,KAAKb,SAAN,EAAiB,IAAjB,CAAxB;AACA,aAAKY,QAAL,CAAc;AACZhB,UAAAA,OAAO,EAAE;AADG,SAAd;AAGD;AACF;;;gCAEW;AACV;AACA,UAAIA,OAAO,GAAG,KAAKF,KAAL,CAAWE,OAAX,GAAqB,CAAnC;AACA,WAAKgB,QAAL,CAAc;AACZjB,QAAAA,IAAI,EAAE,KAAKgB,aAAL,CAAmBf,OAAnB,CADM;AAEZA,QAAAA,OAAO,EAAEA;AAFG,OAAd,EAHU,CAQV;;AACA,UAAIA,OAAO,KAAK,CAAhB,EAAmB;AACjBkB,QAAAA,aAAa,CAAC,KAAKjB,KAAN,CAAb,CADiB,CAGjB;AACD;AACF;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE,KAAKC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACM,KAAKJ,KAAL,CAAWC,IAAX,CAAgBoB,CADtB,UAC6B,KAAKrB,KAAL,CAAWC,IAAX,CAAgBqB,CAD7C,CAFF,CADF;AAQD;;;;EAjEmBxB,KAAK,CAACyB,S;;AAoE5B,eAAexB,OAAf","sourcesContent":["import React from 'react';\r\n\r\nclass Example extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { time: {}, seconds: 5 };\r\n    this.timer = 0;\r\n    this.startTimer = this.startTimer.bind(this);\r\n    this.countDown = this.countDown.bind(this);\r\n  }\r\n\r\n  secondsToTime(secs){\r\n    let hours = Math.floor(secs / (60 * 60));\r\n\r\n    let divisor_for_minutes = secs % (60 * 60);\r\n    let minutes = Math.floor(divisor_for_minutes / 60);\r\n\r\n    let divisor_for_seconds = divisor_for_minutes % 60;\r\n    let seconds = Math.ceil(divisor_for_seconds);\r\n\r\n    let obj = {\r\n      \"h\": hours,\r\n      \"m\": minutes,\r\n      \"s\": seconds\r\n    };\r\n    return obj;\r\n  }\r\n\r\n  componentDidMount() {\r\n    let timeLeftVar = this.secondsToTime(this.state.seconds);\r\n    this.setState({ time: timeLeftVar });\r\n  }\r\n\r\n  startTimer() {\r\n    if (this.timer === 0 && this.state.seconds > 0) {\r\n      this.timer = setInterval(this.countDown, 1000);\r\n      this.setState({\r\n        seconds: 5,\r\n      })\r\n    }\r\n  }\r\n\r\n  countDown() {\r\n    // Remove one second, set state so a re-render happens.\r\n    let seconds = this.state.seconds - 1;\r\n    this.setState({\r\n      time: this.secondsToTime(seconds),\r\n      seconds: seconds,\r\n    });\r\n    \r\n    // Check if we're at zero.\r\n    if (seconds === 0) { \r\n      clearInterval(this.timer);\r\n      \r\n      //PET DEAD\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <button onClick={this.startTimer}>Start</button>\r\n        <h3>\r\n          m: {this.state.time.m} s: {this.state.time.s}\r\n        </h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Example;"]},"metadata":{},"sourceType":"module"}