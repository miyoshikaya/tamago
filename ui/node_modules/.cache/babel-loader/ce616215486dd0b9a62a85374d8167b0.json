{"ast":null,"code":"import _classCallCheck from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\uni\\\\tamago\\\\ui\\\\src\\\\components\\\\HomePage\\\\SettingSection\\\\Settings.js\";\nimport React from 'react';\nimport './settings.css';\nimport SettingsCard from './SettingsCard/SettingsCard.js';\nimport { firebase } from '../../../firebase'; //import { db } from '../../../firebase';\n\nimport * as routes from '../../../constants/routes';\n\nvar authCondition = function authCondition(authUser) {\n  return !!authUser;\n};\n\nvar Settings =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Settings, _React$Component);\n\n  function Settings(props) {\n    var _this;\n\n    _classCallCheck(this, Settings);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Settings).call(this, props));\n    _this.state = {\n      user: null,\n      languageB: null,\n      languageS: null\n    };\n    _this.changeLang = _this.changeLang.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Settings, [{\n    key: \"changeLang\",\n    value: function changeLang(lang) {\n      if (lang === 'Japanese') {\n        this.setState({\n          languageB: 'Jp',\n          languageS: lang\n        });\n      } else if (lang === 'Korean') {\n        this.setState({\n          languageB: 'Kr',\n          languageS: lang\n        });\n      } else if (lang === 'Polish') {\n        this.setState({\n          languageB: 'Pl',\n          languageS: lang\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      firebase.auth.onAuthStateChanged(function (authUser) {\n        if (!authCondition(authUser)) {\n          window.location = routes.SIGN_IN;\n        }\n      });\n      console.log(this.state);\n\n      if (firebase.auth.currentUser !== null) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(SettingsCard, {\n          languageChange: this.changeLang,\n          languageB: this.state.languageB,\n          languageS: this.state.languageS,\n          userid: firebase.auth.currentUser.uid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }));\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return Settings;\n}(React.Component);\n\nexport default Settings;","map":{"version":3,"sources":["D:\\uni\\tamago\\ui\\src\\components\\HomePage\\SettingSection\\Settings.js"],"names":["React","SettingsCard","firebase","routes","authCondition","authUser","Settings","props","state","user","languageB","languageS","changeLang","bind","lang","setState","auth","onAuthStateChanged","window","location","SIGN_IN","console","log","currentUser","uid","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AAEA,SAASC,QAAT,QAAyB,mBAAzB,C,CACA;;AACA,OAAO,KAAKC,MAAZ,MAAwB,2BAAxB;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,QAAD;AAAA,SAAc,CAAC,CAACA,QAAhB;AAAA,CAAtB;;IAIMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,IADK;AAEXC,MAAAA,SAAS,EAAE,IAFA;AAGXC,MAAAA,SAAS,EAAE;AAHA,KAAb;AAMA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AATiB;AAUlB;;;;+BAEUC,I,EAAM;AACf,UAAIA,IAAI,KAAK,UAAb,EAAyB;AACvB,aAAKC,QAAL,CAAc;AACZL,UAAAA,SAAS,EAAE,IADC;AAEZC,UAAAA,SAAS,EAAEG;AAFC,SAAd;AAID,OALD,MAKO,IAAIA,IAAI,KAAK,QAAb,EAAuB;AAC5B,aAAKC,QAAL,CAAc;AACZL,UAAAA,SAAS,EAAE,IADC;AAEZC,UAAAA,SAAS,EAAEG;AAFC,SAAd;AAID,OALM,MAKA,IAAIA,IAAI,KAAK,QAAb,EAAuB;AAC5B,aAAKC,QAAL,CAAc;AACZL,UAAAA,SAAS,EAAE,IADC;AAEZC,UAAAA,SAAS,EAAEG;AAFC,SAAd;AAID;AACF;;;wCAGmB,CACnB;;;6BAEQ;AAGPZ,MAAAA,QAAQ,CAACc,IAAT,CAAcC,kBAAd,CAAiC,UAAAZ,QAAQ,EAAI;AAC3C,YAAI,CAACD,aAAa,CAACC,QAAD,CAAlB,EAA8B;AAC5Ba,UAAAA,MAAM,CAACC,QAAP,GAAkBhB,MAAM,CAACiB,OAAzB;AACD;AACF,OAJD;AAKAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAjB;;AACA,UAAIN,QAAQ,CAACc,IAAT,CAAcO,WAAd,KAA8B,IAAlC,EAAwC;AACtC,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,YAAD;AAAc,UAAA,cAAc,EAAE,KAAKX,UAAnC;AACE,UAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWE,SADxB;AAEE,UAAA,SAAS,EAAE,KAAKF,KAAL,CAAWG,SAFxB;AAGE,UAAA,MAAM,EAAET,QAAQ,CAACc,IAAT,CAAcO,WAAd,CAA0BC,GAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AASD,OAVD,MAWK;AACH,eAAO,IAAP;AACD;AACF;;;;EA3DoBxB,KAAK,CAACyB,S;;AA8D7B,eAAenB,QAAf","sourcesContent":["import React from 'react';\r\nimport './settings.css'\r\nimport SettingsCard from './SettingsCard/SettingsCard.js';\r\n\r\nimport { firebase } from '../../../firebase';\r\n//import { db } from '../../../firebase';\r\nimport * as routes from '../../../constants/routes';\r\n\r\n\r\nconst authCondition = (authUser) => !!authUser;\r\n\r\n\r\n\r\nclass Settings extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      user: null,\r\n      languageB: null,\r\n      languageS: null,\r\n    }\r\n\r\n    this.changeLang = this.changeLang.bind(this);\r\n  }\r\n\r\n  changeLang(lang) {\r\n    if (lang === 'Japanese') {\r\n      this.setState({\r\n        languageB: 'Jp',\r\n        languageS: lang\r\n      });\r\n    } else if (lang === 'Korean') {\r\n      this.setState({\r\n        languageB: 'Kr',\r\n        languageS: lang\r\n      });\r\n    } else if (lang === 'Polish') {\r\n      this.setState({\r\n        languageB: 'Pl',\r\n        languageS: lang\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n    firebase.auth.onAuthStateChanged(authUser => {\r\n      if (!authCondition(authUser)) {\r\n        window.location = routes.SIGN_IN;\r\n      }\r\n    });\r\n    console.log(this.state);\r\n    if (firebase.auth.currentUser !== null) {\r\n      return (\r\n        <div>\r\n          <SettingsCard languageChange={this.changeLang}\r\n            languageB={this.state.languageB}\r\n            languageS={this.state.languageS}\r\n            userid={firebase.auth.currentUser.uid} />\r\n        </div>\r\n\r\n      );\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Settings;"]},"metadata":{},"sourceType":"module"}