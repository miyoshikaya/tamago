{"ast":null,"code":"var _jsxFileName = \"D:\\\\uni\\\\tamago\\\\ui\\\\src\\\\components\\\\HomePage\\\\QuizSection\\\\components\\\\Quiz.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../components/Question';\nimport QuestionCount from '../components/QuestionCount';\nimport AnswerOption from '../components/AnswerOption';\n\nfunction Quiz(props) {\n  console.log(props.generateNew);\n  props.loadDatabase();\n\n  function renderAnswerOptions(key) {\n    return React.createElement(AnswerOption, {\n      key: key.content,\n      answerContent: key.content,\n      answerType: key.type,\n      answer: props.answer,\n      questionId: props.questionId,\n      onAnswerSelected: props.onAnswerSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(CSSTransitionGroup, {\n    className: \"container\",\n    component: \"div\",\n    transitionName: \"fade\",\n    transitionEnterTimeout: 800,\n    transitionLeaveTimeout: 500,\n    transitionAppear: true,\n    transitionAppearTimeout: 500,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    key: props.questionId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(QuestionCount, {\n    counter: props.questionId,\n    total: props.questionTotal,\n    currQuestion: props.currQuestion,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Question, {\n    content: props.currQuestion,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    className: \"currentAnswers\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, props.currentAnswers.map(renderAnswerOptions))));\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  currentAnswers: PropTypes.array.isRequired,\n  currQuestion: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired,\n  loadDatabase: PropTypes.func.isRequired\n};\nexport default Quiz;","map":{"version":3,"sources":["D:\\uni\\tamago\\ui\\src\\components\\HomePage\\QuizSection\\components\\Quiz.js"],"names":["React","PropTypes","CSSTransitionGroup","Question","QuestionCount","AnswerOption","Quiz","props","console","log","generateNew","loadDatabase","renderAnswerOptions","key","content","type","answer","questionId","onAnswerSelected","questionTotal","currQuestion","currentAnswers","map","propTypes","string","isRequired","array","number","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,QAAmC,wBAAnC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,WAAlB;AACAH,EAAAA,KAAK,CAACI,YAAN;;AACA,WAASC,mBAAT,CAA6BC,GAA7B,EAAkC;AAChC,WACE,oBAAC,YAAD;AACE,MAAA,GAAG,EAAEA,GAAG,CAACC,OADX;AAEE,MAAA,aAAa,EAAED,GAAG,CAACC,OAFrB;AAGE,MAAA,UAAU,EAAED,GAAG,CAACE,IAHlB;AAIE,MAAA,MAAM,EAAER,KAAK,CAACS,MAJhB;AAKE,MAAA,UAAU,EAAET,KAAK,CAACU,UALpB;AAME,MAAA,gBAAgB,EAAEV,KAAK,CAACW,gBAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD;;AAED,SACE,oBAAC,kBAAD;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,SAAS,EAAC,KAFZ;AAGE,IAAA,cAAc,EAAC,MAHjB;AAIE,IAAA,sBAAsB,EAAE,GAJ1B;AAKE,IAAA,sBAAsB,EAAE,GAL1B;AAME,IAAA,gBAAgB,MANlB;AAOE,IAAA,uBAAuB,EAAE,GAP3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AAAK,IAAA,GAAG,EAAEX,KAAK,CAACU,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEV,KAAK,CAACU,UAA9B;AAA0C,IAAA,KAAK,EAAEV,KAAK,CAACY,aAAvD;AAAsE,IAAA,YAAY,EAAEZ,KAAK,CAACa,YAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEb,KAAK,CAACa,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,KAAK,CAACc,cAAN,CAAqBC,GAArB,CAAyBV,mBAAzB,CADH,CAHF,CATF,CADF;AAmBD;;AAEDN,IAAI,CAACiB,SAAL,GAAiB;AACfP,EAAAA,MAAM,EAAEf,SAAS,CAACuB,MAAV,CAAiBC,UADV;AAEfJ,EAAAA,cAAc,EAAEpB,SAAS,CAACyB,KAAV,CAAgBD,UAFjB;AAGfL,EAAAA,YAAY,EAAEnB,SAAS,CAACuB,MAAV,CAAiBC,UAHhB;AAIfR,EAAAA,UAAU,EAAEhB,SAAS,CAAC0B,MAAV,CAAiBF,UAJd;AAKfN,EAAAA,aAAa,EAAElB,SAAS,CAAC0B,MAAV,CAAiBF,UALjB;AAMfP,EAAAA,gBAAgB,EAAEjB,SAAS,CAAC2B,IAAV,CAAeH,UANlB;AAOfd,EAAAA,YAAY,EAAEV,SAAS,CAAC2B,IAAV,CAAeH;AAPd,CAAjB;AAWA,eAAenB,IAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport Question from '../components/Question';\r\nimport QuestionCount from '../components/QuestionCount';\r\nimport AnswerOption from '../components/AnswerOption';\r\n\r\nfunction Quiz(props) {\r\n  console.log(props.generateNew)\r\n  props.loadDatabase();\r\n  function renderAnswerOptions(key) {\r\n    return (\r\n      <AnswerOption\r\n        key={key.content}\r\n        answerContent={key.content}\r\n        answerType={key.type}\r\n        answer={props.answer}\r\n        questionId={props.questionId}\r\n        onAnswerSelected={props.onAnswerSelected}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <CSSTransitionGroup\r\n      className=\"container\"\r\n      component=\"div\"\r\n      transitionName=\"fade\"\r\n      transitionEnterTimeout={800}\r\n      transitionLeaveTimeout={500}\r\n      transitionAppear\r\n      transitionAppearTimeout={500}\r\n    >\r\n      <div key={props.questionId}>\r\n        <QuestionCount counter={props.questionId} total={props.questionTotal} currQuestion={props.currQuestion} />\r\n        <Question content={props.currQuestion} />\r\n        <ul className=\"currentAnswers\">\r\n          {props.currentAnswers.map(renderAnswerOptions)}\r\n        </ul>\r\n      </div>\r\n    </CSSTransitionGroup>\r\n  );\r\n}\r\n\r\nQuiz.propTypes = {\r\n  answer: PropTypes.string.isRequired,\r\n  currentAnswers: PropTypes.array.isRequired,\r\n  currQuestion: PropTypes.string.isRequired,\r\n  questionId: PropTypes.number.isRequired,\r\n  questionTotal: PropTypes.number.isRequired,\r\n  onAnswerSelected: PropTypes.func.isRequired,\r\n  loadDatabase: PropTypes.func.isRequired,\r\n\r\n};\r\n\r\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}