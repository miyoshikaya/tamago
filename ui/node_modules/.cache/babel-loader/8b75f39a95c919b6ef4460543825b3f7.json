{"ast":null,"code":"import _defineProperty from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\uni\\\\tamago\\\\ui\\\\src\\\\components\\\\HomePage\\\\QuizSection\\\\QuizCard\\\\QuizCard.js\";\nimport React, { Component } from 'react';\nimport './quizcard.css';\nimport Quiz from './../components/Quiz.js';\nimport Result from './../components/Result.js';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/database';\nimport { db } from '../../../../firebase';\n\nvar QuizCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuizCard, _Component);\n\n  function QuizCard(props) {\n    var _this;\n\n    _classCallCheck(this, QuizCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuizCard).call(this, props));\n\n    if (firebase.apps.length) {\n      _this.app = firebase.app().firestore();\n      _this.state = {\n        counter: 0,\n        questionId: 1,\n        questions: [],\n        ansOpt: [],\n        currentAnswers: [],\n        currQuestion: '',\n        question: '',\n        questionTotal: 10,\n        answerOptions: [],\n        answer: '',\n        answersCount: {\n          correct: 0,\n          incorrect: 0\n        },\n        result: '',\n        category: '',\n        quizDone: false,\n        firstSetup: true,\n        foodItems: 0,\n        playItems: 0,\n        washItems: 0,\n        musicItems: 0\n      };\n      _this.handleAnswerSelected = _this.handleAnswerSelected.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      _this.loadDatabase = _this.loadDatabase.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      _this.quizUndone = _this.quizUndone.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    }\n\n    return _this;\n  }\n\n  _createClass(QuizCard, [{\n    key: \"loadDatabase\",\n    value: function () {\n      var _loadDatabase = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var questionList, _questionList;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.state.firstSetup === true)) {\n                  _context.next = 25;\n                  break;\n                }\n\n                this.setState({\n                  firstSetup: false\n                });\n                this.database = firebase.app().database().ref().child(\"db/0/flashcards/1/jpn-cards/0/jpn-cards-animals\");\n                questionList = [];\n                this.props.generatedQuiz();\n                _context.next = 7;\n                return this.database.on('child_added', function (snap) {\n                  questionList.push({\n                    id: snap.key,\n                    eng: snap.val().eng,\n                    kan: snap.val().kan,\n                    rom: snap.val().rom\n                  });\n                });\n\n              case 7:\n                //console.log(questionList.length);\n                this.database = firebase.app().database().ref().child(\"db/0/flashcards/1/jpn-cards/1/jpn-cards-people\");\n                this.props.generatedQuiz();\n                _context.next = 11;\n                return this.database.on('child_added', function (snap) {\n                  questionList.push({\n                    id: snap.key,\n                    eng: snap.val().eng,\n                    kan: snap.val().kan,\n                    rom: snap.val().rom\n                  });\n                });\n\n              case 11:\n                //console.log(questionList.length);\n                this.database = firebase.app().database().ref().child(\"db/0/flashcards/1/jpn-cards/2/jpn-cards-food\");\n                this.props.generatedQuiz();\n                _context.next = 15;\n                return this.database.on('child_added', function (snap) {\n                  questionList.push({\n                    id: snap.key,\n                    eng: snap.val().eng,\n                    kan: snap.val().kan,\n                    rom: snap.val().rom\n                  });\n                });\n\n              case 15:\n                //console.log(questionList.length);\n                this.database = firebase.app().database().ref().child(\"db/0/flashcards/1/jpn-cards/3/jpn-cards-school\");\n                this.props.generatedQuiz();\n                _context.next = 19;\n                return this.database.on('child_added', function (snap) {\n                  questionList.push({\n                    id: snap.key,\n                    eng: snap.val().eng,\n                    kan: snap.val().kan,\n                    rom: snap.val().rom\n                  });\n                });\n\n              case 19:\n                this.database = firebase.app().database().ref().child(\"db/0/flashcards/1/jpn-cards/4/jpn-cards-house\");\n                this.props.generatedQuiz();\n                _context.next = 23;\n                return this.database.on('child_added', function (snap) {\n                  questionList.push({\n                    id: snap.key,\n                    eng: snap.val().eng,\n                    kan: snap.val().kan,\n                    rom: snap.val().rom\n                  });\n                });\n\n              case 23:\n                _context.next = 57;\n                break;\n\n              case 25:\n                if (!(this.props.generateNew === true)) {\n                  _context.next = 57;\n                  break;\n                }\n\n                this.app = firebase.app().firestore();\n                _context.t0 = this.props.category;\n                _context.next = _context.t0 === 'Animals' ? 30 : _context.t0 === 'People' ? 33 : _context.t0 === 'Food' ? 36 : _context.t0 === 'School' ? 39 : _context.t0 === 'House' ? 42 : 45;\n                break;\n\n              case 30:\n                console.log(this.props.category);\n                this.database = firebase.app().database().ref().child(\"db/0/flashcards/1/jpn-cards/0/jpn-cards-animals\");\n                return _context.abrupt(\"break\", 46);\n\n              case 33:\n                console.log(this.props.category);\n                this.database = firebase.app().database().ref().child(\"db/0/flashcards/1/jpn-cards/1/jpn-cards-people\");\n                return _context.abrupt(\"break\", 46);\n\n              case 36:\n                console.log(this.props.category);\n                this.database = firebase.app().database().ref().child(\"db/0/flashcards/1/jpn-cards/2/jpn-cards-food\");\n                return _context.abrupt(\"break\", 46);\n\n              case 39:\n                console.log(this.props.category);\n                this.database = firebase.app().database().ref().child(\"db/0/flashcards/1/jpn-cards/3/jpn-cards-school\");\n                return _context.abrupt(\"break\", 46);\n\n              case 42:\n                console.log(this.props.category);\n                this.database = firebase.app().database().ref().child(\"db/0/flashcards/1/jpn-cards/4/jpn-cards-house\");\n                return _context.abrupt(\"break\", 46);\n\n              case 45:\n                return _context.abrupt(\"break\", 46);\n\n              case 46:\n                _questionList = [];\n                console.log('1');\n                this.setState({\n                  counter: 0,\n                  questionId: 1,\n                  questions: [],\n                  ansOpt: [],\n                  currentAnswers: [],\n                  currQuestion: '',\n                  question: '',\n                  questionTotal: 10,\n                  answerOptions: [],\n                  answer: '',\n                  answersCount: {\n                    correct: 0,\n                    incorrect: 0\n                  },\n                  result: '',\n                  category: '',\n                  quizDone: false\n                });\n                console.log('2');\n                this.props.generatedQuiz();\n                _context.next = 53;\n                return this.database.on('child_added', function (snap) {\n                  _questionList.push({\n                    id: snap.key,\n                    eng: snap.val().eng,\n                    kan: snap.val().kan,\n                    rom: snap.val().rom\n                  });\n                });\n\n              case 53:\n                console.log('3');\n                console.log(_questionList.length);\n\n                if (_questionList.length > 0) {\n                  this.shuffleArray(_questionList);\n                  console.log(_questionList[0].eng);\n                  this.setState({\n                    questions: _questionList\n                  });\n                }\n\n                this.fillQuestions();\n\n              case 57:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function loadDatabase() {\n        return _loadDatabase.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"fillQuestions\",\n    value: function fillQuestions() {\n      if (firebase.apps.length) {\n        var questionList = this.state.questions;\n        var optionList = [];\n\n        for (var index = 0; index < questionList.length; ++index) {\n          var firstIndex = Math.floor(Math.random() * questionList.length);\n\n          while (firstIndex === index) {\n            firstIndex = Math.floor(Math.random() * questionList.length);\n          }\n\n          var options = [];\n          options.push({\n            type: \"incorrect\",\n            content: questionList[firstIndex].kan\n          });\n          var secondIndex = Math.floor(Math.random() * questionList.length);\n\n          while (secondIndex === index || secondIndex === firstIndex) {\n            secondIndex = Math.floor(Math.random() * questionList.length);\n          }\n\n          options.push({\n            type: \"incorrect\",\n            content: questionList[secondIndex].kan\n          });\n          var thirdIndex = Math.floor(Math.random() * questionList.length);\n\n          while (thirdIndex === index || thirdIndex === firstIndex || thirdIndex === secondIndex) {\n            thirdIndex = Math.floor(Math.random() * questionList.length);\n          }\n\n          options.push({\n            type: \"incorrect\",\n            content: questionList[thirdIndex].kan\n          });\n          var rightIndex = Math.floor(Math.random() * options.length); //console.log(rightIndex);\n\n          options[rightIndex].type = \"correct\";\n          options[rightIndex].content = questionList[index].kan;\n          optionList.push({\n            answers: options,\n            rightAnswer: rightIndex\n          });\n        }\n\n        if (questionList.length > 0) {\n          this.setState({\n            ansOpt: optionList,\n            currentAnswers: optionList[0].answers,\n            currQuestion: 'Which word means ' + this.state.questions[0].eng + ' in Japanese ? '\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {}\n  }, {\n    key: \"shuffleArray\",\n    value: function shuffleArray(array) {\n      var currentIndex = array.length,\n          temporaryValue,\n          randomIndex; // While there remain elements to shuffle...\n\n      while (0 !== currentIndex) {\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1; // And swap it with the current element.\n\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n      }\n\n      return array;\n    }\n  }, {\n    key: \"setUserAnswer\",\n    value: function setUserAnswer(answer) {\n      console.log(answer);\n      this.setState(function (state, props) {\n        return {\n          answersCount: _objectSpread({}, state.answersCount, _defineProperty({}, answer, state.answersCount[answer] + 1)),\n          answer: answer\n        };\n      });\n    }\n  }, {\n    key: \"handleAnswerSelected\",\n    value: function handleAnswerSelected(event) {\n      var _this2 = this;\n\n      this.setUserAnswer(event.currentTarget.value);\n\n      if (this.state.questionId < this.state.questionTotal) {\n        setTimeout(function () {\n          return _this2.setNextQuestion();\n        }, 300);\n      } else {\n        setTimeout(function () {\n          return _this2.setResults(_this2.getResults());\n        }, 300);\n      }\n    }\n  }, {\n    key: \"setNextQuestion\",\n    value: function setNextQuestion() {\n      var counter = this.state.counter + 1;\n      var questionId = this.state.questionId + 1;\n      this.setState({\n        counter: counter,\n        questionId: questionId,\n        currQuestion: 'Which word means ' + this.state.questions[counter].eng + ' in Japanese?',\n        currentAnswers: this.state.ansOpt[counter].answers,\n        answer: ''\n      });\n    }\n  }, {\n    key: \"getResults\",\n    value: function getResults() {\n      var answersCount = this.state.answersCount;\n      var questionsTotal = this.state.questionTotal;\n      var resultPercentage = answersCount.correct / questionsTotal;\n      var resultString = resultPercentage * 100.0 + '%';\n\n      if (resultPercentage * 100.0 < 50) {\n        resultString = resultString + '. Score 70% an above to get stuff for your pet.';\n      } else {\n        //losowanie itemków\n        var min = 1;\n        var max = 4;\n        var itemType = Math.floor(min + Math.random() * (max - min));\n\n        switch (itemType) {\n          case 1:\n            if (resultPercentage > 0.49 && resultPercentage < 0.71) {\n              resultString = resultString + '! You receive 1 ⚾!';\n              this.setState({\n                playItems: 1\n              });\n            }\n\n            if (resultPercentage > 0.7 && resultPercentage < 0.91) {\n              resultString = resultString + '! You receive 2 ⚾!';\n              this.setState({\n                playItems: 2\n              });\n            }\n\n            if (resultPercentage > 0.9) {\n              resultString = resultString + '! You receive 3 ⚾!';\n              this.setState({\n                playItems: 3\n              });\n            }\n\n            break;\n\n          case 2:\n            if (resultPercentage > 0.49 && resultPercentage < 0.71) {\n              resultString = resultString + '! You receive 1 🍌!';\n              this.setState({\n                foodItems: 1\n              });\n            }\n\n            if (resultPercentage > 0.7 && resultPercentage < 0.91) {\n              resultString = resultString + '! You receive 2 🍌!';\n              this.setState({\n                foodItems: 2\n              });\n            }\n\n            if (resultPercentage > 0.9) {\n              resultString = resultString + '! You receive 3 🍌!';\n              this.setState({\n                foodItems: 3\n              });\n            }\n\n            break;\n\n          case 3:\n            if (resultPercentage > 0.49 && resultPercentage < 0.71) {\n              resultString = resultString + '! You receive 1 💦!';\n              this.setState({\n                washItems: 1\n              });\n            }\n\n            if (resultPercentage > 0.7 && resultPercentage < 0.91) {\n              resultString = resultString + '! You receive 2 💦!';\n              this.setState({\n                washItems: 2\n              });\n            }\n\n            if (resultPercentage > 0.9) {\n              resultString = resultString + '! You receive 3 💦!';\n              this.setState({\n                washItems: 3\n              });\n            }\n\n            break;\n\n          case 4:\n            if (resultPercentage > 0.49 && resultPercentage < 0.71) {\n              resultString = resultString + '! You receive 1 🎹!';\n              this.setState({\n                musicItems: 1\n              });\n            }\n\n            if (resultPercentage > 0.7 && resultPercentage < 0.91) {\n              resultString = resultString + '! You receive 2 🎹!';\n              this.setState({\n                musicItems: 2\n              });\n            }\n\n            if (resultPercentage > 0.9) {\n              resultString = resultString + '! You receive 3 🎹!';\n              this.setState({\n                musicItems: 3\n              });\n            }\n\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      console.log('play items: ' + this.state.playItems + ',' + 'food items: ' + this.state.foodItems + ',' + 'wash items: ' + this.state.washItems + ',' + 'music items: ' + this.state.musicItems + '.'); //tutaj dodanie do aktualnej liczby itemków do bazy danych\n      //\n      //\n\n      return resultString;\n    }\n  }, {\n    key: \"quizUndone\",\n    value: function quizUndone() {\n      this.setState({\n        quizDone: false\n      });\n    }\n  }, {\n    key: \"setResults\",\n    value: function setResults(result) {\n      this.setState({\n        result: result,\n        quizDone: true\n      });\n      this.props.quizComplete(this.state.quizDone);\n      this.loadDatabase();\n    }\n  }, {\n    key: \"renderQuiz\",\n    value: function renderQuiz() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, React.createElement(Quiz, {\n        answer: this.state.answer,\n        currentAnswers: this.state.currentAnswers,\n        answerOptions: this.state.answerOptions,\n        questionId: this.state.questionId,\n        question: this.state.question,\n        questionTotal: this.state.questionTotal,\n        onAnswerSelected: this.handleAnswerSelected,\n        loadDatabase: this.loadDatabase,\n        questions: this.state.questions,\n        ansOpt: this.state.ansOpt,\n        currQuestion: this.state.currQuestion,\n        generateNew: this.props.generateNew,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderResult\",\n    value: function renderResult() {\n      return React.createElement(Result, {\n        quizResult: this.state.result,\n        generateNew: this.props.generateNew,\n        quizUndone: this.quizUndone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }, this.state.quizDone ? this.renderResult() : this.renderQuiz());\n    }\n  }]);\n\n  return QuizCard;\n}(Component);\n\nexport default QuizCard;","map":{"version":3,"sources":["D:\\uni\\tamago\\ui\\src\\components\\HomePage\\QuizSection\\QuizCard\\QuizCard.js"],"names":["React","Component","Quiz","Result","firebase","db","QuizCard","props","apps","length","app","firestore","state","counter","questionId","questions","ansOpt","currentAnswers","currQuestion","question","questionTotal","answerOptions","answer","answersCount","correct","incorrect","result","category","quizDone","firstSetup","foodItems","playItems","washItems","musicItems","handleAnswerSelected","bind","loadDatabase","quizUndone","setState","database","ref","child","questionList","generatedQuiz","on","snap","push","id","key","eng","val","kan","rom","generateNew","console","log","shuffleArray","fillQuestions","optionList","index","firstIndex","Math","floor","random","options","type","content","secondIndex","thirdIndex","rightIndex","answers","rightAnswer","array","currentIndex","temporaryValue","randomIndex","event","setUserAnswer","currentTarget","value","setTimeout","setNextQuestion","setResults","getResults","questionsTotal","resultPercentage","resultString","min","max","itemType","quizComplete","renderResult","renderQuiz"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,mBAAP;AACA,SAASC,EAAT,QAAmB,sBAAnB;;IAEMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;;AAGA,QAAIH,QAAQ,CAACI,IAAT,CAAcC,MAAlB,EAA0B;AAExB,YAAKC,GAAL,GAAWN,QAAQ,CAACM,GAAT,GAAeC,SAAf,EAAX;AAEA,YAAKC,KAAL,GAAa;AACXC,QAAAA,OAAO,EAAE,CADE;AAEXC,QAAAA,UAAU,EAAE,CAFD;AAGXC,QAAAA,SAAS,EAAE,EAHA;AAIXC,QAAAA,MAAM,EAAE,EAJG;AAKXC,QAAAA,cAAc,EAAE,EALL;AAMXC,QAAAA,YAAY,EAAE,EANH;AAOXC,QAAAA,QAAQ,EAAE,EAPC;AAQXC,QAAAA,aAAa,EAAE,EARJ;AASXC,QAAAA,aAAa,EAAE,EATJ;AAUXC,QAAAA,MAAM,EAAE,EAVG;AAWXC,QAAAA,YAAY,EAAE;AACZC,UAAAA,OAAO,EAAE,CADG;AAEZC,UAAAA,SAAS,EAAE;AAFC,SAXH;AAeXC,QAAAA,MAAM,EAAE,EAfG;AAgBXC,QAAAA,QAAQ,EAAE,EAhBC;AAiBXC,QAAAA,QAAQ,EAAE,KAjBC;AAkBXC,QAAAA,UAAU,EAAE,IAlBD;AAoBXC,QAAAA,SAAS,EAAE,CApBA;AAqBXC,QAAAA,SAAS,EAAE,CArBA;AAsBXC,QAAAA,SAAS,EAAE,CAtBA;AAuBXC,QAAAA,UAAU,EAAE;AAvBD,OAAb;AA0BA,YAAKC,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BC,IAA1B,uDAA5B;AACA,YAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,uDAApB;AACA,YAAKE,UAAL,GAAkB,MAAKA,UAAL,CAAgBF,IAAhB,uDAAlB;AACD;;AArCgB;AAsClB;;;;;;;;;;;;;;sBAGK,KAAKvB,KAAL,CAAWiB,UAAX,KAA0B,I;;;;;AAE5B,qBAAKS,QAAL,CAAc;AACZT,kBAAAA,UAAU,EAAE;AADA,iBAAd;AAKA,qBAAKU,QAAL,GAAgBnC,QAAQ,CAACM,GAAT,GAAe6B,QAAf,GAA0BC,GAA1B,GAAgCC,KAAhC,CAAsC,iDAAtC,CAAhB;AACMC,gBAAAA,Y,GAAe,E;AAErB,qBAAKnC,KAAL,CAAWoC,aAAX;;uBACM,KAAKJ,QAAL,CAAcK,EAAd,CAAiB,aAAjB,EAAgC,UAAAC,IAAI,EAAI;AAC5CH,kBAAAA,YAAY,CAACI,IAAb,CAAkB;AAChBC,oBAAAA,EAAE,EAAEF,IAAI,CAACG,GADO;AAEhBC,oBAAAA,GAAG,EAAEJ,IAAI,CAACK,GAAL,GAAWD,GAFA;AAGhBE,oBAAAA,GAAG,EAAEN,IAAI,CAACK,GAAL,GAAWC,GAHA;AAIhBC,oBAAAA,GAAG,EAAEP,IAAI,CAACK,GAAL,GAAWE;AAJA,mBAAlB;AAMD,iBAPK,C;;;AAQN;AACA,qBAAKb,QAAL,GAAgBnC,QAAQ,CAACM,GAAT,GAAe6B,QAAf,GAA0BC,GAA1B,GAAgCC,KAAhC,CAAsC,gDAAtC,CAAhB;AAEA,qBAAKlC,KAAL,CAAWoC,aAAX;;uBACM,KAAKJ,QAAL,CAAcK,EAAd,CAAiB,aAAjB,EAAgC,UAAAC,IAAI,EAAI;AAC5CH,kBAAAA,YAAY,CAACI,IAAb,CAAkB;AAChBC,oBAAAA,EAAE,EAAEF,IAAI,CAACG,GADO;AAEhBC,oBAAAA,GAAG,EAAEJ,IAAI,CAACK,GAAL,GAAWD,GAFA;AAGhBE,oBAAAA,GAAG,EAAEN,IAAI,CAACK,GAAL,GAAWC,GAHA;AAIhBC,oBAAAA,GAAG,EAAEP,IAAI,CAACK,GAAL,GAAWE;AAJA,mBAAlB;AAMD,iBAPK,C;;;AAQN;AACA,qBAAKb,QAAL,GAAgBnC,QAAQ,CAACM,GAAT,GAAe6B,QAAf,GAA0BC,GAA1B,GAAgCC,KAAhC,CAAsC,8CAAtC,CAAhB;AAEA,qBAAKlC,KAAL,CAAWoC,aAAX;;uBACM,KAAKJ,QAAL,CAAcK,EAAd,CAAiB,aAAjB,EAAgC,UAAAC,IAAI,EAAI;AAC5CH,kBAAAA,YAAY,CAACI,IAAb,CAAkB;AAChBC,oBAAAA,EAAE,EAAEF,IAAI,CAACG,GADO;AAEhBC,oBAAAA,GAAG,EAAEJ,IAAI,CAACK,GAAL,GAAWD,GAFA;AAGhBE,oBAAAA,GAAG,EAAEN,IAAI,CAACK,GAAL,GAAWC,GAHA;AAIhBC,oBAAAA,GAAG,EAAEP,IAAI,CAACK,GAAL,GAAWE;AAJA,mBAAlB;AAMD,iBAPK,C;;;AAQN;AAEA,qBAAKb,QAAL,GAAgBnC,QAAQ,CAACM,GAAT,GAAe6B,QAAf,GAA0BC,GAA1B,GAAgCC,KAAhC,CAAsC,gDAAtC,CAAhB;AAEA,qBAAKlC,KAAL,CAAWoC,aAAX;;uBACM,KAAKJ,QAAL,CAAcK,EAAd,CAAiB,aAAjB,EAAgC,UAAAC,IAAI,EAAI;AAC5CH,kBAAAA,YAAY,CAACI,IAAb,CAAkB;AAChBC,oBAAAA,EAAE,EAAEF,IAAI,CAACG,GADO;AAEhBC,oBAAAA,GAAG,EAAEJ,IAAI,CAACK,GAAL,GAAWD,GAFA;AAGhBE,oBAAAA,GAAG,EAAEN,IAAI,CAACK,GAAL,GAAWC,GAHA;AAIhBC,oBAAAA,GAAG,EAAEP,IAAI,CAACK,GAAL,GAAWE;AAJA,mBAAlB;AAMD,iBAPK,C;;;AASN,qBAAKb,QAAL,GAAgBnC,QAAQ,CAACM,GAAT,GAAe6B,QAAf,GAA0BC,GAA1B,GAAgCC,KAAhC,CAAsC,+CAAtC,CAAhB;AAEA,qBAAKlC,KAAL,CAAWoC,aAAX;;uBACM,KAAKJ,QAAL,CAAcK,EAAd,CAAiB,aAAjB,EAAgC,UAAAC,IAAI,EAAI;AAC5CH,kBAAAA,YAAY,CAACI,IAAb,CAAkB;AAChBC,oBAAAA,EAAE,EAAEF,IAAI,CAACG,GADO;AAEhBC,oBAAAA,GAAG,EAAEJ,IAAI,CAACK,GAAL,GAAWD,GAFA;AAGhBE,oBAAAA,GAAG,EAAEN,IAAI,CAACK,GAAL,GAAWC,GAHA;AAIhBC,oBAAAA,GAAG,EAAEP,IAAI,CAACK,GAAL,GAAWE;AAJA,mBAAlB;AAMD,iBAPK,C;;;;;;;sBAaF,KAAK7C,KAAL,CAAW8C,WAAX,KAA2B,I;;;;;AAC7B,qBAAK3C,GAAL,GAAWN,QAAQ,CAACM,GAAT,GAAeC,SAAf,EAAX;8BAEQ,KAAKJ,KAAL,CAAWoB,Q;gDACZ,S,wBAKA,Q,wBAKA,M,wBAMA,Q,wBAMA,O;;;;AApBH2B,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhD,KAAL,CAAWoB,QAAvB;AACA,qBAAKY,QAAL,GAAgBnC,QAAQ,CAACM,GAAT,GAAe6B,QAAf,GAA0BC,GAA1B,GAAgCC,KAAhC,CAAsC,iDAAtC,CAAhB;;;;AAIAa,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhD,KAAL,CAAWoB,QAAvB;AACA,qBAAKY,QAAL,GAAgBnC,QAAQ,CAACM,GAAT,GAAe6B,QAAf,GAA0BC,GAA1B,GAAgCC,KAAhC,CAAsC,gDAAtC,CAAhB;;;;AAIAa,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhD,KAAL,CAAWoB,QAAvB;AACA,qBAAKY,QAAL,GAAgBnC,QAAQ,CAACM,GAAT,GAAe6B,QAAf,GAA0BC,GAA1B,GAAgCC,KAAhC,CAAsC,8CAAtC,CAAhB;;;;AAKAa,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhD,KAAL,CAAWoB,QAAvB;AACA,qBAAKY,QAAL,GAAgBnC,QAAQ,CAACM,GAAT,GAAe6B,QAAf,GAA0BC,GAA1B,GAAgCC,KAAhC,CAAsC,gDAAtC,CAAhB;;;;AAKAa,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhD,KAAL,CAAWoB,QAAvB;AACA,qBAAKY,QAAL,GAAgBnC,QAAQ,CAACM,GAAT,GAAe6B,QAAf,GAA0BC,GAA1B,GAAgCC,KAAhC,CAAsC,+CAAtC,CAAhB;;;;;;;AAMEC,gBAAAA,a,GAAe,E;AAErBY,gBAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,qBAAKjB,QAAL,CAAc;AACZzB,kBAAAA,OAAO,EAAE,CADG;AAEZC,kBAAAA,UAAU,EAAE,CAFA;AAGZC,kBAAAA,SAAS,EAAE,EAHC;AAIZC,kBAAAA,MAAM,EAAE,EAJI;AAKZC,kBAAAA,cAAc,EAAE,EALJ;AAMZC,kBAAAA,YAAY,EAAE,EANF;AAOZC,kBAAAA,QAAQ,EAAE,EAPE;AAQZC,kBAAAA,aAAa,EAAE,EARH;AASZC,kBAAAA,aAAa,EAAE,EATH;AAUZC,kBAAAA,MAAM,EAAE,EAVI;AAWZC,kBAAAA,YAAY,EAAE;AACZC,oBAAAA,OAAO,EAAE,CADG;AAEZC,oBAAAA,SAAS,EAAE;AAFC,mBAXF;AAeZC,kBAAAA,MAAM,EAAE,EAfI;AAgBZC,kBAAAA,QAAQ,EAAE,EAhBE;AAiBZC,kBAAAA,QAAQ,EAAE;AAjBE,iBAAd;AAoBA0B,gBAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,qBAAKhD,KAAL,CAAWoC,aAAX;;uBACM,KAAKJ,QAAL,CAAcK,EAAd,CAAiB,aAAjB,EAAgC,UAAAC,IAAI,EAAI;AAC5CH,kBAAAA,aAAY,CAACI,IAAb,CAAkB;AAChBC,oBAAAA,EAAE,EAAEF,IAAI,CAACG,GADO;AAEhBC,oBAAAA,GAAG,EAAEJ,IAAI,CAACK,GAAL,GAAWD,GAFA;AAGhBE,oBAAAA,GAAG,EAAEN,IAAI,CAACK,GAAL,GAAWC,GAHA;AAIhBC,oBAAAA,GAAG,EAAEP,IAAI,CAACK,GAAL,GAAWE;AAJA,mBAAlB;AAMD,iBAPK,C;;;AAQNE,gBAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAD,gBAAAA,OAAO,CAACC,GAAR,CAAYb,aAAY,CAACjC,MAAzB;;AACA,oBAAIiC,aAAY,CAACjC,MAAb,GAAsB,CAA1B,EAA6B;AAE3B,uBAAK+C,YAAL,CAAkBd,aAAlB;AACAY,kBAAAA,OAAO,CAACC,GAAR,CAAYb,aAAY,CAAC,CAAD,CAAZ,CAAgBO,GAA5B;AACA,uBAAKX,QAAL,CAAc;AACZvB,oBAAAA,SAAS,EAAE2B;AADC,mBAAd;AAID;;AACD,qBAAKe,aAAL;;;;;;;;;;;;;;;;oCAKU;AAEd,UAAIrD,QAAQ,CAACI,IAAT,CAAcC,MAAlB,EAA0B;AAExB,YAAMiC,YAAY,GAAG,KAAK9B,KAAL,CAAWG,SAAhC;AACA,YAAM2C,UAAU,GAAG,EAAnB;;AAEA,aAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGjB,YAAY,CAACjC,MAAzC,EAAiD,EAAEkD,KAAnD,EAA0D;AAExD,cAAIC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBrB,YAAY,CAACjC,MAAxC,CAAjB;;AAEA,iBAAOmD,UAAU,KAAKD,KAAtB,EAA6B;AAC3BC,YAAAA,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBrB,YAAY,CAACjC,MAAxC,CAAb;AACD;;AACD,cAAMuD,OAAO,GAAG,EAAhB;AACAA,UAAAA,OAAO,CAAClB,IAAR,CAAa;AACXmB,YAAAA,IAAI,EAAE,WADK;AAEXC,YAAAA,OAAO,EAAExB,YAAY,CAACkB,UAAD,CAAZ,CAAyBT;AAFvB,WAAb;AAKA,cAAIgB,WAAW,GAAGN,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBrB,YAAY,CAACjC,MAAxC,CAAlB;;AAEA,iBAAO0D,WAAW,KAAKR,KAAhB,IAAyBQ,WAAW,KAAKP,UAAhD,EAA4D;AAC1DO,YAAAA,WAAW,GAAGN,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBrB,YAAY,CAACjC,MAAxC,CAAd;AACD;;AACDuD,UAAAA,OAAO,CAAClB,IAAR,CAAa;AACXmB,YAAAA,IAAI,EAAE,WADK;AAEXC,YAAAA,OAAO,EAAExB,YAAY,CAACyB,WAAD,CAAZ,CAA0BhB;AAFxB,WAAb;AAKA,cAAIiB,UAAU,GAAGP,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBrB,YAAY,CAACjC,MAAxC,CAAjB;;AAEA,iBAAO2D,UAAU,KAAKT,KAAf,IAAwBS,UAAU,KAAKR,UAAvC,IAAqDQ,UAAU,KAAKD,WAA3E,EAAwF;AACtFC,YAAAA,UAAU,GAAGP,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBrB,YAAY,CAACjC,MAAxC,CAAb;AACD;;AACDuD,UAAAA,OAAO,CAAClB,IAAR,CAAa;AACXmB,YAAAA,IAAI,EAAE,WADK;AAEXC,YAAAA,OAAO,EAAExB,YAAY,CAAC0B,UAAD,CAAZ,CAAyBjB;AAFvB,WAAb;AAKA,cAAIkB,UAAU,GAAGR,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBC,OAAO,CAACvD,MAAnC,CAAjB,CAjCwD,CAkCxD;;AACAuD,UAAAA,OAAO,CAACK,UAAD,CAAP,CAAoBJ,IAApB,GAA2B,SAA3B;AACAD,UAAAA,OAAO,CAACK,UAAD,CAAP,CAAoBH,OAApB,GAA8BxB,YAAY,CAACiB,KAAD,CAAZ,CAAoBR,GAAlD;AAEAO,UAAAA,UAAU,CAACZ,IAAX,CAAgB;AACdwB,YAAAA,OAAO,EAAEN,OADK;AAEdO,YAAAA,WAAW,EAAEF;AAFC,WAAhB;AAID;;AACD,YAAI3B,YAAY,CAACjC,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,eAAK6B,QAAL,CAAc;AAEZtB,YAAAA,MAAM,EAAE0C,UAFI;AAGZzC,YAAAA,cAAc,EAAEyC,UAAU,CAAC,CAAD,CAAV,CAAcY,OAHlB;AAIZpD,YAAAA,YAAY,EAAE,sBAAsB,KAAKN,KAAL,CAAWG,SAAX,CAAqB,CAArB,EAAwBkC,GAA9C,GAAoD;AAJtD,WAAd;AAOD;AACF;AACF;;;yCAEoB,CAGpB;;;iCAEYuB,K,EAAO;AAClB,UAAIC,YAAY,GAAGD,KAAK,CAAC/D,MAAzB;AAAA,UACEiE,cADF;AAAA,UAEEC,WAFF,CADkB,CAKlB;;AACA,aAAO,MAAMF,YAAb,EAA2B;AACzB;AACAE,QAAAA,WAAW,GAAGd,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBU,YAA3B,CAAd;AACAA,QAAAA,YAAY,IAAI,CAAhB,CAHyB,CAKzB;;AACAC,QAAAA,cAAc,GAAGF,KAAK,CAACC,YAAD,CAAtB;AACAD,QAAAA,KAAK,CAACC,YAAD,CAAL,GAAsBD,KAAK,CAACG,WAAD,CAA3B;AACAH,QAAAA,KAAK,CAACG,WAAD,CAAL,GAAqBD,cAArB;AACD;;AAED,aAAOF,KAAP;AACD;;;kCAEalD,M,EAAQ;AACpBgC,MAAAA,OAAO,CAACC,GAAR,CAAYjC,MAAZ;AACA,WAAKgB,QAAL,CAAc,UAAC1B,KAAD,EAAQL,KAAR;AAAA,eAAmB;AAC/BgB,UAAAA,YAAY,oBACPX,KAAK,CAACW,YADC,sBAETD,MAFS,EAEAV,KAAK,CAACW,YAAN,CAAmBD,MAAnB,IAA6B,CAF7B,EADmB;AAK/BA,UAAAA,MAAM,EAAEA;AALuB,SAAnB;AAAA,OAAd;AAOD;;;yCAEoBsD,K,EAAO;AAAA;;AAC1B,WAAKC,aAAL,CAAmBD,KAAK,CAACE,aAAN,CAAoBC,KAAvC;;AAEA,UAAI,KAAKnE,KAAL,CAAWE,UAAX,GAAwB,KAAKF,KAAL,CAAWQ,aAAvC,EAAsD;AACpD4D,QAAAA,UAAU,CAAC;AAAA,iBAAM,MAAI,CAACC,eAAL,EAAN;AAAA,SAAD,EAA+B,GAA/B,CAAV;AACD,OAFD,MAEO;AACLD,QAAAA,UAAU,CAAC;AAAA,iBAAM,MAAI,CAACE,UAAL,CAAgB,MAAI,CAACC,UAAL,EAAhB,CAAN;AAAA,SAAD,EAA2C,GAA3C,CAAV;AACD;AACF;;;sCAGiB;AAChB,UAAMtE,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAX,GAAqB,CAArC;AACA,UAAMC,UAAU,GAAG,KAAKF,KAAL,CAAWE,UAAX,GAAwB,CAA3C;AAEA,WAAKwB,QAAL,CAAc;AACZzB,QAAAA,OAAO,EAAEA,OADG;AAEZC,QAAAA,UAAU,EAAEA,UAFA;AAGZI,QAAAA,YAAY,EAAE,sBAAsB,KAAKN,KAAL,CAAWG,SAAX,CAAqBF,OAArB,EAA8BoC,GAApD,GAA0D,eAH5D;AAIZhC,QAAAA,cAAc,EAAE,KAAKL,KAAL,CAAWI,MAAX,CAAkBH,OAAlB,EAA2ByD,OAJ/B;AAKZhD,QAAAA,MAAM,EAAE;AALI,OAAd;AAOD;;;iCAEY;AACX,UAAMC,YAAY,GAAG,KAAKX,KAAL,CAAWW,YAAhC;AACA,UAAM6D,cAAc,GAAG,KAAKxE,KAAL,CAAWQ,aAAlC;AACA,UAAIiE,gBAAgB,GAAG9D,YAAY,CAACC,OAAb,GAAuB4D,cAA9C;AACA,UAAIE,YAAY,GAAGD,gBAAgB,GAAG,KAAnB,GAA2B,GAA9C;;AAEA,UAAIA,gBAAgB,GAAG,KAAnB,GAA2B,EAA/B,EAAmC;AACjCC,QAAAA,YAAY,GAAGA,YAAY,GAAG,iDAA9B;AACD,OAFD,MAGK;AACH;AACA,YAAMC,GAAG,GAAG,CAAZ;AACA,YAAMC,GAAG,GAAG,CAAZ;AACA,YAAMC,QAAQ,GAAG5B,IAAI,CAACC,KAAL,CAAWyB,GAAG,GAAG1B,IAAI,CAACE,MAAL,MAAiByB,GAAG,GAAGD,GAAvB,CAAjB,CAAjB;;AAEA,gBAAQE,QAAR;AACE,eAAK,CAAL;AACE,gBAAIJ,gBAAgB,GAAG,IAAnB,IAA2BA,gBAAgB,GAAG,IAAlD,EAAwD;AACtDC,cAAAA,YAAY,GAAGA,YAAY,GAAG,oBAA9B;AACA,mBAAKhD,QAAL,CAAc;AACZP,gBAAAA,SAAS,EAAE;AADC,eAAd;AAGD;;AACD,gBAAIsD,gBAAgB,GAAG,GAAnB,IAA0BA,gBAAgB,GAAG,IAAjD,EAAuD;AACrDC,cAAAA,YAAY,GAAGA,YAAY,GAAG,oBAA9B;AACA,mBAAKhD,QAAL,CAAc;AACZP,gBAAAA,SAAS,EAAE;AADC,eAAd;AAGD;;AACD,gBAAIsD,gBAAgB,GAAG,GAAvB,EAA4B;AAC1BC,cAAAA,YAAY,GAAGA,YAAY,GAAG,oBAA9B;AACA,mBAAKhD,QAAL,CAAc;AACZP,gBAAAA,SAAS,EAAE;AADC,eAAd;AAGD;;AACD;;AACF,eAAK,CAAL;AACE,gBAAIsD,gBAAgB,GAAG,IAAnB,IAA2BA,gBAAgB,GAAG,IAAlD,EAAwD;AACtDC,cAAAA,YAAY,GAAGA,YAAY,GAAG,qBAA9B;AACA,mBAAKhD,QAAL,CAAc;AACZR,gBAAAA,SAAS,EAAE;AADC,eAAd;AAGD;;AACD,gBAAIuD,gBAAgB,GAAG,GAAnB,IAA0BA,gBAAgB,GAAG,IAAjD,EAAuD;AACrDC,cAAAA,YAAY,GAAGA,YAAY,GAAG,qBAA9B;AACA,mBAAKhD,QAAL,CAAc;AACZR,gBAAAA,SAAS,EAAE;AADC,eAAd;AAGD;;AACD,gBAAIuD,gBAAgB,GAAG,GAAvB,EAA4B;AAC1BC,cAAAA,YAAY,GAAGA,YAAY,GAAG,qBAA9B;AACA,mBAAKhD,QAAL,CAAc;AACZR,gBAAAA,SAAS,EAAE;AADC,eAAd;AAGD;;AACD;;AACF,eAAK,CAAL;AACE,gBAAIuD,gBAAgB,GAAG,IAAnB,IAA2BA,gBAAgB,GAAG,IAAlD,EAAwD;AACtDC,cAAAA,YAAY,GAAGA,YAAY,GAAG,qBAA9B;AACA,mBAAKhD,QAAL,CAAc;AACZN,gBAAAA,SAAS,EAAE;AADC,eAAd;AAGD;;AACD,gBAAIqD,gBAAgB,GAAG,GAAnB,IAA0BA,gBAAgB,GAAG,IAAjD,EAAuD;AACrDC,cAAAA,YAAY,GAAGA,YAAY,GAAG,qBAA9B;AACA,mBAAKhD,QAAL,CAAc;AACZN,gBAAAA,SAAS,EAAE;AADC,eAAd;AAGD;;AACD,gBAAIqD,gBAAgB,GAAG,GAAvB,EAA4B;AAC1BC,cAAAA,YAAY,GAAGA,YAAY,GAAG,qBAA9B;AACA,mBAAKhD,QAAL,CAAc;AACZN,gBAAAA,SAAS,EAAE;AADC,eAAd;AAGD;;AACD;;AACF,eAAK,CAAL;AACE,gBAAIqD,gBAAgB,GAAG,IAAnB,IAA2BA,gBAAgB,GAAG,IAAlD,EAAwD;AACtDC,cAAAA,YAAY,GAAGA,YAAY,GAAG,qBAA9B;AACA,mBAAKhD,QAAL,CAAc;AACZL,gBAAAA,UAAU,EAAE;AADA,eAAd;AAGD;;AACD,gBAAIoD,gBAAgB,GAAG,GAAnB,IAA0BA,gBAAgB,GAAG,IAAjD,EAAuD;AACrDC,cAAAA,YAAY,GAAGA,YAAY,GAAG,qBAA9B;AACA,mBAAKhD,QAAL,CAAc;AACZL,gBAAAA,UAAU,EAAE;AADA,eAAd;AAGD;;AACD,gBAAIoD,gBAAgB,GAAG,GAAvB,EAA4B;AAC1BC,cAAAA,YAAY,GAAGA,YAAY,GAAG,qBAA9B;AACA,mBAAKhD,QAAL,CAAc;AACZL,gBAAAA,UAAU,EAAE;AADA,eAAd;AAGD;;AACD;;AACF;AACE;AAlFJ;AAoFD;;AACDqB,MAAAA,OAAO,CAACC,GAAR,CACE,iBAAiB,KAAK3C,KAAL,CAAWmB,SAA5B,GAAwC,GAAxC,GACA,cADA,GACiB,KAAKnB,KAAL,CAAWkB,SAD5B,GACwC,GADxC,GAEA,cAFA,GAEiB,KAAKlB,KAAL,CAAWoB,SAF5B,GAEwC,GAFxC,GAGA,eAHA,GAGkB,KAAKpB,KAAL,CAAWqB,UAH7B,GAG0C,GAJ5C,EApGW,CA2GX;AACA;AACA;;AAEA,aAAOqD,YAAP;AACD;;;iCAEY;AACX,WAAKhD,QAAL,CAAc;AACZV,QAAAA,QAAQ,EAAE;AADE,OAAd;AAGD;;;+BAEUF,M,EAAQ;AACjB,WAAKY,QAAL,CAAc;AACZZ,QAAAA,MAAM,EAAEA,MADI;AAEZE,QAAAA,QAAQ,EAAE;AAFE,OAAd;AAKA,WAAKrB,KAAL,CAAWmF,YAAX,CAAwB,KAAK9E,KAAL,CAAWgB,QAAnC;AACA,WAAKQ,YAAL;AACD;;;iCAEY;AACX,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,MAAM,EAAE,KAAKxB,KAAL,CAAWU,MADrB;AAEE,QAAA,cAAc,EAAE,KAAKV,KAAL,CAAWK,cAF7B;AAGE,QAAA,aAAa,EAAE,KAAKL,KAAL,CAAWS,aAH5B;AAIE,QAAA,UAAU,EAAE,KAAKT,KAAL,CAAWE,UAJzB;AAKE,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWO,QALvB;AAME,QAAA,aAAa,EAAE,KAAKP,KAAL,CAAWQ,aAN5B;AAOE,QAAA,gBAAgB,EAAE,KAAKc,oBAPzB;AAQE,QAAA,YAAY,EAAE,KAAKE,YARrB;AASE,QAAA,SAAS,EAAE,KAAKxB,KAAL,CAAWG,SATxB;AAUE,QAAA,MAAM,EAAE,KAAKH,KAAL,CAAWI,MAVrB;AAWE,QAAA,YAAY,EAAE,KAAKJ,KAAL,CAAWM,YAX3B;AAYE,QAAA,WAAW,EAAE,KAAKX,KAAL,CAAW8C,WAZ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAkBD;;;mCAEc;AACb,aAAO,oBAAC,MAAD;AAAQ,QAAA,UAAU,EAAE,KAAKzC,KAAL,CAAWc,MAA/B;AACL,QAAA,WAAW,EAAE,KAAKnB,KAAL,CAAW8C,WADnB;AAEL,QAAA,UAAU,EAAE,KAAKhB,UAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAGD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKzB,KAAL,CAAWgB,QAAX,GAAsB,KAAK+D,YAAL,EAAtB,GAA4C,KAAKC,UAAL,EAD/C,CADF;AAKD;;;;EApeoB3F,S;;AAuevB,eAAeK,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport './quizcard.css';\r\nimport Quiz from './../components/Quiz.js';\r\nimport Result from './../components/Result.js';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/database';\r\nimport { db } from '../../../../firebase';\r\n\r\nclass QuizCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n\r\n    if (firebase.apps.length) {\r\n\r\n      this.app = firebase.app().firestore();\r\n\r\n      this.state = {\r\n        counter: 0,\r\n        questionId: 1,\r\n        questions: [],\r\n        ansOpt: [],\r\n        currentAnswers: [],\r\n        currQuestion: '',\r\n        question: '',\r\n        questionTotal: 10,\r\n        answerOptions: [],\r\n        answer: '',\r\n        answersCount: {\r\n          correct: 0,\r\n          incorrect: 0,\r\n        },\r\n        result: '',\r\n        category: '',\r\n        quizDone: false,\r\n        firstSetup: true,\r\n\r\n        foodItems: 0,\r\n        playItems: 0,\r\n        washItems: 0,\r\n        musicItems: 0,\r\n      };\r\n\r\n      this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\r\n      this.loadDatabase = this.loadDatabase.bind(this);\r\n      this.quizUndone = this.quizUndone.bind(this);\r\n    }\r\n  }\r\n\r\n  async loadDatabase() {\r\n    if (this.state.firstSetup === true) {\r\n\r\n      this.setState({\r\n        firstSetup: false\r\n      })\r\n      \r\n      \r\n      this.database = firebase.app().database().ref().child(\"db/0/flashcards/1/jpn-cards/0/jpn-cards-animals\");\r\n      const questionList = [];\r\n\r\n      this.props.generatedQuiz();\r\n      await this.database.on('child_added', snap => {\r\n        questionList.push({\r\n          id: snap.key,\r\n          eng: snap.val().eng,\r\n          kan: snap.val().kan,\r\n          rom: snap.val().rom\r\n        })\r\n      })\r\n      //console.log(questionList.length);\r\n      this.database = firebase.app().database().ref().child(\"db/0/flashcards/1/jpn-cards/1/jpn-cards-people\");\r\n\r\n      this.props.generatedQuiz();\r\n      await this.database.on('child_added', snap => {\r\n        questionList.push({\r\n          id: snap.key,\r\n          eng: snap.val().eng,\r\n          kan: snap.val().kan,\r\n          rom: snap.val().rom\r\n        })\r\n      })\r\n      //console.log(questionList.length);\r\n      this.database = firebase.app().database().ref().child(\"db/0/flashcards/1/jpn-cards/2/jpn-cards-food\");\r\n\r\n      this.props.generatedQuiz();\r\n      await this.database.on('child_added', snap => {\r\n        questionList.push({\r\n          id: snap.key,\r\n          eng: snap.val().eng,\r\n          kan: snap.val().kan,\r\n          rom: snap.val().rom\r\n        })\r\n      })\r\n      //console.log(questionList.length);\r\n\r\n      this.database = firebase.app().database().ref().child(\"db/0/flashcards/1/jpn-cards/3/jpn-cards-school\");\r\n\r\n      this.props.generatedQuiz();\r\n      await this.database.on('child_added', snap => {\r\n        questionList.push({\r\n          id: snap.key,\r\n          eng: snap.val().eng,\r\n          kan: snap.val().kan,\r\n          rom: snap.val().rom\r\n        })\r\n      })\r\n\r\n      this.database = firebase.app().database().ref().child(\"db/0/flashcards/1/jpn-cards/4/jpn-cards-house\");\r\n\r\n      this.props.generatedQuiz();\r\n      await this.database.on('child_added', snap => {\r\n        questionList.push({\r\n          id: snap.key,\r\n          eng: snap.val().eng,\r\n          kan: snap.val().kan,\r\n          rom: snap.val().rom\r\n        })\r\n      })\r\n\r\n    }\r\n    else {\r\n\r\n      //console.log(this.props.generateNew);\r\n      if (this.props.generateNew === true) {\r\n        this.app = firebase.app().firestore();\r\n\r\n        switch (this.props.category) {\r\n          case 'Animals':\r\n\r\n            console.log(this.props.category);\r\n            this.database = firebase.app().database().ref().child(\"db/0/flashcards/1/jpn-cards/0/jpn-cards-animals\");\r\n            break;\r\n          case 'People':\r\n\r\n            console.log(this.props.category);\r\n            this.database = firebase.app().database().ref().child(\"db/0/flashcards/1/jpn-cards/1/jpn-cards-people\");\r\n            break;\r\n          case 'Food':\r\n\r\n            console.log(this.props.category);\r\n            this.database = firebase.app().database().ref().child(\"db/0/flashcards/1/jpn-cards/2/jpn-cards-food\");\r\n            break;\r\n\r\n          case 'School':\r\n\r\n            console.log(this.props.category);\r\n            this.database = firebase.app().database().ref().child(\"db/0/flashcards/1/jpn-cards/3/jpn-cards-school\");\r\n            break;\r\n\r\n          case 'House':\r\n\r\n            console.log(this.props.category);\r\n            this.database = firebase.app().database().ref().child(\"db/0/flashcards/1/jpn-cards/4/jpn-cards-house\");\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n        const questionList = [];\r\n\r\n        console.log('1');\r\n        this.setState({\r\n          counter: 0,\r\n          questionId: 1,\r\n          questions: [],\r\n          ansOpt: [],\r\n          currentAnswers: [],\r\n          currQuestion: '',\r\n          question: '',\r\n          questionTotal: 10,\r\n          answerOptions: [],\r\n          answer: '',\r\n          answersCount: {\r\n            correct: 0,\r\n            incorrect: 0,\r\n          },\r\n          result: '',\r\n          category: '',\r\n          quizDone: false,\r\n\r\n        })\r\n        console.log('2');\r\n        this.props.generatedQuiz();\r\n        await this.database.on('child_added', snap => {\r\n          questionList.push({\r\n            id: snap.key,\r\n            eng: snap.val().eng,\r\n            kan: snap.val().kan,\r\n            rom: snap.val().rom\r\n          })\r\n        })\r\n        console.log('3');\r\n        console.log(questionList.length);\r\n        if (questionList.length > 0) {\r\n\r\n          this.shuffleArray(questionList);\r\n          console.log(questionList[0].eng);\r\n          this.setState({\r\n            questions: questionList,\r\n\r\n          })\r\n        }\r\n        this.fillQuestions();\r\n      }\r\n    }\r\n  }\r\n\r\n  fillQuestions() {\r\n\r\n    if (firebase.apps.length) {\r\n\r\n      const questionList = this.state.questions;\r\n      const optionList = [];\r\n\r\n      for (var index = 0; index < questionList.length; ++index) {\r\n\r\n        var firstIndex = Math.floor(Math.random() * questionList.length);\r\n\r\n        while (firstIndex === index) {\r\n          firstIndex = Math.floor(Math.random() * questionList.length);\r\n        }\r\n        const options = [];\r\n        options.push({\r\n          type: \"incorrect\",\r\n          content: questionList[firstIndex].kan,\r\n        })\r\n\r\n        var secondIndex = Math.floor(Math.random() * questionList.length);\r\n\r\n        while (secondIndex === index || secondIndex === firstIndex) {\r\n          secondIndex = Math.floor(Math.random() * questionList.length);\r\n        }\r\n        options.push({\r\n          type: \"incorrect\",\r\n          content: questionList[secondIndex].kan,\r\n        })\r\n\r\n        var thirdIndex = Math.floor(Math.random() * questionList.length);\r\n\r\n        while (thirdIndex === index || thirdIndex === firstIndex || thirdIndex === secondIndex) {\r\n          thirdIndex = Math.floor(Math.random() * questionList.length);\r\n        }\r\n        options.push({\r\n          type: \"incorrect\",\r\n          content: questionList[thirdIndex].kan,\r\n        })\r\n\r\n        var rightIndex = Math.floor(Math.random() * options.length);\r\n        //console.log(rightIndex);\r\n        options[rightIndex].type = \"correct\";\r\n        options[rightIndex].content = questionList[index].kan;\r\n\r\n        optionList.push({\r\n          answers: options,\r\n          rightAnswer: rightIndex,\r\n        })\r\n      }\r\n      if (questionList.length > 0) {\r\n        this.setState({\r\n\r\n          ansOpt: optionList,\r\n          currentAnswers: optionList[0].answers,\r\n          currQuestion: 'Which word means ' + this.state.questions[0].eng + ' in Japanese ? ',\r\n\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n\r\n\r\n  }\r\n\r\n  shuffleArray(array) {\r\n    var currentIndex = array.length,\r\n      temporaryValue,\r\n      randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      // And swap it with the current element.\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  setUserAnswer(answer) {\r\n    console.log(answer);\r\n    this.setState((state, props) => ({\r\n      answersCount: {\r\n        ...state.answersCount,\r\n        [answer]: state.answersCount[answer] + 1\r\n      },\r\n      answer: answer\r\n    }));\r\n  }\r\n\r\n  handleAnswerSelected(event) {\r\n    this.setUserAnswer(event.currentTarget.value);\r\n\r\n    if (this.state.questionId < this.state.questionTotal) {\r\n      setTimeout(() => this.setNextQuestion(), 300);\r\n    } else {\r\n      setTimeout(() => this.setResults(this.getResults()), 300);\r\n    }\r\n  }\r\n\r\n\r\n  setNextQuestion() {\r\n    const counter = this.state.counter + 1;\r\n    const questionId = this.state.questionId + 1;\r\n\r\n    this.setState({\r\n      counter: counter,\r\n      questionId: questionId,\r\n      currQuestion: 'Which word means ' + this.state.questions[counter].eng + ' in Japanese?',\r\n      currentAnswers: this.state.ansOpt[counter].answers,\r\n      answer: ''\r\n    });\r\n  }\r\n\r\n  getResults() {\r\n    const answersCount = this.state.answersCount;\r\n    const questionsTotal = this.state.questionTotal;\r\n    var resultPercentage = answersCount.correct / questionsTotal;\r\n    var resultString = resultPercentage * 100.0 + '%';\r\n\r\n    if (resultPercentage * 100.0 < 50) {\r\n      resultString = resultString + '. Score 70% an above to get stuff for your pet.';\r\n    }\r\n    else {\r\n      //losowanie itemków\r\n      const min = 1;\r\n      const max = 4;\r\n      const itemType = Math.floor(min + Math.random() * (max - min));\r\n\r\n      switch (itemType) {\r\n        case 1:\r\n          if (resultPercentage > 0.49 && resultPercentage < 0.71) {\r\n            resultString = resultString + '! You receive 1 ⚾!';\r\n            this.setState({\r\n              playItems: 1,\r\n            });\r\n          }\r\n          if (resultPercentage > 0.7 && resultPercentage < 0.91) {\r\n            resultString = resultString + '! You receive 2 ⚾!';\r\n            this.setState({\r\n              playItems: 2,\r\n            });\r\n          }\r\n          if (resultPercentage > 0.9) {\r\n            resultString = resultString + '! You receive 3 ⚾!';\r\n            this.setState({\r\n              playItems: 3,\r\n            });\r\n          }\r\n          break;\r\n        case 2:\r\n          if (resultPercentage > 0.49 && resultPercentage < 0.71) {\r\n            resultString = resultString + '! You receive 1 🍌!';\r\n            this.setState({\r\n              foodItems: 1,\r\n            });\r\n          }\r\n          if (resultPercentage > 0.7 && resultPercentage < 0.91) {\r\n            resultString = resultString + '! You receive 2 🍌!';\r\n            this.setState({\r\n              foodItems: 2,\r\n            });\r\n          }\r\n          if (resultPercentage > 0.9) {\r\n            resultString = resultString + '! You receive 3 🍌!';\r\n            this.setState({\r\n              foodItems: 3,\r\n            });\r\n          }\r\n          break;\r\n        case 3:\r\n          if (resultPercentage > 0.49 && resultPercentage < 0.71) {\r\n            resultString = resultString + '! You receive 1 💦!';\r\n            this.setState({\r\n              washItems: 1,\r\n            });\r\n          }\r\n          if (resultPercentage > 0.7 && resultPercentage < 0.91) {\r\n            resultString = resultString + '! You receive 2 💦!';\r\n            this.setState({\r\n              washItems: 2,\r\n            });\r\n          }\r\n          if (resultPercentage > 0.9) {\r\n            resultString = resultString + '! You receive 3 💦!';\r\n            this.setState({\r\n              washItems: 3,\r\n            });\r\n          }\r\n          break;\r\n        case 4:\r\n          if (resultPercentage > 0.49 && resultPercentage < 0.71) {\r\n            resultString = resultString + '! You receive 1 🎹!';\r\n            this.setState({\r\n              musicItems: 1,\r\n            });\r\n          }\r\n          if (resultPercentage > 0.7 && resultPercentage < 0.91) {\r\n            resultString = resultString + '! You receive 2 🎹!';\r\n            this.setState({\r\n              musicItems: 2,\r\n            });\r\n          }\r\n          if (resultPercentage > 0.9) {\r\n            resultString = resultString + '! You receive 3 🎹!';\r\n            this.setState({\r\n              musicItems: 3,\r\n            });\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    console.log(\r\n      'play items: ' + this.state.playItems + ',' +\r\n      'food items: ' + this.state.foodItems + ',' +\r\n      'wash items: ' + this.state.washItems + ',' +\r\n      'music items: ' + this.state.musicItems + '.'\r\n    );\r\n\r\n    //tutaj dodanie do aktualnej liczby itemków do bazy danych\r\n    //\r\n    //\r\n\r\n    return resultString;\r\n  }\r\n\r\n  quizUndone() {\r\n    this.setState({\r\n      quizDone: false,\r\n    });\r\n  }\r\n\r\n  setResults(result) {\r\n    this.setState({\r\n      result: result,\r\n      quizDone: true,\r\n    });\r\n\r\n    this.props.quizComplete(this.state.quizDone);\r\n    this.loadDatabase();\r\n  }\r\n\r\n  renderQuiz() {\r\n    return (\r\n      <div>\r\n        <Quiz\r\n          answer={this.state.answer}\r\n          currentAnswers={this.state.currentAnswers}\r\n          answerOptions={this.state.answerOptions}\r\n          questionId={this.state.questionId}\r\n          question={this.state.question}\r\n          questionTotal={this.state.questionTotal}\r\n          onAnswerSelected={this.handleAnswerSelected}\r\n          loadDatabase={this.loadDatabase}\r\n          questions={this.state.questions}\r\n          ansOpt={this.state.ansOpt}\r\n          currQuestion={this.state.currQuestion}\r\n          generateNew={this.props.generateNew}\r\n        />\r\n      </div >\r\n    );\r\n  }\r\n\r\n  renderResult() {\r\n    return <Result quizResult={this.state.result}\r\n      generateNew={this.props.generateNew}\r\n      quizUndone={this.quizUndone} />;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.quizDone ? this.renderResult() : this.renderQuiz()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuizCard;"]},"metadata":{},"sourceType":"module"}