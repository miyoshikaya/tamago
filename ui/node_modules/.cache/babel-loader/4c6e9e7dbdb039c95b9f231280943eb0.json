{"ast":null,"code":"import _defineProperty from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\uni\\\\tamago\\\\ui\\\\src\\\\components\\\\HomePage\\\\QuizSection\\\\QuizCard\\\\QuizCard.js\";\nimport React, { Component } from 'react';\nimport './quizcard.css';\nimport Quiz from './../components/Quiz.js';\nimport Result from './../components/Result.js';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/database';\nimport { db } from '../../../../firebase';\nimport { default as fire } from '../../../../firebase';\n\nvar QuizCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuizCard, _Component);\n\n  function QuizCard(props) {\n    var _this;\n\n    _classCallCheck(this, QuizCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuizCard).call(this, props));\n\n    if (firebase.apps.length) {\n      _this.state = {\n        counter: 0,\n        questionId: 1,\n        questions: [],\n        ansOpt: [],\n        currentAnswers: [],\n        currQuestion: '',\n        question: '',\n        questionTotal: 10,\n        answerOptions: [],\n        answer: '',\n        answersCount: {\n          correct: 0,\n          incorrect: 0\n        },\n        result: '',\n        category: '',\n        quizDone: false,\n        firstSetup: true,\n        foodItems: 0,\n        playItems: 0,\n        washItems: 0,\n        musicItems: 0,\n        user: null,\n        languageIndex: null,\n        addedString: null\n      };\n      _this.handleAnswerSelected = _this.handleAnswerSelected.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      _this.loadDatabase = _this.loadDatabase.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      _this.quizUndone = _this.quizUndone.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    }\n\n    return _this;\n  }\n\n  _createClass(QuizCard, [{\n    key: \"getUserData\",\n    value: function () {\n      var _getUserData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var user;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                user = db.onceGetUser(this.props.uid).then(function (snapshot) {\n                  return snapshot.val();\n                });\n                _context.next = 3;\n                return user.then(function (value) {\n                  _this2.setState({\n                    user: value\n                  });\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function getUserData() {\n        return _getUserData.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"truncCards\",\n    value: function () {\n      var _truncCards = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(cards) {\n        var comparedCards, userDBCards, queryString, newList, i, j;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                comparedCards = [];\n                userDBCards = db.getUserCards(this.props.uid).then(function (snapshot) {\n                  return snapshot.val();\n                });\n                console.log(this.props.uid);\n                _context2.next = 5;\n                return userDBCards.then(function (value) {\n                  comparedCards = value;\n                });\n\n              case 5:\n                queryString = \"\";\n                _context2.t0 = this.state.user.language;\n                _context2.next = _context2.t0 === 'Korean' ? 9 : _context2.t0 === 'Japanese' ? 11 : _context2.t0 === 'Polish' ? 13 : 15;\n                break;\n\n              case 9:\n                queryString = \"0_\";\n                return _context2.abrupt(\"break\", 15);\n\n              case 11:\n                queryString = \"1_\";\n                return _context2.abrupt(\"break\", 15);\n\n              case 13:\n                queryString = \"2_\";\n                return _context2.abrupt(\"break\", 15);\n\n              case 15:\n                _context2.t1 = this.props.category;\n                _context2.next = _context2.t1 === 'Animals' ? 18 : _context2.t1 === 'People' ? 21 : _context2.t1 === 'Food' ? 24 : _context2.t1 === 'School' ? 27 : _context2.t1 === 'House' ? 30 : 33;\n                break;\n\n              case 18:\n                console.log(this.props.category);\n                queryString += \"0_\";\n                return _context2.abrupt(\"break\", 35);\n\n              case 21:\n                console.log(this.props.category);\n                queryString += \"1_\";\n                return _context2.abrupt(\"break\", 35);\n\n              case 24:\n                console.log(this.props.category);\n                queryString += \"2_\";\n                return _context2.abrupt(\"break\", 35);\n\n              case 27:\n                console.log(this.props.category);\n                queryString += \"3_\";\n                return _context2.abrupt(\"break\", 35);\n\n              case 30:\n                console.log(this.props.category);\n                queryString += \"4_\";\n                return _context2.abrupt(\"break\", 35);\n\n              case 33:\n                console.log(\"null\");\n                return _context2.abrupt(\"break\", 35);\n\n              case 35:\n                newList = [];\n                console.log(queryString);\n                console.log(cards);\n                console.log(comparedCards);\n\n                for (i = 0; i < cards.length; ++i) {\n                  for (j = 0; j < comparedCards.length; ++j) {\n                    if (comparedCards[j].id === queryString + i && comparedCards[j].status !== 'Mastered') {\n                      newList.push(cards[i]);\n                    }\n                  }\n                }\n\n                return _context2.abrupt(\"return\", newList);\n\n              case 41:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function truncCards(_x) {\n        return _truncCards.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"loadDatabase\",\n    value: function () {\n      var _loadDatabase = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var addedString, languageIndex, categoryIndex, categoryString, allCards, data, userCards;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(this.props.generateNew === true)) {\n                  _context3.next = 64;\n                  break;\n                }\n\n                _context3.next = 3;\n                return this.props.generatedQuiz();\n\n              case 3:\n                _context3.next = 5;\n                return this.setState({\n                  counter: 0,\n                  questionId: 1,\n                  ansOpt: [],\n                  questions: [],\n                  currentAnswers: [],\n                  currQuestion: '',\n                  question: '',\n                  questionTotal: 10,\n                  answerOptions: [],\n                  answer: '',\n                  answersCount: {\n                    correct: 0,\n                    incorrect: 0\n                  },\n                  result: '',\n                  category: '',\n                  quizDone: false\n                });\n\n              case 5:\n                console.log(\"lel\");\n                addedString = \"\";\n                languageIndex = 0;\n                _context3.t0 = this.state.user.language;\n                _context3.next = _context3.t0 === 'Korean' ? 11 : _context3.t0 === 'Japanese' ? 14 : _context3.t0 === 'Polish' ? 17 : 20;\n                break;\n\n              case 11:\n                languageIndex = 0;\n                addedString = \"krn-cards\";\n                return _context3.abrupt(\"break\", 20);\n\n              case 14:\n                languageIndex = 1;\n                addedString = \"jpn-cards\";\n                return _context3.abrupt(\"break\", 20);\n\n              case 17:\n                languageIndex = 2;\n                addedString = \"pln-cards\";\n                return _context3.abrupt(\"break\", 20);\n\n              case 20:\n                _context3.next = 22;\n                return this.setState({\n                  languageIndex: languageIndex,\n                  addedString: addedString\n                });\n\n              case 22:\n                categoryIndex = 0;\n                categoryString = null;\n                _context3.t1 = this.props.category;\n                _context3.next = _context3.t1 === 'Animals' ? 27 : _context3.t1 === 'People' ? 31 : _context3.t1 === 'Food' ? 35 : _context3.t1 === 'School' ? 39 : _context3.t1 === 'House' ? 43 : 47;\n                break;\n\n              case 27:\n                console.log(this.props.category);\n                categoryIndex = 0;\n                categoryString = addedString + \"-animals\";\n                return _context3.abrupt(\"break\", 49);\n\n              case 31:\n                console.log(this.props.category);\n                categoryIndex = 1;\n                categoryString = addedString + \"-people\";\n                return _context3.abrupt(\"break\", 49);\n\n              case 35:\n                console.log(this.props.category);\n                categoryIndex = 2;\n                categoryString = addedString + \"-food\";\n                return _context3.abrupt(\"break\", 49);\n\n              case 39:\n                console.log(this.props.category);\n                categoryIndex = 3;\n                categoryString = addedString + \"-school\";\n                return _context3.abrupt(\"break\", 49);\n\n              case 43:\n                console.log(this.props.category);\n                categoryIndex = 4;\n                categoryString = addedString + \"-house\";\n                return _context3.abrupt(\"break\", 49);\n\n              case 47:\n                console.log(\"null\");\n                return _context3.abrupt(\"break\", 49);\n\n              case 49:\n                allCards = null;\n                data = db.getCards(languageIndex, addedString, categoryIndex, categoryString).then(function (snapshot) {\n                  return snapshot.val();\n                });\n                _context3.next = 53;\n                return data.then(function (value) {\n                  allCards = value;\n                });\n\n              case 53:\n                console.log(allCards);\n                _context3.next = 56;\n                return this.truncCards(allCards);\n\n              case 56:\n                userCards = _context3.sent;\n                _context3.next = 59;\n                return this.shuffleArray(userCards);\n\n              case 59:\n                _context3.next = 61;\n                return this.setState({\n                  questions: userCards\n                });\n\n              case 61:\n                console.log(userCards);\n                _context3.next = 64;\n                return this.fillQuestions();\n\n              case 64:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function loadDatabase() {\n        return _loadDatabase.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"fillQuestions\",\n    value: function () {\n      var _fillQuestions = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var questionList, optionList, index, firstIndex, options, secondIndex, thirdIndex, rightIndex;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                questionList = this.state.questions;\n                optionList = [];\n\n                if (questionList.length > 2) {\n                  for (index = 0; index < questionList.length; ++index) {\n                    firstIndex = Math.floor(Math.random() * questionList.length);\n\n                    while (firstIndex === index) {\n                      firstIndex = Math.floor(Math.random() * questionList.length);\n                    }\n\n                    options = [];\n                    options.push({\n                      type: \"incorrect\",\n                      content: questionList[firstIndex].kan !== '' ? questionList[firstIndex].kan : questionList[firstIndex].rom\n                    });\n                    secondIndex = Math.floor(Math.random() * questionList.length);\n\n                    while (secondIndex === index || secondIndex === firstIndex) {\n                      secondIndex = Math.floor(Math.random() * questionList.length);\n                    }\n\n                    options.push({\n                      type: \"incorrect\",\n                      content: questionList[secondIndex].kan !== '' ? questionList[secondIndex].kan : questionList[secondIndex].rom\n                    });\n                    thirdIndex = Math.floor(Math.random() * questionList.length);\n\n                    while (thirdIndex === index || thirdIndex === firstIndex || thirdIndex === secondIndex) {\n                      thirdIndex = Math.floor(Math.random() * questionList.length);\n                    }\n\n                    options.push({\n                      type: \"incorrect\",\n                      content: questionList[thirdIndex].kan !== '' ? questionList[thirdIndex].kan : questionList[thirdIndex].rom\n                    });\n                    rightIndex = Math.floor(Math.random() * options.length); //console.log(rightIndex);\n\n                    options[rightIndex].type = \"correct\";\n                    options[rightIndex].content = questionList[index].kan !== '' ? questionList[index].kan : questionList[index].rom;\n                    optionList.push({\n                      answers: options,\n                      rightAnswer: rightIndex\n                    });\n                  }\n\n                  if (questionList.length > 0) {\n                    this.setState({\n                      ansOpt: optionList,\n                      currentAnswers: optionList[0].answers,\n                      currQuestion: 'Which word means ' + this.state.questions[0].eng + ' in ' + this.state.user.language + ' ? '\n                    });\n                  }\n                }\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function fillQuestions() {\n        return _fillQuestions.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getUserData();\n    }\n  }, {\n    key: \"shuffleArray\",\n    value: function shuffleArray(array) {\n      var currentIndex = array.length,\n          temporaryValue,\n          randomIndex; // While there remain elements to shuffle...\n\n      while (0 !== currentIndex) {\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1; // And swap it with the current element.\n\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n      }\n\n      return array;\n    }\n  }, {\n    key: \"setUserAnswer\",\n    value: function setUserAnswer(answer) {\n      console.log(answer);\n      this.setState(function (state, props) {\n        return {\n          answersCount: _objectSpread({}, state.answersCount, _defineProperty({}, answer, state.answersCount[answer] + 1)),\n          answer: answer\n        };\n      });\n    }\n  }, {\n    key: \"handleAnswerSelected\",\n    value: function handleAnswerSelected(event) {\n      var _this3 = this;\n\n      this.setUserAnswer(event.currentTarget.value);\n\n      if (this.state.questionId < this.state.questionTotal) {\n        setTimeout(function () {\n          return _this3.setNextQuestion();\n        }, 300);\n      } else {\n        setTimeout(function () {\n          return _this3.setResults(_this3.getResults());\n        }, 300);\n      }\n    }\n  }, {\n    key: \"setNextQuestion\",\n    value: function setNextQuestion() {\n      var counter = this.state.counter + 1;\n      var questionId = this.state.questionId + 1;\n      this.setState({\n        counter: counter,\n        questionId: questionId,\n        currQuestion: 'Which word means ' + this.state.questions[counter].eng + '?            ',\n        currentAnswers: this.state.ansOpt[counter].answers,\n        answer: ''\n      });\n    }\n  }, {\n    key: \"getResults\",\n    value: function getResults() {\n      var answersCount = this.state.answersCount;\n      var questionsTotal = this.state.questionTotal;\n      var resultPercentage = answersCount.correct / questionsTotal;\n      var resultString = resultPercentage * 100.0 + '%';\n\n      if (resultPercentage * 100.0 < 50) {\n        resultString = resultString + '. Score 70% an above to get stuff for your pet.';\n      } else {\n        //losowanie itemków\n        var min = 1;\n        var max = 4;\n        var itemType = Math.floor(min + Math.random() * (max - min));\n\n        switch (itemType) {\n          case 1:\n            if (resultPercentage > 0.49 && resultPercentage < 0.71) {\n              resultString = resultString + '! You receive 1 ⚾!';\n              this.setState({\n                playItems: 1\n              });\n            }\n\n            if (resultPercentage > 0.7 && resultPercentage < 0.91) {\n              resultString = resultString + '! You receive 2 ⚾!';\n              this.setState({\n                playItems: 2\n              });\n            }\n\n            if (resultPercentage > 0.9) {\n              resultString = resultString + '! You receive 3 ⚾!';\n              this.setState({\n                playItems: 3\n              });\n              db.setItem(this.props.uid, 0, 'play', this.state.user.pet_items[0].number + this.state.playItems);\n            }\n\n            break;\n\n          case 2:\n            if (resultPercentage > 0.49 && resultPercentage < 0.71) {\n              resultString = resultString + '! You receive 1 🍌!';\n              this.setState({\n                foodItems: 1\n              });\n            }\n\n            if (resultPercentage > 0.7 && resultPercentage < 0.91) {\n              resultString = resultString + '! You receive 2 🍌!';\n              this.setState({\n                foodItems: 2\n              });\n            }\n\n            if (resultPercentage > 0.9) {\n              resultString = resultString + '! You receive 3 🍌!';\n              this.setState({\n                foodItems: 3\n              });\n              db.setItem(this.props.uid, 1, 'food', this.state.user.pet_items[1].number + this.state.foodItems);\n            }\n\n            break;\n\n          case 3:\n            if (resultPercentage > 0.49 && resultPercentage < 0.71) {\n              resultString = resultString + '! You receive 1 💦!';\n              this.setState({\n                washItems: 1\n              });\n            }\n\n            if (resultPercentage > 0.7 && resultPercentage < 0.91) {\n              resultString = resultString + '! You receive 2 💦!';\n              this.setState({\n                washItems: 2\n              });\n            }\n\n            if (resultPercentage > 0.9) {\n              resultString = resultString + '! You receive 3 💦!';\n              this.setState({\n                washItems: 3\n              });\n              db.setItem(this.props.uid, 2, 'wash', this.state.user.pet_items[2].number + this.state.washItems);\n            }\n\n            break;\n\n          case 4:\n            if (resultPercentage > 0.49 && resultPercentage < 0.71) {\n              resultString = resultString + '! You receive 1 🎹!';\n              this.setState({\n                musicItems: 1\n              });\n            }\n\n            if (resultPercentage > 0.7 && resultPercentage < 0.91) {\n              resultString = resultString + '! You receive 2 🎹!';\n              this.setState({\n                musicItems: 2\n              });\n            }\n\n            if (resultPercentage > 0.9) {\n              resultString = resultString + '! You receive 3 🎹!';\n              this.setState({\n                musicItems: 3\n              });\n              db.setItem(this.props.uid, 3, 'music', this.state.user.pet_items[3].number + this.state.musicItems);\n            }\n\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      console.log('play items: ' + this.state.playItems + ',' + 'food items: ' + this.state.foodItems + ',' + 'wash items: ' + this.state.washItems + ',' + 'music items: ' + this.state.musicItems + '.'); //tutaj dodanie do aktualnej liczby itemków do bazy danych\n      //\n      //\n\n      return resultString;\n    }\n  }, {\n    key: \"quizUndone\",\n    value: function quizUndone() {\n      this.setState({\n        quizDone: false\n      });\n    }\n  }, {\n    key: \"setResults\",\n    value: function setResults(result) {\n      this.setState({\n        result: result,\n        quizDone: true\n      });\n      this.props.quizComplete(this.state.quizDone);\n      this.loadDatabase();\n    }\n  }, {\n    key: \"renderQuiz\",\n    value: function renderQuiz() {\n      if (this.state.user !== null) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 489\n          },\n          __self: this\n        }, React.createElement(Quiz, {\n          answer: this.state.answer,\n          currentAnswers: this.state.currentAnswers,\n          answerOptions: this.state.answerOptions,\n          questionId: this.state.questionId,\n          question: this.state.question,\n          questionTotal: this.state.questionTotal,\n          onAnswerSelected: this.handleAnswerSelected,\n          loadDatabase: this.loadDatabase,\n          questions: this.state.questions,\n          ansOpt: this.state.ansOpt,\n          currQuestion: this.state.currQuestion,\n          generateNew: this.props.generateNew,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 490\n          },\n          __self: this\n        }));\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"renderResult\",\n    value: function renderResult() {\n      return React.createElement(Result, {\n        quizResult: this.state.result,\n        generateNew: this.props.generateNew,\n        quizUndone: this.quizUndone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      }, this.state.quizDone ? this.renderResult() : this.renderQuiz());\n    }\n  }]);\n\n  return QuizCard;\n}(Component);\n\nexport default QuizCard;","map":{"version":3,"sources":["D:\\uni\\tamago\\ui\\src\\components\\HomePage\\QuizSection\\QuizCard\\QuizCard.js"],"names":["React","Component","Quiz","Result","firebase","db","default","fire","QuizCard","props","apps","length","state","counter","questionId","questions","ansOpt","currentAnswers","currQuestion","question","questionTotal","answerOptions","answer","answersCount","correct","incorrect","result","category","quizDone","firstSetup","foodItems","playItems","washItems","musicItems","user","languageIndex","addedString","handleAnswerSelected","bind","loadDatabase","quizUndone","onceGetUser","uid","then","snapshot","val","value","setState","cards","comparedCards","userDBCards","getUserCards","console","log","queryString","language","newList","i","j","id","status","push","generateNew","generatedQuiz","categoryIndex","categoryString","allCards","data","getCards","truncCards","userCards","shuffleArray","fillQuestions","questionList","optionList","index","firstIndex","Math","floor","random","options","type","content","kan","rom","secondIndex","thirdIndex","rightIndex","answers","rightAnswer","eng","getUserData","array","currentIndex","temporaryValue","randomIndex","event","setUserAnswer","currentTarget","setTimeout","setNextQuestion","setResults","getResults","questionsTotal","resultPercentage","resultString","min","max","itemType","setItem","pet_items","number","quizComplete","renderResult","renderQuiz"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './quizcard.css';\r\nimport Quiz from './../components/Quiz.js';\r\nimport Result from './../components/Result.js';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/database';\r\nimport { db } from '../../../../firebase';\r\nimport { default as fire } from '../../../../firebase';\r\n\r\nclass QuizCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n\r\n    if (firebase.apps.length) {\r\n\r\n      this.state = {\r\n        counter: 0,\r\n        questionId: 1,\r\n        questions: [],\r\n        ansOpt: [],\r\n        currentAnswers: [],\r\n        currQuestion: '',\r\n        question: '',\r\n        questionTotal: 10,\r\n        answerOptions: [],\r\n        answer: '',\r\n        answersCount: {\r\n          correct: 0,\r\n          incorrect: 0,\r\n        },\r\n        result: '',\r\n        category: '',\r\n        quizDone: false,\r\n        firstSetup: true,\r\n\r\n        foodItems: 0,\r\n        playItems: 0,\r\n        washItems: 0,\r\n        musicItems: 0,\r\n\r\n        user: null,\r\n        languageIndex: null,\r\n        addedString: null,\r\n      };\r\n\r\n      this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\r\n      this.loadDatabase = this.loadDatabase.bind(this);\r\n      this.quizUndone = this.quizUndone.bind(this);\r\n    }\r\n  }\r\n\r\n  async getUserData() {\r\n    var user = db.onceGetUser(this.props.uid).then(snapshot => snapshot.val());\r\n    await user.then((value) => {\r\n      this.setState({\r\n        user: value\r\n      })\r\n    });\r\n  }\r\n\r\n  async truncCards(cards) {\r\n    var comparedCards = [];\r\n    var userDBCards = db.getUserCards(this.props.uid).then(snapshot => snapshot.val());\r\n    console.log(this.props.uid);\r\n    await userDBCards.then((value) => {\r\n      comparedCards = value;\r\n    });\r\n\r\n    var queryString = \"\";\r\n\r\n    switch (this.state.user.language) {\r\n      case 'Korean':\r\n        queryString = \"0_\";\r\n        break;\r\n      case 'Japanese':\r\n        queryString = \"1_\";\r\n        break;\r\n      case 'Polish':\r\n        queryString = \"2_\";\r\n        break;\r\n    }\r\n\r\n    switch (this.props.category) {\r\n      case 'Animals':\r\n        console.log(this.props.category);\r\n        queryString += \"0_\";\r\n        break;\r\n      case 'People':\r\n        console.log(this.props.category);\r\n        queryString += \"1_\";\r\n        break;\r\n      case 'Food':\r\n        console.log(this.props.category);\r\n        queryString += \"2_\";\r\n        break;\r\n      case 'School':\r\n        console.log(this.props.category);\r\n        queryString += \"3_\";\r\n        break;\r\n      case 'House':\r\n        console.log(this.props.category);\r\n        queryString += \"4_\";\r\n        break;\r\n      default:\r\n        console.log(\"null\");\r\n        break;\r\n    }\r\n\r\n    var newList = [];\r\n    console.log(queryString);\r\n    console.log(cards);\r\n    console.log(comparedCards);\r\n    for (var i = 0; i < cards.length; ++i) {\r\n      for (var j = 0; j < comparedCards.length; ++j) {\r\n        if (comparedCards[j].id === (queryString + i) && comparedCards[j].status !== 'Mastered') {\r\n          newList.push(cards[i]);\r\n        }\r\n      }\r\n    }\r\n    return newList;\r\n  }\r\n\r\n\r\n  async loadDatabase() {\r\n\r\n    //console.log(this.props.generateNew);\r\n    if (this.props.generateNew === true) {\r\n\r\n      await this.props.generatedQuiz();\r\n\r\n      await this.setState({\r\n        counter: 0,\r\n        questionId: 1,\r\n        ansOpt: [],\r\n        questions: [],\r\n        currentAnswers: [],\r\n        currQuestion: '',\r\n        question: '',\r\n        questionTotal: 10,\r\n        answerOptions: [],\r\n        answer: '',\r\n        answersCount: {\r\n          correct: 0,\r\n          incorrect: 0,\r\n        },\r\n        result: '',\r\n        category: '',\r\n        quizDone: false,\r\n\r\n      })\r\n\r\n      console.log(\"lel\");\r\n\r\n      var addedString = \"\";\r\n      var languageIndex = 0;\r\n      switch (this.state.user.language) {\r\n        case 'Korean':\r\n          languageIndex = 0;\r\n          addedString = \"krn-cards\";\r\n          break;\r\n        case 'Japanese':\r\n          languageIndex = 1;\r\n          addedString = \"jpn-cards\";\r\n          break;\r\n        case 'Polish':\r\n          languageIndex = 2;\r\n          addedString = \"pln-cards\";\r\n          break;\r\n      }\r\n      await this.setState({\r\n        languageIndex: languageIndex,\r\n        addedString: addedString,\r\n      });\r\n\r\n      var categoryIndex = 0;\r\n      var categoryString = null;\r\n      switch (this.props.category) {\r\n        case 'Animals':\r\n          console.log(this.props.category);\r\n          categoryIndex = 0;\r\n          categoryString = addedString + \"-animals\";\r\n          break;\r\n        case 'People':\r\n          console.log(this.props.category);\r\n          categoryIndex = 1;\r\n          categoryString = addedString + \"-people\";\r\n          break;\r\n        case 'Food':\r\n          console.log(this.props.category);\r\n          categoryIndex = 2;\r\n          categoryString = addedString + \"-food\";\r\n          break;\r\n        case 'School':\r\n          console.log(this.props.category);\r\n          categoryIndex = 3;\r\n          categoryString = addedString + \"-school\";\r\n          break;\r\n        case 'House':\r\n          console.log(this.props.category);\r\n          categoryIndex = 4;\r\n          categoryString = addedString + \"-house\";\r\n          break;\r\n        default:\r\n          console.log(\"null\");\r\n          break;\r\n      }\r\n      var allCards = null;\r\n\r\n\r\n      var data = db.getCards(languageIndex, addedString, categoryIndex, categoryString).then(snapshot => snapshot.val());\r\n      await data.then((value) => {\r\n        allCards = value;\r\n      });\r\n\r\n      console.log(allCards);\r\n      var userCards = await this.truncCards(allCards);\r\n      await this.shuffleArray(userCards);\r\n      await this.setState({\r\n        questions: userCards,\r\n\r\n      })\r\n      console.log(userCards);\r\n\r\n      await this.fillQuestions();\r\n\r\n    }\r\n  }\r\n\r\n  async fillQuestions() {\r\n\r\n    const questionList = this.state.questions;\r\n    const optionList = [];\r\n    if (questionList.length > 2) {\r\n\r\n      for (var index = 0; index < questionList.length; ++index) {\r\n\r\n        var firstIndex = Math.floor(Math.random() * questionList.length);\r\n\r\n        while (firstIndex === index) {\r\n          firstIndex = Math.floor(Math.random() * questionList.length);\r\n        }\r\n        const options = [];\r\n        options.push({\r\n          type: \"incorrect\",\r\n          content: (questionList[firstIndex].kan !== '') ? questionList[firstIndex].kan : questionList[firstIndex].rom,\r\n        })\r\n\r\n        var secondIndex = Math.floor(Math.random() * questionList.length);\r\n\r\n        while (secondIndex === index || secondIndex === firstIndex) {\r\n          secondIndex = Math.floor(Math.random() * questionList.length);\r\n        }\r\n        options.push({\r\n          type: \"incorrect\",\r\n          content: (questionList[secondIndex].kan !== '') ? questionList[secondIndex].kan : questionList[secondIndex].rom,\r\n        })\r\n\r\n        var thirdIndex = Math.floor(Math.random() * questionList.length);\r\n\r\n        while (thirdIndex === index || thirdIndex === firstIndex || thirdIndex === secondIndex) {\r\n          thirdIndex = Math.floor(Math.random() * questionList.length);\r\n        }\r\n        options.push({\r\n          type: \"incorrect\",\r\n          content: (questionList[thirdIndex].kan !== '') ? questionList[thirdIndex].kan : questionList[thirdIndex].rom,\r\n        })\r\n\r\n        var rightIndex = Math.floor(Math.random() * options.length);\r\n        //console.log(rightIndex);\r\n        options[rightIndex].type = \"correct\";\r\n        options[rightIndex].content = (questionList[index].kan !== '') ? questionList[index].kan : questionList[index].rom;\r\n\r\n        optionList.push({\r\n          answers: options,\r\n          rightAnswer: rightIndex,\r\n        })\r\n      }\r\n      if (questionList.length > 0) {\r\n        this.setState({\r\n\r\n          ansOpt: optionList,\r\n          currentAnswers: optionList[0].answers,\r\n          currQuestion: 'Which word means ' + this.state.questions[0].eng + ' in ' + this.state.user.language + ' ? ',\r\n\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getUserData();\r\n  }\r\n\r\n  shuffleArray(array) {\r\n    var currentIndex = array.length,\r\n      temporaryValue,\r\n      randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      // And swap it with the current element.\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  setUserAnswer(answer) {\r\n    console.log(answer);\r\n    this.setState((state, props) => ({\r\n      answersCount: {\r\n        ...state.answersCount,\r\n        [answer]: state.answersCount[answer] + 1\r\n      },\r\n      answer: answer\r\n    }));\r\n  }\r\n\r\n  handleAnswerSelected(event) {\r\n    this.setUserAnswer(event.currentTarget.value);\r\n\r\n    if (this.state.questionId < this.state.questionTotal) {\r\n      setTimeout(() => this.setNextQuestion(), 300);\r\n    } else {\r\n      setTimeout(() => this.setResults(this.getResults()), 300);\r\n    }\r\n  }\r\n\r\n\r\n  setNextQuestion() {\r\n    const counter = this.state.counter + 1;\r\n    const questionId = this.state.questionId + 1;\r\n\r\n    this.setState({\r\n      counter: counter,\r\n      questionId: questionId,\r\n      currQuestion: 'Which word means ' + this.state.questions[counter].eng + '?            ',\r\n      currentAnswers: this.state.ansOpt[counter].answers,\r\n      answer: ''\r\n    });\r\n  }\r\n\r\n  getResults() {\r\n    const answersCount = this.state.answersCount;\r\n    const questionsTotal = this.state.questionTotal;\r\n    var resultPercentage = answersCount.correct / questionsTotal;\r\n    var resultString = resultPercentage * 100.0 + '%';\r\n\r\n    if (resultPercentage * 100.0 < 50) {\r\n      resultString = resultString + '. Score 70% an above to get stuff for your pet.';\r\n    }\r\n    else {\r\n      //losowanie itemków\r\n      const min = 1;\r\n      const max = 4;\r\n      const itemType = Math.floor(min + Math.random() * (max - min));\r\n\r\n      switch (itemType) {\r\n        case 1:\r\n          if (resultPercentage > 0.49 && resultPercentage < 0.71) {\r\n            resultString = resultString + '! You receive 1 ⚾!';\r\n            this.setState({\r\n              playItems: 1,\r\n            });\r\n          }\r\n          if (resultPercentage > 0.7 && resultPercentage < 0.91) {\r\n            resultString = resultString + '! You receive 2 ⚾!';\r\n            this.setState({\r\n              playItems: 2,\r\n            });\r\n          }\r\n          if (resultPercentage > 0.9) {\r\n            resultString = resultString + '! You receive 3 ⚾!';\r\n            this.setState({\r\n              playItems: 3,\r\n            });\r\n\r\n            db.setItem(this.props.uid, 0, 'play', this.state.user.pet_items[0].number + this.state.playItems);\r\n          }\r\n          break;\r\n        case 2:\r\n          if (resultPercentage > 0.49 && resultPercentage < 0.71) {\r\n            resultString = resultString + '! You receive 1 🍌!';\r\n            this.setState({\r\n              foodItems: 1,\r\n            });\r\n          }\r\n          if (resultPercentage > 0.7 && resultPercentage < 0.91) {\r\n            resultString = resultString + '! You receive 2 🍌!';\r\n            this.setState({\r\n              foodItems: 2,\r\n            });\r\n          }\r\n          if (resultPercentage > 0.9) {\r\n            resultString = resultString + '! You receive 3 🍌!';\r\n            this.setState({\r\n              foodItems: 3,\r\n            });\r\n            db.setItem(this.props.uid, 1, 'food', this.state.user.pet_items[1].number + this.state.foodItems);\r\n          }\r\n          break;\r\n        case 3:\r\n          if (resultPercentage > 0.49 && resultPercentage < 0.71) {\r\n            resultString = resultString + '! You receive 1 💦!';\r\n            this.setState({\r\n              washItems: 1,\r\n            });\r\n          }\r\n          if (resultPercentage > 0.7 && resultPercentage < 0.91) {\r\n            resultString = resultString + '! You receive 2 💦!';\r\n            this.setState({\r\n              washItems: 2,\r\n            });\r\n          }\r\n          if (resultPercentage > 0.9) {\r\n            resultString = resultString + '! You receive 3 💦!';\r\n            this.setState({\r\n              washItems: 3,\r\n            });\r\n            db.setItem(this.props.uid, 2, 'wash', this.state.user.pet_items[2].number + this.state.washItems);\r\n          }\r\n          break;\r\n        case 4:\r\n          if (resultPercentage > 0.49 && resultPercentage < 0.71) {\r\n            resultString = resultString + '! You receive 1 🎹!';\r\n            this.setState({\r\n              musicItems: 1,\r\n            });\r\n          }\r\n          if (resultPercentage > 0.7 && resultPercentage < 0.91) {\r\n            resultString = resultString + '! You receive 2 🎹!';\r\n            this.setState({\r\n              musicItems: 2,\r\n            });\r\n          }\r\n          if (resultPercentage > 0.9) {\r\n            resultString = resultString + '! You receive 3 🎹!';\r\n            this.setState({\r\n              musicItems: 3,\r\n            });\r\n            db.setItem(this.props.uid, 3, 'music', this.state.user.pet_items[3].number + this.state.musicItems);\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    console.log(\r\n      'play items: ' + this.state.playItems + ',' +\r\n      'food items: ' + this.state.foodItems + ',' +\r\n      'wash items: ' + this.state.washItems + ',' +\r\n      'music items: ' + this.state.musicItems + '.'\r\n    );\r\n\r\n    //tutaj dodanie do aktualnej liczby itemków do bazy danych\r\n    //\r\n    //\r\n\r\n    return resultString;\r\n  }\r\n\r\n  quizUndone() {\r\n    this.setState({\r\n      quizDone: false,\r\n    });\r\n  }\r\n\r\n  setResults(result) {\r\n    this.setState({\r\n      result: result,\r\n      quizDone: true,\r\n    });\r\n\r\n    this.props.quizComplete(this.state.quizDone);\r\n    this.loadDatabase();\r\n  }\r\n\r\n  renderQuiz() {\r\n    if (this.state.user !== null) {\r\n      return (\r\n        <div>\r\n          <Quiz\r\n            answer={this.state.answer}\r\n            currentAnswers={this.state.currentAnswers}\r\n            answerOptions={this.state.answerOptions}\r\n            questionId={this.state.questionId}\r\n            question={this.state.question}\r\n            questionTotal={this.state.questionTotal}\r\n            onAnswerSelected={this.handleAnswerSelected}\r\n            loadDatabase={this.loadDatabase}\r\n            questions={this.state.questions}\r\n            ansOpt={this.state.ansOpt}\r\n            currQuestion={this.state.currQuestion}\r\n            generateNew={this.props.generateNew}\r\n          />\r\n        </div >\r\n      );\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  renderResult() {\r\n    return <Result quizResult={this.state.result}\r\n      generateNew={this.props.generateNew}\r\n      quizUndone={this.quizUndone} />;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.quizDone ? this.renderResult() : this.renderQuiz()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuizCard;"]},"metadata":{},"sourceType":"module"}