{"ast":null,"code":"import _classCallCheck from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\uni\\\\tamago\\\\ui\\\\src\\\\components\\\\HomePage\\\\SettingSection\\\\Settings.js\";\nimport React from 'react';\nimport './settings.css';\nimport SettingsCard from './SettingsCard/SettingsCard.js';\nimport { firebase } from '../../../firebase';\nimport * as routes from '../../../constants/routes';\n\nvar authCondition = function authCondition(authUser) {\n  return !!authUser;\n};\n\nvar Settings =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Settings, _React$Component);\n\n  function Settings(props) {\n    var _this;\n\n    _classCallCheck(this, Settings);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Settings).call(this, props));\n\n    _this.passLang = function (lang) {\n      console.log(lang); //this.props.passLangUp(lang);\n      //przesłać info o języku do jakiegoś komponenta nadrzędnego, żeby mogło trafić do STUDY i QUIZZES\n    };\n\n    _this.state = {\n      language: 'Japanese'\n    };\n    return _this;\n  }\n\n  _createClass(Settings, [{\n    key: \"render\",\n    value: function render() {\n      firebase.auth.onAuthStateChanged(function (authUser) {\n        if (!authCondition(authUser)) {\n          window.location = routes.SIGN_IN;\n        }\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(SettingsCard, {\n        languageChange: this.passLang,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Settings;\n}(React.Component);\n\nexport default Settings;","map":{"version":3,"sources":["D:\\uni\\tamago\\ui\\src\\components\\HomePage\\SettingSection\\Settings.js"],"names":["React","SettingsCard","firebase","routes","authCondition","authUser","Settings","props","passLang","lang","console","log","state","language","auth","onAuthStateChanged","window","location","SIGN_IN","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AAEA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAO,KAAKC,MAAZ,MAAwB,2BAAxB;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,QAAD;AAAA,SAAc,CAAC,CAACA,QAAhB;AAAA,CAAtB;;IAIMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;;AADiB,UAQnBC,QARmB,GAQR,UAACC,IAAD,EAAU;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EADmB,CAEnB;AAEA;AACD,KAbkB;;AAGjB,UAAKG,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAHiB;AAMlB;;;;6BASQ;AAGPX,MAAAA,QAAQ,CAACY,IAAT,CAAcC,kBAAd,CAAiC,UAAAV,QAAQ,EAAI;AAC3C,YAAI,CAACD,aAAa,CAACC,QAAD,CAAlB,EAA8B;AAC5BW,UAAAA,MAAM,CAACC,QAAP,GAAkBd,MAAM,CAACe,OAAzB;AACD;AACF,OAJD;AAKA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAc,QAAA,cAAc,EAAE,KAAKV,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAMD;;;;EA9BoBR,KAAK,CAACmB,S;;AAiC7B,eAAeb,QAAf","sourcesContent":["import React from 'react';\r\nimport './settings.css'\r\nimport SettingsCard from './SettingsCard/SettingsCard.js';\r\n\r\nimport { firebase } from '../../../firebase';\r\nimport * as routes from '../../../constants/routes';\r\n\r\n\r\nconst authCondition = (authUser) => !!authUser;\r\n\r\n\r\n\r\nclass Settings extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      language: 'Japanese',\r\n    }\r\n  }\r\n\r\n  passLang = (lang) => {\r\n    console.log(lang);\r\n    //this.props.passLangUp(lang);\r\n\r\n    //przesłać info o języku do jakiegoś komponenta nadrzędnego, żeby mogło trafić do STUDY i QUIZZES\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n    firebase.auth.onAuthStateChanged(authUser => {\r\n      if (!authCondition(authUser)) {\r\n        window.location = routes.SIGN_IN;\r\n      }\r\n    });\r\n    return (\r\n      <div>\r\n        <SettingsCard languageChange={this.passLang} />\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Settings;"]},"metadata":{},"sourceType":"module"}