{"ast":null,"code":"var _jsxFileName = \"D:\\\\uni\\\\tamago\\\\ui\\\\src\\\\components\\\\HomePage\\\\QuizSection\\\\QuizCard\\\\Quiz.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Question from './Question/Question';\nimport QuestionCount from './QuestionCount/QuestionCount';\nimport AnswerOption from './AnswerOption/AnswerOption';\n\nfunction Quiz(props) {\n  function renderAnswerOptions(key) {\n    return React.createElement(AnswerOption, {\n      key: key.content,\n      answerContent: key.content,\n      answerType: key.type,\n      answer: props.answer,\n      questionId: props.questionId,\n      onAnswerSelected: props.onAnswerSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"quiz\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(QuestionCount, {\n    counter: props.questionId,\n    total: props.questionTotal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    className: \"answerOptions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, props.answerOptions.map(renderAnswerOptions)));\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  counter: PropTypes.number.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\nexport default Quiz;","map":{"version":3,"sources":["D:\\uni\\tamago\\ui\\src\\components\\HomePage\\QuizSection\\QuizCard\\Quiz.js"],"names":["React","PropTypes","Question","QuestionCount","AnswerOption","Quiz","props","renderAnswerOptions","key","content","type","answer","questionId","onAnswerSelected","questionTotal","answerOptions","map","propTypes","string","isRequired","array","counter","number","question","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACpB,WAASC,mBAAT,CAA6BC,GAA7B,EAAkC;AAC/B,WACE,oBAAC,YAAD;AACE,MAAA,GAAG,EAAEA,GAAG,CAACC,OADX;AAEE,MAAA,aAAa,EAAED,GAAG,CAACC,OAFrB;AAGE,MAAA,UAAU,EAAED,GAAG,CAACE,IAHlB;AAIE,MAAA,MAAM,EAAEJ,KAAK,CAACK,MAJhB;AAKE,MAAA,UAAU,EAAEL,KAAK,CAACM,UALpB;AAME,MAAA,gBAAgB,EAAEN,KAAK,CAACO,gBAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD;;AACC,SACG;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AACE,IAAA,OAAO,EAAEP,KAAK,CAACM,UADjB;AAEE,IAAA,KAAK,EAAEN,KAAK,CAACQ,aAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,KAAK,CAACS,aAAN,CAAoBC,GAApB,CAAwBT,mBAAxB,CADH,CANF,CADH;AAYD;;AAEDF,IAAI,CAACY,SAAL,GAAiB;AACfN,EAAAA,MAAM,EAAEV,SAAS,CAACiB,MAAV,CAAiBC,UADV;AAEfJ,EAAAA,aAAa,EAAEd,SAAS,CAACmB,KAAV,CAAgBD,UAFhB;AAGfE,EAAAA,OAAO,EAAEpB,SAAS,CAACqB,MAAV,CAAiBH,UAHX;AAIfI,EAAAA,QAAQ,EAAEtB,SAAS,CAACiB,MAAV,CAAiBC,UAJZ;AAKfP,EAAAA,UAAU,EAAEX,SAAS,CAACqB,MAAV,CAAiBH,UALd;AAMfL,EAAAA,aAAa,EAAEb,SAAS,CAACqB,MAAV,CAAiBH,UANjB;AAOfN,EAAAA,gBAAgB,EAAEZ,SAAS,CAACuB,IAAV,CAAeL;AAPlB,CAAjB;AAUA,eAAed,IAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Question from './Question/Question';\r\nimport QuestionCount from './QuestionCount/QuestionCount';\r\nimport AnswerOption from './AnswerOption/AnswerOption';\r\n\r\nfunction Quiz(props) {\r\n\tfunction renderAnswerOptions(key) {\r\n    return (\r\n      <AnswerOption\r\n        key={key.content}\r\n        answerContent={key.content}\r\n        answerType={key.type}\r\n        answer={props.answer}\r\n        questionId={props.questionId}\r\n        onAnswerSelected={props.onAnswerSelected}\r\n      />\r\n    );\r\n  }\r\n    return (\r\n       <div className=\"quiz\">\r\n         <QuestionCount\r\n           counter={props.questionId}\r\n           total={props.questionTotal}\r\n         />\r\n         {/*<Question content={props.question} />*/}\r\n         <ul className=\"answerOptions\">\r\n           {props.answerOptions.map(renderAnswerOptions)}\r\n         </ul>\r\n       </div>\r\n    );\r\n  }\r\n\r\n  Quiz.propTypes = {\r\n    answer: PropTypes.string.isRequired,\r\n    answerOptions: PropTypes.array.isRequired,\r\n    counter: PropTypes.number.isRequired,\r\n    question: PropTypes.string.isRequired,\r\n    questionId: PropTypes.number.isRequired,\r\n    questionTotal: PropTypes.number.isRequired,\r\n    onAnswerSelected: PropTypes.func.isRequired\r\n  };\r\n\r\n  export default Quiz;"]},"metadata":{},"sourceType":"module"}