{"ast":null,"code":"import _objectSpread from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _defineProperty from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\uni\\\\tamago\\\\ui\\\\src\\\\components\\\\HomePage\\\\SettingSection\\\\SettingsCard\\\\PwdChange.js\";\nimport React, { Component } from 'react';\nimport { auth } from '../../../../firebase';\nimport './pwdchange.css';\n\nvar byPropKey = function byPropKey(propertyName, value) {\n  return function () {\n    return _defineProperty({}, propertyName, value);\n  };\n};\n\nvar INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nvar PwdChangeForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PwdChangeForm, _Component);\n\n  function PwdChangeForm(props) {\n    var _this;\n\n    _classCallCheck(this, PwdChangeForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PwdChangeForm).call(this, props));\n\n    _this.onSubmit = function (event) {\n      var _this$state = _this.state,\n          passwordOne = _this$state.passwordOne,\n          passwordTwo = _this$state.passwordTwo;\n      console.log(event);\n      console.log(passwordTwo);\n\n      if (passwordOne === passwordTwo) {\n        auth.doPasswordUpdate(passwordOne).then(function () {\n          _this.setState(_objectSpread({}, INITIAL_STATE));\n        }).catch(function (error) {\n          _this.setState(byPropKey('error', error));\n        });\n        event.preventDefault();\n        alert(\"Successfully managed to update the password.\");\n      } else {\n        event.preventDefault();\n        alert(\"Please provide identical passwords.\");\n      }\n    };\n\n    _this.state = _objectSpread({}, INITIAL_STATE);\n    return _this;\n  }\n\n  _createClass(PwdChangeForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          passwordOne = _this$state2.passwordOne,\n          passwordTwo = _this$state2.passwordTwo,\n          error = _this$state2.error;\n      var isInvalid = passwordOne === '';\n      return React.createElement(\"form\", {\n        id: \"settings-form\",\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dropdownWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dropdownTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"New password:\"), React.createElement(\"div\", {\n        className: \"dropdownOption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: passwordOne,\n        onChange: function onChange(event) {\n          return _this2.setState(byPropKey('passwordOne', event.target.value));\n        },\n        type: \"password\",\n        placeholder: \"Insert new password\",\n        required: true,\n        className: \"pwd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"dropdownWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dropdownTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Repeat the password:\"), React.createElement(\"div\", {\n        className: \"dropdownOption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: passwordTwo,\n        onChange: function onChange(event) {\n          return _this2.setState(byPropKey('passwordTwo', event.target.value));\n        },\n        type: \"password\",\n        placeholder: \"Insert new password\",\n        required: true,\n        className: \"pwd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })))), React.createElement(\"button\", {\n        className: \"btn-reset\",\n        disabled: isInvalid,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Reset My Password\")), error && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, error.message));\n    }\n  }]);\n\n  return PwdChangeForm;\n}(Component);\n\nexport default PwdChangeForm;","map":{"version":3,"sources":["D:\\uni\\tamago\\ui\\src\\components\\HomePage\\SettingSection\\SettingsCard\\PwdChange.js"],"names":["React","Component","auth","byPropKey","propertyName","value","INITIAL_STATE","passwordOne","passwordTwo","error","PwdChangeForm","props","onSubmit","event","state","console","log","doPasswordUpdate","then","setState","catch","preventDefault","alert","isInvalid","target","message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { auth } from '../../../../firebase';\r\nimport './pwdchange.css';\r\n\r\nconst byPropKey = (propertyName, value) => () => ({\r\n\t[propertyName]: value,\r\n});\r\n\r\nconst INITIAL_STATE = { passwordOne: '', passwordTwo: '', error: null, };\r\n\r\nclass PwdChangeForm extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = { ...INITIAL_STATE };\r\n\t}\r\n\r\n\tonSubmit = (event) => {\r\n\r\n\t\tconst {\r\n\t\t\tpasswordOne,\r\n\t\t\tpasswordTwo\r\n\t\t} = this.state;\r\n\r\n\t\tconsole.log(event);\r\n\t\tconsole.log(passwordTwo);\r\n\t\tif (passwordOne === passwordTwo) {\r\n\r\n\t\t\tauth.doPasswordUpdate(passwordOne)\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tthis.setState({ ...INITIAL_STATE });\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tthis.setState(byPropKey('error', error));\r\n\t\t\t\t});\r\n\r\n\t\t\tevent.preventDefault();\r\n\t\t\talert(\"Successfully managed to update the password.\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\tevent.preventDefault();\r\n\t\t\talert(\"Please provide identical passwords.\");\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { passwordOne,\r\n\t\t\tpasswordTwo,\r\n\t\t\terror,\r\n\t\t} = this.state;\r\n\r\n\t\tconst isInvalid = passwordOne === '';\r\n\r\n\t\treturn (\r\n\t\t\t<form id=\"settings-form\" onSubmit={this.onSubmit}>\r\n\t\t\t\t<div className=\"dropdownWrapper\">\r\n\t\t\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t\t\t<div className=\"dropdownTitle\">New password:</div>\r\n\t\t\t\t\t\t<div className=\"dropdownOption\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tvalue={passwordOne}\r\n\t\t\t\t\t\t\t\tonChange={event => this.setState(byPropKey('passwordOne', event.target.value))}\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Insert new password\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tclassName=\"pwd\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"dropdownWrapper\">\r\n\t\t\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t\t\t<div className=\"dropdownTitle\">Repeat the password:</div>\r\n\t\t\t\t\t\t<div className=\"dropdownOption\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tvalue={passwordTwo}\r\n\t\t\t\t\t\t\t\tonChange={event => this.setState(byPropKey('passwordTwo', event.target.value))}\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Insert new password\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tclassName=\"pwd\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className=\"btn-reset\" disabled={isInvalid} type=\"submit\"><span>Reset My Password</span></button>\r\n\t\t\t\t{error && <p>{error.message}</p>}\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}\r\nexport default PwdChangeForm;\r\n"]},"metadata":{},"sourceType":"module"}