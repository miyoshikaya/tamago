{"ast":null,"code":"import _classCallCheck from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\uni\\\\tamago\\\\ui\\\\src\\\\components\\\\HomePage\\\\PetSection\\\\PetCard\\\\CountdownTimers\\\\PlayTimer.js\";\nimport React from 'react';\nimport './countdowntimers.css';\n\nvar PlayTimer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PlayTimer, _React$Component);\n\n  function PlayTimer(props) {\n    var _this;\n\n    _classCallCheck(this, PlayTimer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlayTimer).call(this, props));\n    _this.state = {\n      time: {},\n      seconds: 3599,\n      restart: false\n    };\n    _this.timer = 0;\n    _this.startTimer = _this.startTimer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.countDown = _this.countDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.restartTimer = _this.restartTimer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PlayTimer, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timer);\n    }\n  }, {\n    key: \"secondsToTime\",\n    value: function secondsToTime(secs) {\n      var hours = Math.floor(secs / (60 * 60));\n      var divisor_for_minutes = secs % (60 * 60);\n      var minutes = Math.floor(divisor_for_minutes / 60);\n      var divisor_for_seconds = divisor_for_minutes % 60;\n      var seconds = Math.ceil(divisor_for_seconds);\n      var obj = {\n        \"h\": hours,\n        \"m\": minutes,\n        \"s\": seconds\n      };\n      return obj;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var timeLeftVar = this.secondsToTime(this.state.seconds);\n      this.setState({\n        time: timeLeftVar\n      });\n      this.startTimer();\n    }\n  }, {\n    key: \"startTimer\",\n    value: function startTimer() {\n      if (this.timer === 0 && this.state.seconds > 0) {\n        this.setState({\n          seconds: 3599\n        });\n        this.timer = setInterval(this.countDown, 1000);\n      }\n    }\n  }, {\n    key: \"restartTimer\",\n    value: function restartTimer() {\n      this.setState({\n        restart: true\n      });\n    }\n  }, {\n    key: \"countDown\",\n    value: function countDown() {\n      if (this.props.restart) {\n        this.restartTimer(); //boom info back, zeby zmienic restart na false <---\n\n        this.props.pls();\n      }\n\n      if (!this.props.alive) {\n        console.log('pet died babe');\n        clearInterval(this.timer); //this.props.petDied('hunger');\n      }\n\n      if (!this.state.restart) {\n        // Remove one second, set state so a re-render happens.\n        var seconds = this.state.seconds - 1;\n        this.setState({\n          time: this.secondsToTime(seconds),\n          seconds: seconds\n        }); // Check if we're at zero.\n\n        if (seconds === 0) {\n          clearInterval(this.timer);\n          this.props.petDied('loneliness'); //PET DEAD\n        }\n      } else {\n        var _seconds = 3599;\n        this.setState({\n          restart: false,\n          time: this.secondsToTime(_seconds),\n          seconds: _seconds\n        });\n      }\n    }\n  }, {\n    key: \"renderMinutesWithZero\",\n    value: function renderMinutesWithZero() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"timer play-timer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"0\", this.state.time.m, \":\", this.state.time.s, this.props.restart));\n    }\n  }, {\n    key: \"renderSecondsWithZero\",\n    value: function renderSecondsWithZero() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"timer play-timer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.state.time.m, \":0\", this.state.time.s, this.props.restart));\n    }\n  }, {\n    key: \"renderBothWithZero\",\n    value: function renderBothWithZero() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"timer play-timer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"0\", this.state.time.m, \":0\", this.state.time.s, this.props.restart));\n    }\n  }, {\n    key: \"renderNormalTimer\",\n    value: function renderNormalTimer() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"timer play-timer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, this.state.time.m, \":\", this.state.time.s, this.props.restart));\n    }\n  }, {\n    key: \"renderOtherTimer\",\n    value: function renderOtherTimer() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, this.state.time.m < 10 && this.state.time.s > 9 ? this.renderMinutesWithZero() : this.renderOtherOtherTimer());\n    }\n  }, {\n    key: \"renderOtherOtherTimer\",\n    value: function renderOtherOtherTimer() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, this.state.time.m > 9 && this.state.time.s < 10 ? this.renderSecondsWithZero() : this.renderNormalTimer());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, this.state.time.m < 10 && this.state.time.s < 10 ? this.renderBothWithZero() : this.renderOtherTimer());\n    }\n  }]);\n\n  return PlayTimer;\n}(React.Component);\n\nexport default PlayTimer;","map":{"version":3,"sources":["D:\\uni\\tamago\\ui\\src\\components\\HomePage\\PetSection\\PetCard\\CountdownTimers\\PlayTimer.js"],"names":["React","PlayTimer","props","state","time","seconds","restart","timer","startTimer","bind","countDown","restartTimer","clearInterval","secs","hours","Math","floor","divisor_for_minutes","minutes","divisor_for_seconds","ceil","obj","timeLeftVar","secondsToTime","setState","setInterval","pls","alive","console","log","petDied","m","s","renderMinutesWithZero","renderOtherOtherTimer","renderSecondsWithZero","renderNormalTimer","renderBothWithZero","renderOtherTimer","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './countdowntimers.css';\r\n\r\nclass PlayTimer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      time: {},\r\n      seconds: 3599,\r\n      restart: false,\r\n    };\r\n    this.timer = 0;\r\n    this.startTimer = this.startTimer.bind(this);\r\n    this.countDown = this.countDown.bind(this);\r\n    this.restartTimer = this.restartTimer.bind(this);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n  }\r\n\r\n  secondsToTime(secs) {\r\n    let hours = Math.floor(secs / (60 * 60));\r\n\r\n    let divisor_for_minutes = secs % (60 * 60);\r\n    let minutes = Math.floor(divisor_for_minutes / 60);\r\n\r\n    let divisor_for_seconds = divisor_for_minutes % 60;\r\n    let seconds = Math.ceil(divisor_for_seconds);\r\n\r\n    let obj = {\r\n      \"h\": hours,\r\n      \"m\": minutes,\r\n      \"s\": seconds\r\n    };\r\n    return obj;\r\n  }\r\n\r\n  componentDidMount() {\r\n    let timeLeftVar = this.secondsToTime(this.state.seconds);\r\n    this.setState({ time: timeLeftVar });\r\n    this.startTimer();\r\n  }\r\n\r\n  startTimer() {\r\n    if (this.timer === 0 && this.state.seconds > 0) {\r\n      this.setState({\r\n        seconds: 3599,\r\n      });\r\n      this.timer = setInterval(this.countDown, 1000);\r\n    }\r\n  }\r\n\r\n  restartTimer() {\r\n    this.setState({\r\n      restart: true,\r\n    });\r\n  }\r\n\r\n\r\n  countDown() {\r\n    if (this.props.restart) {\r\n      this.restartTimer();\r\n      //boom info back, zeby zmienic restart na false <---\r\n      this.props.pls();\r\n    }\r\n\r\n    if (!this.props.alive) {\r\n      console.log('pet died babe');\r\n      clearInterval(this.timer);\r\n      //this.props.petDied('hunger');\r\n    }\r\n\r\n    if (!this.state.restart) {\r\n      // Remove one second, set state so a re-render happens.\r\n      let seconds = this.state.seconds - 1;\r\n\r\n      this.setState({\r\n        time: this.secondsToTime(seconds),\r\n        seconds: seconds,\r\n      });\r\n      // Check if we're at zero.\r\n      if (seconds === 0) {\r\n        clearInterval(this.timer);\r\n        this.props.petDied('loneliness');\r\n        //PET DEAD\r\n      }\r\n    }\r\n    else {\r\n      let seconds = 3599;\r\n      this.setState({\r\n        restart: false,\r\n        time: this.secondsToTime(seconds),\r\n        seconds: seconds,\r\n      });\r\n    }\r\n  }\r\n\r\n  renderMinutesWithZero() {\r\n    return (\r\n      <div>\r\n        <h3 className=\"timer play-timer\">\r\n          0{this.state.time.m}:{this.state.time.s}\r\n          {this.props.restart}\r\n        </h3>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSecondsWithZero() {\r\n    return (\r\n      <div>\r\n        <h3 className=\"timer play-timer\">\r\n          {this.state.time.m}:0{this.state.time.s}\r\n          {this.props.restart}\r\n        </h3>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderBothWithZero() {\r\n    return (\r\n      <div>\r\n        <h3 className=\"timer play-timer\">\r\n          0{this.state.time.m}:0{this.state.time.s}\r\n          {this.props.restart}\r\n        </h3>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderNormalTimer() {\r\n    return (\r\n      <div>\r\n        {/*<button onClick={this.restartTimer}>Restart</button>*/}\r\n        <h3 className=\"timer play-timer\">\r\n          {this.state.time.m}:{this.state.time.s}\r\n          {this.props.restart}\r\n        </h3>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderOtherTimer() {\r\n    return (\r\n      <div>\r\n        {\r\n          (this.state.time.m < 10 && this.state.time.s > 9) ?\r\n            this.renderMinutesWithZero()\r\n            : this.renderOtherOtherTimer()\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderOtherOtherTimer() {\r\n    return (\r\n      <div>\r\n        {\r\n          (this.state.time.m > 9 && this.state.time.s < 10) ?\r\n            this.renderSecondsWithZero()\r\n            : this.renderNormalTimer()\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {\r\n          (this.state.time.m < 10 && this.state.time.s < 10) ?\r\n            this.renderBothWithZero()\r\n            : this.renderOtherTimer()\r\n        }\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default PlayTimer;"]},"metadata":{},"sourceType":"module"}