{"ast":null,"code":"import _objectSpread from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _defineProperty from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\uni\\\\tamago\\\\ui\\\\src\\\\components\\\\HomePage\\\\SettingSection\\\\SettingsCard\\\\PwdChange.js\";\nimport React, { Component } from 'react';\nimport { auth } from '../../../../firebase';\nimport './pwdchange.css';\n\nvar byPropKey = function byPropKey(propertyName, value) {\n  return function () {\n    return _defineProperty({}, propertyName, value);\n  };\n};\n\nvar INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nvar PwdChangeForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PwdChangeForm, _Component);\n\n  function PwdChangeForm(props) {\n    var _this;\n\n    _classCallCheck(this, PwdChangeForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PwdChangeForm).call(this, props));\n\n    _this.onSubmit = function (event) {\n      var _this$state = _this.state,\n          passwordOne = _this$state.passwordOne,\n          passwordTwo = _this$state.passwordTwo;\n\n      if (passwordOne === passwordTwo) {\n        auth.doPasswordUpdate(passwordOne).then(function () {\n          _this.setState(_objectSpread({}, INITIAL_STATE));\n        }).catch(function (error) {\n          _this.setState(byPropKey('error', error));\n        });\n        event.preventDefault();\n        alert(\"Successfully managed to update the password.\");\n      }\n    };\n\n    _this.state = _objectSpread({}, INITIAL_STATE);\n    return _this;\n  }\n\n  _createClass(PwdChangeForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          passwordOne = _this$state2.passwordOne,\n          passwordTwo = _this$state2.passwordTwo,\n          error = _this$state2.error;\n      var isInvalid = passwordOne !== passwordTwo || passwordOne === '';\n      return React.createElement(\"form\", {\n        id: \"settings-form\",\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dropdownWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dropdownTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"New password:\"), React.createElement(\"div\", {\n        className: \"dropdownOption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: passwordOne,\n        onChange: function onChange(event) {\n          return _this2.setState(byPropKey('passwordOne', event.target.value));\n        },\n        type: \"password\",\n        placeholder: \"Insert new password\",\n        required: true,\n        className: \"pwd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"dropdownWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dropdownTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Repeat the password:\"), React.createElement(\"div\", {\n        className: \"dropdownOption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: passwordTwo,\n        onChange: function onChange(event) {\n          return _this2.setState(byPropKey('passwordTwo', event.target.value));\n        },\n        type: \"password\",\n        placeholder: \"Insert new password\",\n        required: true,\n        className: \"pwd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })))), React.createElement(\"button\", {\n        className: \"btn-reset\",\n        disabled: isInvalid,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Reset My Password\")), error && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, error.message));\n    }\n  }]);\n\n  return PwdChangeForm;\n}(Component);\n\nexport default PwdChangeForm;","map":{"version":3,"sources":["D:\\uni\\tamago\\ui\\src\\components\\HomePage\\SettingSection\\SettingsCard\\PwdChange.js"],"names":["React","Component","auth","byPropKey","propertyName","value","INITIAL_STATE","passwordOne","passwordTwo","error","PwdChangeForm","props","onSubmit","event","state","doPasswordUpdate","then","setState","catch","preventDefault","alert","isInvalid","target","message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { auth } from '../../../../firebase';\r\nimport './pwdchange.css';\r\n\r\nconst byPropKey = (propertyName, value) => () => ({ \r\n\t[propertyName]: value, \r\n});\r\n\r\nconst INITIAL_STATE = { passwordOne: '', passwordTwo: '', error: null, };\r\n\r\nclass PwdChangeForm extends Component { \r\n\tconstructor(props) {\r\n\t super(props);\r\n\r\n\tthis.state = { ...INITIAL_STATE };\r\n}\r\n\r\nonSubmit = (event) => { \r\n\tconst { \r\n\t\tpasswordOne,\r\n\t\tpasswordTwo \r\n\t} = this.state;\r\n\r\n\tif(passwordOne === passwordTwo){\r\n\r\n\t\tauth.doPasswordUpdate(passwordOne) \r\n\t\t.then(() => { \r\n\t\t\tthis.setState({ ...INITIAL_STATE }); \r\n\t\t}) \r\n\t\t.catch(error => { \r\n\t\t\tthis.setState(byPropKey('error', error)); \r\n\t\t});\r\n\r\n\t\tevent.preventDefault();\r\n\t\talert(\"Successfully managed to update the password.\");\r\n\t}\r\n}\r\n\r\nrender() {\r\n\tconst { passwordOne, \r\n\t\tpasswordTwo, \r\n\t\terror, \r\n\t} = this.state;\r\n\r\n\tconst isInvalid = passwordOne !== passwordTwo || passwordOne === '';\r\n\r\n\treturn ( \r\n\t\t<form id=\"settings-form\" onSubmit={this.onSubmit}> \r\n\t\t\t<div className=\"dropdownWrapper\">\r\n              <div className=\"dropdown\">\r\n                <div className=\"dropdownTitle\">New password:</div>\r\n\t                <div className=\"dropdownOption\">\r\n\t                 \t<input \r\n\t                \tvalue={passwordOne} \r\n\t\t\t\t\t\tonChange={event => this.setState(byPropKey('passwordOne', event.target.value))} \r\n\t                \ttype=\"password\" \r\n\t                \tplaceholder=\"Insert new password\" \r\n\t                \trequired \r\n\t                \tclassName=\"pwd\" />\r\n\t            \t</div>\r\n\t            </div>\r\n\t        </div>\r\n            <div className=\"dropdownWrapper\">\r\n              <div className=\"dropdown\">\r\n                <div className=\"dropdownTitle\">Repeat the password:</div>\r\n\t                <div className=\"dropdownOption\">\r\n\t                 \t<input \r\n\t                \tvalue={passwordTwo} \r\n\t\t\t\t\t\tonChange={event => this.setState(byPropKey('passwordTwo', event.target.value))} \r\n\t                \ttype=\"password\" \r\n\t                \tplaceholder=\"Insert new password\" \r\n\t                \trequired \r\n\t                \tclassName=\"pwd\" />\r\n\t            \t</div>\r\n\t            </div>\r\n\t        </div>\r\n\t\t\t<button className=\"btn-reset\" disabled={isInvalid} type=\"submit\"><span>Reset My Password</span></button>\r\n\t\t\t{ error && <p>{error.message}</p> } \r\n\t\t</form> \r\n\t);\t\r\n\t}\r\n}\r\nexport default PwdChangeForm;\r\n"]},"metadata":{},"sourceType":"module"}