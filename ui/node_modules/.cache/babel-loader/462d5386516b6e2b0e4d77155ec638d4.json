{"ast":null,"code":"import _classCallCheck from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\uni\\\\tamago\\\\ui\\\\src\\\\components\\\\HomePage\\\\TestSection\\\\CardsContainer\\\\CardsContainer.js\";\nimport React, { Component } from 'react';\nimport FlashCard from './FlashCard/FlashCard.js';\nimport DrawButton from './DrawButton/DrawButton.js';\nimport Dropdown from './Dropdown/Dropdown.js';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport { DB_CONFIG } from './Config/Firebase/db_config';\n\nvar CardsContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CardsContainer, _Component);\n\n  function CardsContainer(props) {\n    var _this;\n\n    _classCallCheck(this, CardsContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CardsContainer).call(this, props));\n\n    _this.handleChange = function (font) {\n      return function () {\n        _this.setState({\n          value: font,\n          show: false\n        });\n      };\n    };\n\n    _this.handleToggle = function (e) {\n      e.target.focus();\n\n      _this.setState({\n        show: !_this.state.show\n      });\n    };\n\n    _this.handleBlur = function (e) {\n      // firefox onBlur issue workaround\n      if (e.nativeEvent.explicitOriginalTarget && e.nativeEvent.explicitOriginalTarget === e.nativeEvent.originalTarget) {\n        return;\n      }\n\n      if (_this.state.show) {\n        /*timer = setTimeout(() => {\r\n          this.setState({ show: false });\r\n        }, 200);*/\n      }\n    };\n\n    _this.app = firebase.initializeApp(DB_CONFIG);\n    _this.database = _this.app.database().ref().child('jpn-cards-animals');\n    _this.updateCard = _this.updateCard.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      cards: [],\n      currentCard: {},\n      value: 'Arial',\n      show: false\n    };\n    return _this;\n  }\n\n  _createClass(CardsContainer, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      console.log(this.app.database().ref().child('cards'));\n      var currentCards = this.state.cards;\n      this.database.on('child_added', function (snap) {\n        currentCards.push({\n          id: snap.key,\n          eng: snap.val().eng,\n          kan: snap.val().kan,\n          rom: snap.val().rom\n        });\n\n        _this2.setState({\n          cards: currentCards,\n          currentCard: _this2.getRandomCard(currentCards)\n        });\n      });\n    }\n  }, {\n    key: \"getRandomCard\",\n    value: function getRandomCard(currentCards) {\n      var randomIndex = Math.floor(Math.random() * currentCards.length);\n      var card = currentCards[randomIndex];\n\n      if (card === this.state.currentCard) {\n        this.getRandomCard(currentCards);\n      }\n\n      return card;\n    }\n  }, {\n    key: \"updateCard\",\n    value: function updateCard() {\n      var currentCards = this.state.cards;\n      this.setState({\n        cards: currentCards,\n        currentCard: this.getRandomCard(currentCards)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"choice-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        show: this.state.show,\n        value: this.state.value,\n        handleToggle: this.handleToggle,\n        handleBlur: this.handleBlur,\n        handleChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"cardRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(FlashCard, {\n        eng: this.state.currentCard.eng,\n        kan: this.state.currentCard.kan,\n        rom: this.state.currentCard.rom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"buttonRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(DrawButton, {\n        drawCard: this.updateCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CardsContainer;\n}(Component);\n\nexport default CardsContainer;","map":{"version":3,"sources":["D:\\uni\\tamago\\ui\\src\\components\\HomePage\\TestSection\\CardsContainer\\CardsContainer.js"],"names":["React","Component","FlashCard","DrawButton","Dropdown","firebase","DB_CONFIG","CardsContainer","props","handleChange","font","setState","value","show","handleToggle","e","target","focus","state","handleBlur","nativeEvent","explicitOriginalTarget","originalTarget","app","initializeApp","database","ref","child","updateCard","bind","cards","currentCard","console","log","currentCards","on","snap","push","id","key","eng","val","kan","rom","getRandomCard","randomIndex","Math","floor","random","length","card"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport FlashCard from './FlashCard/FlashCard.js';\r\nimport DrawButton from './DrawButton/DrawButton.js';\r\nimport Dropdown from './Dropdown/Dropdown.js';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\n\r\nimport { DB_CONFIG } from './Config/Firebase/db_config';\r\n\r\n\r\n\r\nclass CardsContainer extends Component {\r\n\r\n\tconstructor(props){\r\n    super(props);\r\n\r\n    this.app = firebase.initializeApp(DB_CONFIG);\r\n    this.database = this.app.database().ref().child('jpn-cards-animals');\r\n    this.updateCard = this.updateCard.bind(this);\r\n\r\n    this.state = {\r\n      cards: [],\r\n      currentCard: {},\r\n      value: 'Arial',\r\n      show: false\r\n    }\r\n  }\r\n\r\nhandleChange = (font) => () => {\r\n    this.setState({ value: font, show: false });\r\n  }\r\n  \r\n  handleToggle = (e) => {\r\n    e.target.focus();\r\n    this.setState({ show: !this.state.show });\r\n  }\r\n  \r\n  handleBlur = (e) => {\r\n    // firefox onBlur issue workaround\r\n    if (e.nativeEvent.explicitOriginalTarget &&\r\n        e.nativeEvent.explicitOriginalTarget === e.nativeEvent.originalTarget) {\r\n      return;\r\n    }\r\n\r\n    if (this.state.show) {\r\n      /*timer = setTimeout(() => {\r\n        this.setState({ show: false });\r\n      }, 200);*/\r\n    }\r\n  }\r\n\r\n\r\n  componentWillMount(){\r\n    console.log(this.app.database().ref().child('cards'))\r\n    const currentCards = this.state.cards;\r\n    this.database.on('child_added', snap => {\r\n      currentCards.push({\r\n        id: snap.key,\r\n        eng: snap.val().eng,\r\n        kan: snap.val().kan,\r\n        rom: snap.val().rom\r\n      })\r\n\r\n      this.setState({\r\n        cards: currentCards,\r\n        currentCard: this.getRandomCard(currentCards)\r\n      })\r\n\r\n    })\r\n  }\r\n\r\n  getRandomCard(currentCards){\r\n    var randomIndex = Math.floor(Math.random() * currentCards.length);\r\n    var card = currentCards[randomIndex];\r\n    if(card === this.state.currentCard){\r\n      this.getRandomCard(currentCards)\r\n    }\r\n\r\n    return(card);\r\n  }\r\n\r\n  updateCard(){\r\n    const currentCards = this.state.cards;\r\n    this.setState({\r\n      cards: currentCards,\r\n      currentCard: this.getRandomCard(currentCards)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n      \t<div className=\"choice-container\">\r\n\t      <Dropdown\r\n\t        show={this.state.show}\r\n\t        value={this.state.value}\r\n\t        handleToggle={this.handleToggle}\r\n\t        handleBlur={this.handleBlur}\r\n\t        handleChange={this.handleChange}\r\n\t      />\r\n        </div>\r\n        <div className=\"cardRow\">\r\n          <FlashCard\teng={this.state.currentCard.eng}\r\n            \t\t\tkan={this.state.currentCard.kan}\r\n            \t\t\trom={this.state.currentCard.rom}/>\r\n        </div>\r\n        <div className=\"buttonRow\">\r\n          <DrawButton drawCard={this.updateCard}/>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default CardsContainer;"]},"metadata":{},"sourceType":"module"}