{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\uni\\\\tamago\\\\ui\\\\src\\\\components\\\\HomePage\\\\TestSection\\\\CardsContainer\\\\CardsContainer.js\";\nimport React, { Component } from 'react';\nimport './cardscontainer.css';\nimport FlashCard from './FlashCard/FlashCard.js';\nimport DrawButton from './DrawButton/DrawButton.js';\nimport FlipButton from './FlipButton/FlipButton.js';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/database';\nimport { default as fire } from '../../../../firebase';\nimport { db } from '../../../../firebase';\n\nvar CardsContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CardsContainer, _Component);\n\n  function CardsContainer(props) {\n    var _this;\n\n    _classCallCheck(this, CardsContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CardsContainer).call(this, props));\n    _this.state = {\n      cards: [],\n      currentCard: {},\n      category: '',\n      currentSide: 'front',\n      user: null,\n      databaseString: null,\n      addedString: null,\n      cardString: null\n    };\n    _this.turnCard = _this.turnCard.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CardsContainer, [{\n    key: \"getUserData\",\n    value: function () {\n      var _getUserData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var user;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                user = db.onceGetUser(this.props.uid).then(function (snapshot) {\n                  return snapshot.val();\n                });\n                _context.next = 3;\n                return user.then(function (value) {\n                  _this2.setState({\n                    user: value\n                  });\n                });\n\n              case 3:\n                console.log(this.props.uid);\n                console.log(this.state.user);\n                this.setData();\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function getUserData() {\n        return _getUserData.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"setData\",\n    value: function () {\n      var _setData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _this3 = this;\n\n        var databaseString, addedString, cardString, currentCards;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!firebase.apps.length) {\n                  _context2.next = 46;\n                  break;\n                }\n\n                databaseString = \"db/0/flashcards\";\n                addedString = \"\";\n                _context2.t0 = this.state.user.language;\n                _context2.next = _context2.t0 === 'Korean' ? 6 : _context2.t0 === 'Japanese' ? 9 : _context2.t0 === 'Polish' ? 12 : 15;\n                break;\n\n              case 6:\n                databaseString += \"/0/krn-cards\";\n                addedString = \"krn-cards\";\n                return _context2.abrupt(\"break\", 15);\n\n              case 9:\n                databaseString += \"/1/jpn-cards\";\n                addedString = \"jpn-cards\";\n                return _context2.abrupt(\"break\", 15);\n\n              case 12:\n                databaseString += \"/2/pln-cards\";\n                addedString = \"pln-cards\";\n                return _context2.abrupt(\"break\", 15);\n\n              case 15:\n                _context2.next = 17;\n                return this.setState({\n                  databaseString: databaseString,\n                  addedString: addedString\n                });\n\n              case 17:\n                cardString = null;\n                this.app = firebase.app().firestore();\n                _context2.t1 = this.props.cardsCategory;\n                _context2.next = _context2.t1 === 'Animals' ? 22 : _context2.t1 === 'People' ? 25 : _context2.t1 === 'Food' ? 28 : _context2.t1 === 'School' ? 31 : _context2.t1 === 'House' ? 34 : 37;\n                break;\n\n              case 22:\n                console.log(this.props.cardsCategory);\n                cardString = \"/0/\" + addedString + \"-animals\";\n                return _context2.abrupt(\"break\", 39);\n\n              case 25:\n                console.log(this.props.cardsCategory);\n                cardString = \"/1/\" + addedString + \"-people\";\n                return _context2.abrupt(\"break\", 39);\n\n              case 28:\n                console.log(this.props.cardsCategory);\n                cardString = \"/2/\" + addedString + \"-food\";\n                return _context2.abrupt(\"break\", 39);\n\n              case 31:\n                console.log(this.props.cardsCategory);\n                cardString = \"/3/\" + addedString + \"-school\";\n                return _context2.abrupt(\"break\", 39);\n\n              case 34:\n                console.log(this.props.cardsCategory);\n                cardString = \"/4/\" + addedString + \"-house\";\n                return _context2.abrupt(\"break\", 39);\n\n              case 37:\n                console.log(\"null\");\n                return _context2.abrupt(\"break\", 39);\n\n              case 39:\n                _context2.next = 41;\n                return this.setState({\n                  cardString: cardString\n                });\n\n              case 41:\n                this.database = firebase.app().database().ref().child(databaseString + cardString);\n                this.updateCard = this.updateCard.bind(this);\n                currentCards = this.state.cards;\n\n                if (firebase.apps.length) {\n                  this.database.on('child_added', function (snap) {\n                    currentCards.push({\n                      id: snap.key,\n                      eng: snap.val().eng,\n                      kan: snap.val().kan,\n                      rom: snap.val().rom\n                    });\n\n                    _this3.setState({\n                      cards: currentCards,\n                      currentCard: _this3.getRandomCard(currentCards),\n                      category: _this3.props.cardsCategory\n                    });\n                  });\n                }\n\n                this.props.sendLanguage(this.state.user.language);\n\n              case 46:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function setData() {\n        return _setData.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getUserData();\n    }\n  }, {\n    key: \"getRandomCard\",\n    value: function getRandomCard(currentCards) {\n      var randomIndex = Math.floor(Math.random() * currentCards.length);\n      var card = currentCards[randomIndex];\n\n      if (card === this.state.currentCard) {\n        this.getRandomCard(currentCards);\n      }\n\n      return card;\n    }\n  }, {\n    key: \"updateCard\",\n    value: function () {\n      var _updateCard = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var _this4 = this;\n\n        var currentCards, newCards, cardString;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                currentCards = this.state.cards;\n                newCards = [];\n\n                if (!(this.state.category === this.props.category)) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                _context3.next = 5;\n                return this.setState({\n                  cards: currentCards,\n                  currentCard: this.getRandomCard(currentCards)\n                });\n\n              case 5:\n                _context3.next = 34;\n                break;\n\n              case 7:\n                if (!firebase.apps.length) {\n                  _context3.next = 34;\n                  break;\n                }\n\n                cardString = null;\n                _context3.t0 = this.props.cardsCategory;\n                _context3.next = _context3.t0 === 'Animals' ? 12 : _context3.t0 === 'People' ? 15 : _context3.t0 === 'Food' ? 18 : _context3.t0 === 'School' ? 21 : _context3.t0 === 'House' ? 24 : 27;\n                break;\n\n              case 12:\n                console.log(this.props.cardsCategory);\n                cardString = \"/0/\" + this.state.addedString + \"-animals\";\n                return _context3.abrupt(\"break\", 29);\n\n              case 15:\n                console.log(this.props.cardsCategory);\n                cardString = \"/1/\" + this.state.addedString + \"-people\";\n                return _context3.abrupt(\"break\", 29);\n\n              case 18:\n                console.log(this.props.cardsCategory);\n                cardString = \"/2/\" + this.state.addedString + \"-food\";\n                return _context3.abrupt(\"break\", 29);\n\n              case 21:\n                console.log(this.props.cardsCategory);\n                cardString = \"/3/\" + this.state.addedString + \"-school\";\n                return _context3.abrupt(\"break\", 29);\n\n              case 24:\n                console.log(this.props.cardsCategory);\n                cardString = \"/4/\" + this.state.addedString + \"-house\";\n                return _context3.abrupt(\"break\", 29);\n\n              case 27:\n                console.log(\"null\");\n                return _context3.abrupt(\"break\", 29);\n\n              case 29:\n                _context3.next = 31;\n                return this.setState({\n                  cardString: cardString\n                });\n\n              case 31:\n                this.database = firebase.app().database().ref().child(this.state.databaseString + cardString);\n                this.database.on('child_added', function (snap) {\n                  newCards.push({\n                    id: snap.key,\n                    eng: snap.val().eng,\n                    kan: snap.val().kan,\n                    rom: snap.val().rom\n                  });\n\n                  _this4.setState({\n                    cards: newCards,\n                    currentCard: _this4.getRandomCard(newCards),\n                    category: _this4.props.cardsCategory\n                  });\n                });\n                this.updateCard = this.updateCard.bind(this);\n\n              case 34:\n                console.log(this.state.currentSide);\n\n              case 35:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function updateCard() {\n        return _updateCard.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"turnCard\",\n    value: function () {\n      var _turnCard = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(this.state.currentSide === 'front')) {\n                  _context4.next = 5;\n                  break;\n                }\n\n                _context4.next = 3;\n                return this.setState({\n                  currentSide: 'back'\n                });\n\n              case 3:\n                _context4.next = 7;\n                break;\n\n              case 5:\n                _context4.next = 7;\n                return this.setState({\n                  currentSide: 'front'\n                });\n\n              case 7:\n                console.log(this.state.currentSide);\n\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function turnCard() {\n        return _turnCard.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"card-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cardCol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cardRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(FlashCard, {\n        eng: this.state.currentCard.eng,\n        kan: this.state.currentCard.kan,\n        rom: this.state.currentCard.rom,\n        side: this.state.currentSide,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"buttonRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(DrawButton, {\n        drawCard: this.updateCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }), React.createElement(FlipButton, {\n        flipCard: this.turnCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return CardsContainer;\n}(Component);\n\nexport default CardsContainer;","map":{"version":3,"sources":["D:\\uni\\tamago\\ui\\src\\components\\HomePage\\TestSection\\CardsContainer\\CardsContainer.js"],"names":["React","Component","FlashCard","DrawButton","FlipButton","firebase","default","fire","db","CardsContainer","props","state","cards","currentCard","category","currentSide","user","databaseString","addedString","cardString","turnCard","bind","onceGetUser","uid","then","snapshot","val","value","setState","console","log","setData","apps","length","language","app","firestore","cardsCategory","database","ref","child","updateCard","currentCards","on","snap","push","id","key","eng","kan","rom","getRandomCard","sendLanguage","getUserData","randomIndex","Math","floor","random","card","newCards"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './cardscontainer.css';\r\nimport FlashCard from './FlashCard/FlashCard.js';\r\nimport DrawButton from './DrawButton/DrawButton.js';\r\nimport FlipButton from './FlipButton/FlipButton.js';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/database';\r\nimport { default as fire } from '../../../../firebase';\r\nimport { db } from '../../../../firebase';\r\n\r\n\r\n\r\nclass CardsContainer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n\r\n\r\n\r\n    this.state = {\r\n      cards: [],\r\n      currentCard: {},\r\n      category: '',\r\n      currentSide: 'front',\r\n      user: null,\r\n      databaseString: null,\r\n      addedString: null,\r\n      cardString: null\r\n    }\r\n\r\n    this.turnCard = this.turnCard.bind(this);\r\n  }\r\n\r\n  async getUserData() {\r\n    var user = db.onceGetUser(this.props.uid).then(snapshot => snapshot.val());\r\n    await user.then((value) => {\r\n      this.setState({\r\n        user: value\r\n      })\r\n    });\r\n    console.log(this.props.uid);\r\n    console.log(this.state.user);\r\n    this.setData();\r\n  }\r\n\r\n  async setData() {\r\n    if (firebase.apps.length) {\r\n      var databaseString = \"db/0/flashcards\";\r\n      var addedString = \"\";\r\n      switch (this.state.user.language) {\r\n        case 'Korean':\r\n          databaseString += \"/0/krn-cards\";\r\n          addedString = \"krn-cards\";\r\n          break;\r\n        case 'Japanese':\r\n          databaseString += \"/1/jpn-cards\";\r\n          addedString = \"jpn-cards\";\r\n          break;\r\n        case 'Polish':\r\n          databaseString += \"/2/pln-cards\";\r\n          addedString = \"pln-cards\";\r\n          break;\r\n      }\r\n\r\n      await this.setState({\r\n        databaseString: databaseString,\r\n        addedString: addedString,\r\n      })\r\n\r\n      var cardString = null;\r\n      this.app = firebase.app().firestore();\r\n      switch (this.props.cardsCategory) {\r\n        case 'Animals':\r\n          console.log(this.props.cardsCategory);\r\n          cardString = \"/0/\" + addedString + \"-animals\";\r\n          break;\r\n        case 'People':\r\n          console.log(this.props.cardsCategory);\r\n          cardString = \"/1/\" + addedString + \"-people\";\r\n          break;\r\n        case 'Food':\r\n          console.log(this.props.cardsCategory);\r\n          cardString = \"/2/\" + addedString + \"-food\";\r\n          break;\r\n        case 'School':\r\n          console.log(this.props.cardsCategory);\r\n          cardString = \"/3/\" + addedString + \"-school\";\r\n          break;\r\n        case 'House':\r\n          console.log(this.props.cardsCategory);\r\n          cardString = \"/4/\" + addedString + \"-house\";\r\n          break;\r\n        default:\r\n          console.log(\"null\");\r\n          break;\r\n      }\r\n      await this.setState({\r\n        cardString: cardString,\r\n      })\r\n\r\n      this.database = firebase.app().database().ref().child(databaseString + cardString);\r\n      this.updateCard = this.updateCard.bind(this);\r\n      const currentCards = this.state.cards;\r\n      if (firebase.apps.length) {\r\n        this.database.on('child_added', snap => {\r\n          currentCards.push({\r\n            id: snap.key,\r\n            eng: snap.val().eng,\r\n            kan: snap.val().kan,\r\n            rom: snap.val().rom\r\n          })\r\n\r\n          this.setState({\r\n            cards: currentCards,\r\n            currentCard: this.getRandomCard(currentCards),\r\n            category: this.props.cardsCategory\r\n          })\r\n        })\r\n      }\r\n      this.props.sendLanguage(this.state.user.language);\r\n    }\r\n\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getUserData();\r\n\r\n  }\r\n\r\n\r\n  getRandomCard(currentCards) {\r\n    var randomIndex = Math.floor(Math.random() * currentCards.length);\r\n    var card = currentCards[randomIndex];\r\n    if (card === this.state.currentCard) {\r\n      this.getRandomCard(currentCards)\r\n    }\r\n\r\n    return (card);\r\n  }\r\n\r\n  async updateCard() {\r\n    const currentCards = this.state.cards;\r\n    const newCards = [];\r\n    if (this.state.category === this.props.category) {\r\n      await this.setState({\r\n        cards: currentCards,\r\n        currentCard: this.getRandomCard(currentCards)\r\n      })\r\n    }\r\n    else {\r\n\r\n      if (firebase.apps.length) {\r\n        var cardString = null;\r\n        switch (this.props.cardsCategory) {\r\n          case 'Animals':\r\n            console.log(this.props.cardsCategory);\r\n            cardString = \"/0/\" + this.state.addedString + \"-animals\";\r\n\r\n            break;\r\n          case 'People':\r\n            console.log(this.props.cardsCategory);\r\n\r\n            cardString = \"/1/\" + this.state.addedString + \"-people\";\r\n\r\n            break;\r\n          case 'Food':\r\n            console.log(this.props.cardsCategory);\r\n            cardString = \"/2/\" + this.state.addedString + \"-food\";\r\n            break;\r\n          case 'School':\r\n            console.log(this.props.cardsCategory);\r\n            cardString = \"/3/\" + this.state.addedString + \"-school\";\r\n            break;\r\n          case 'House':\r\n            console.log(this.props.cardsCategory);\r\n            cardString = \"/4/\" + this.state.addedString + \"-house\";\r\n            break;\r\n          default:\r\n            console.log(\"null\");\r\n            break;\r\n        }\r\n\r\n        await this.setState({\r\n          cardString: cardString,\r\n        })\r\n\r\n        this.database = firebase.app().database().ref().child(this.state.databaseString + cardString);\r\n        this.database.on('child_added', snap => {\r\n          newCards.push({\r\n            id: snap.key,\r\n            eng: snap.val().eng,\r\n            kan: snap.val().kan,\r\n            rom: snap.val().rom\r\n          })\r\n\r\n          this.setState({\r\n            cards: newCards,\r\n            currentCard: this.getRandomCard(newCards),\r\n            category: this.props.cardsCategory\r\n          })\r\n\r\n        })\r\n        this.updateCard = this.updateCard.bind(this);\r\n      }\r\n    }\r\n    console.log(this.state.currentSide);\r\n  }\r\n\r\n  async turnCard() {\r\n    if (this.state.currentSide === 'front') {\r\n      await this.setState({\r\n        currentSide: 'back',\r\n      });\r\n    }\r\n    else {\r\n      await this.setState({\r\n        currentSide: 'front',\r\n      });\r\n    }\r\n    console.log(this.state.currentSide);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card-container\">\r\n        <div className=\"cardCol\">\r\n          <div className=\"cardRow\">\r\n            <FlashCard eng={this.state.currentCard.eng}\r\n              kan={this.state.currentCard.kan}\r\n              rom={this.state.currentCard.rom}\r\n              side={this.state.currentSide} />\r\n          </div>\r\n          <div className=\"buttonRow\">\r\n            <DrawButton drawCard={this.updateCard} />\r\n            <FlipButton flipCard={this.turnCard} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default CardsContainer;"]},"metadata":{},"sourceType":"module"}