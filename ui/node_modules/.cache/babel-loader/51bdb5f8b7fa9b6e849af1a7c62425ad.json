{"ast":null,"code":"import _classCallCheck from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\uni\\\\tamago\\\\ui\\\\src\\\\components\\\\HomePage\\\\SettingSection\\\\SettingsCard\\\\Dropdown\\\\Dropdown.js\";\nimport React from 'react';\nimport './dropdown.css';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nvar Dropdown =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dropdown, _React$Component);\n\n  function Dropdown(props) {\n    var _this;\n\n    _classCallCheck(this, Dropdown);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dropdown).call(this));\n\n    _this.handleChange = function (language) {\n      return function () {\n        if (language === _this.props.currentLanguage) {\n          alert(\"Your selected language is already \" + language + \".\");\n        } else {\n          confirmAlert({\n            title: 'Confirm to submit',\n            message: 'Are you sure to do change your studying language to ' + language + '?',\n            buttons: [{\n              label: 'Yes',\n              onClick: function onClick() {\n                _this.props.handleLanguageChange(language);\n              }\n            }, {\n              label: 'No'\n            }]\n          });\n        }\n      };\n    };\n\n    _this.state = {\n      showDrop: true,\n      value: 'japanese топ',\n      category: 'Japanese'\n    };\n    _this.showDrop = _this.showDrop.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    /*this.hideDrop = this.hideDrop.bind(this);*/\n\n    return _this;\n  }\n\n  _createClass(Dropdown, [{\n    key: \"showDrop\",\n    value: function showDrop(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      this.setState({\n        showDrop: true\n      }, function () {\n        document.addEventListener('click', _this2.showDrop);\n      });\n    }\n  }, {\n    key: \"hideDrop\",\n    value: function hideDrop(event) {\n      var _this3 = this;\n\n      this.setState({\n        showDrop: false\n      }, function () {\n        document.removeEventListener('click', _this3.hideDrop);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"dropMenu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"drop-btn\",\n        onClick: this.showDrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.props.currentLanguage + ' топ'), this.state.showDrop ? React.createElement(\"ul\", {\n        className: \"dropDown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"elem\",\n        onClick: this.handleChange(\"Japanese\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Japanese\"), React.createElement(\"li\", {\n        className: \"elem\",\n        onClick: this.handleChange(\"Korean\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Korean\"), React.createElement(\"li\", {\n        className: \"elem\",\n        onClick: this.handleChange(\"Polish\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Polish\")) : null);\n    }\n  }]);\n\n  return Dropdown;\n}(React.Component);\n\nexport default Dropdown;","map":{"version":3,"sources":["D:\\uni\\tamago\\ui\\src\\components\\HomePage\\SettingSection\\SettingsCard\\Dropdown\\Dropdown.js"],"names":["React","confirmAlert","Dropdown","props","handleChange","language","currentLanguage","alert","title","message","buttons","label","onClick","handleLanguageChange","state","showDrop","value","category","bind","event","preventDefault","setState","document","addEventListener","removeEventListener","hideDrop","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,SAASC,YAAT,QAA6B,qBAA7B,C,CAAoD;;AACpD,OAAO,iDAAP;;IAEMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB;;AADiB,UA8BnBC,YA9BmB,GA8BJ,UAACC,QAAD;AAAA,aAAc,YAAM;AACjC,YAAIA,QAAQ,KAAK,MAAKF,KAAL,CAAWG,eAA5B,EAA6C;AAC3CC,UAAAA,KAAK,CAAC,uCAAuCF,QAAvC,GAAkD,GAAnD,CAAL;AACD,SAFD,MAGK;AACHJ,UAAAA,YAAY,CAAC;AACXO,YAAAA,KAAK,EAAE,mBADI;AAEXC,YAAAA,OAAO,EAAE,yDAAyDJ,QAAzD,GAAoE,GAFlE;AAGXK,YAAAA,OAAO,EAAE,CACP;AACEC,cAAAA,KAAK,EAAE,KADT;AAEEC,cAAAA,OAAO,EAAE,mBAAM;AACb,sBAAKT,KAAL,CAAWU,oBAAX,CAAgCR,QAAhC;AACD;AAJH,aADO,EAOP;AACEM,cAAAA,KAAK,EAAE;AADT,aAPO;AAHE,WAAD,CAAZ;AAeD;AACF,OArBc;AAAA,KA9BI;;AAGjB,UAAKG,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,IADC;AAEXC,MAAAA,KAAK,EAAE,YAFI;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAMA,UAAKF,QAAL,GAAgB,MAAKA,QAAL,CAAcG,IAAd,uDAAhB;AACA;;AAViB;AAWlB;;;;6BAEQC,K,EAAO;AAAA;;AACdA,MAAAA,KAAK,CAACC,cAAN;AAGA,WAAKC,QAAL,CAAc;AAAEN,QAAAA,QAAQ,EAAE;AAAZ,OAAd,EAAkC,YAAM;AACtCO,QAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,MAAI,CAACR,QAAxC;AACD,OAFD;AAGD;;;6BAIQI,K,EAAO;AAAA;;AACd,WAAKE,QAAL,CAAc;AAAEN,QAAAA,QAAQ,EAAE;AAAZ,OAAd,EAAmC,YAAM;AACvCO,QAAAA,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsC,MAAI,CAACC,QAA3C;AACD,OAFD;AAGD;;;6BAyBQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAA6B,QAAA,OAAO,EAAE,KAAKV,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsD,KAAKZ,KAAL,CAAWG,eAAX,GAA6B,IAAnF,CADF,EAII,KAAKQ,KAAL,CAAWC,QAAX,GACE;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAqB,QAAA,OAAO,EAAE,KAAKX,YAAL,CAAkB,UAAlB,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAqB,QAAA,OAAO,EAAE,KAAKA,YAAL,CAAkB,QAAlB,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAqB,QAAA,OAAO,EAAE,KAAKA,YAAL,CAAkB,QAAlB,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CADF,GAOI,IAXR,CADF;AAiBD;;;;EAxEoBJ,KAAK,CAAC0B,S;;AA2E7B,eAAexB,QAAf","sourcesContent":["import React from 'react';\r\nimport './dropdown.css';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'\r\n\r\nclass Dropdown extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      showDrop: true,\r\n      value: 'japanese топ',\r\n      category: 'Japanese'\r\n    }\r\n\r\n    this.showDrop = this.showDrop.bind(this);\r\n    /*this.hideDrop = this.hideDrop.bind(this);*/\r\n  }\r\n\r\n  showDrop(event) {\r\n    event.preventDefault();\r\n\r\n\r\n    this.setState({ showDrop: true }, () => {\r\n      document.addEventListener('click', this.showDrop);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  hideDrop(event) {\r\n    this.setState({ showDrop: false }, () => {\r\n      document.removeEventListener('click', this.hideDrop);\r\n    });\r\n  }\r\n\r\n  handleChange = (language) => () => {\r\n    if (language === this.props.currentLanguage) {\r\n      alert(\"Your selected language is already \" + language + \".\");\r\n    }\r\n    else {\r\n      confirmAlert({\r\n        title: 'Confirm to submit',\r\n        message: 'Are you sure to do change your studying language to ' + language + '?',\r\n        buttons: [\r\n          {\r\n            label: 'Yes',\r\n            onClick: () => {\r\n              this.props.handleLanguageChange(language);\r\n            }\r\n          },\r\n          {\r\n            label: 'No'\r\n          }\r\n        ]\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='dropMenu'>\r\n        <button className='drop-btn' onClick={this.showDrop}>{this.props.currentLanguage + ' топ'}</button>\r\n\r\n        {\r\n          this.state.showDrop ? (\r\n            <ul className='dropDown'>\r\n              <li className=\"elem\" onClick={this.handleChange(\"Japanese\")}>Japanese</li>\r\n              <li className=\"elem\" onClick={this.handleChange(\"Korean\")}>Korean</li>\r\n              <li className=\"elem\" onClick={this.handleChange(\"Polish\")}>Polish</li>\r\n            </ul>\r\n          ) : (\r\n              null\r\n            )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}