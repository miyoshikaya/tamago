{"ast":null,"code":"import _classCallCheck from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\uni\\\\tamago\\\\ui\\\\src\\\\components\\\\HomePage\\\\QuizSection\\\\QuizContainer.js\";\nimport React, { Component } from 'react'; //import QuizCard from './QuizCard.js';\n\nimport QuizCard from './QuizCard/QuizCard.js';\nimport QuizSettings from './settings/QuizSettings.js';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nvar QuizContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuizContainer, _Component);\n\n  function QuizContainer(props) {\n    var _this;\n\n    _classCallCheck(this, QuizContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuizContainer).call(this, props));\n\n    _this.receiveCategory = function (cat) {\n      console.log(cat); //check if the quiz is complete\n\n      if (!_this.state.quizCompleted) {\n        confirmAlert({\n          title: 'Confirm to submit',\n          message: 'Are you sure you want to restart the quiz? You will lose all progress.',\n          buttons: [{\n            label: 'Yes',\n            onClick: function onClick() {\n              _this.setState({\n                category: cat\n              });\n\n              console.log('new quiz starting');\n            }\n          }, {\n            label: 'No' //nothing -> continue with the quiz\n\n          }]\n        });\n      } else {\n        //wygenerowanie nowego quizu\n        _this.setState({\n          quizCompleted: false,\n          startNewQuiz: true\n        });\n\n        console.log('new quiz starting');\n      }\n    };\n\n    _this.getQuizComplete = function (completion) {\n      _this.setState({\n        quizCompleted: completion\n      });\n\n      console.log(completion);\n    };\n\n    _this.state = {\n      category: 'animals',\n      quizCompleted: false,\n      startNewQuiz: false\n    };\n    _this.receiveCategory = _this.receiveCategory.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(QuizContainer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"centered\",\n        id: \"main-Container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"half purple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(QuizSettings, {\n        changeCat: this.receiveCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"other-half\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(QuizCard, {\n        category: this.state.category,\n        quizComplete: this.getQuizComplete,\n        completed: this.state.quizCompleted,\n        startNew: this.state.startNewQuiz,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return QuizContainer;\n}(Component);\n\nexport default QuizContainer;","map":{"version":3,"sources":["D:\\uni\\tamago\\ui\\src\\components\\HomePage\\QuizSection\\QuizContainer.js"],"names":["React","Component","QuizCard","QuizSettings","confirmAlert","QuizContainer","props","receiveCategory","cat","console","log","state","quizCompleted","title","message","buttons","label","onClick","setState","category","startNewQuiz","getQuizComplete","completion","bind"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,YAAT,QAA6B,qBAA7B,C,CAAoD;;AACpD,OAAO,iDAAP;;IAEMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,uFAAMA,KAAN;;AADiB,UAYrBC,eAZqB,GAYH,UAACC,GAAD,EAAS;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAD0B,CAG1B;;AACA,UAAG,CAAC,MAAKG,KAAL,CAAWC,aAAf,EAA6B;AAC5BR,QAAAA,YAAY,CAAC;AACPS,UAAAA,KAAK,EAAE,mBADA;AAEPC,UAAAA,OAAO,EAAE,wEAFF;AAGPC,UAAAA,OAAO,EAAE,CACP;AACEC,YAAAA,KAAK,EAAE,KADT;AAEEC,YAAAA,OAAO,EAAE,mBAAM;AACd,oBAAKC,QAAL,CAAc;AACnBC,gBAAAA,QAAQ,EAAEX;AADS,eAAd;;AAGNC,cAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACM;AAPH,WADO,EAUP;AACEM,YAAAA,KAAK,EAAE,IADT,CAEE;;AAFF,WAVO;AAHF,SAAD,CAAZ;AAmBA,OApBD,MAqBK;AACJ;AAEA,cAAKE,QAAL,CAAc;AACbN,UAAAA,aAAa,EAAE,KADF;AAEbQ,UAAAA,YAAY,EAAE;AAFD,SAAd;;AAIAX,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA;AAED,KA/CoB;;AAAA,UAiDrBW,eAjDqB,GAiDH,UAACC,UAAD,EAAgB;AACjC,YAAKJ,QAAL,CAAc;AACbN,QAAAA,aAAa,EAAEU;AADF,OAAd;;AAGAb,MAAAA,OAAO,CAACC,GAAR,CAAYY,UAAZ;AACA,KAtDoB;;AAGjB,UAAKX,KAAL,GAAa;AACZQ,MAAAA,QAAQ,EAAE,SADE;AAEZP,MAAAA,aAAa,EAAE,KAFH;AAGZQ,MAAAA,YAAY,EAAE;AAHF,KAAb;AAMA,UAAKb,eAAL,GAAuB,MAAKA,eAAL,CAAqBgB,IAArB,uDAAvB;AATiB;AAUjB;;;;6BA8CM;AACL,aACC;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,EAAE,EAAC,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,YAAD;AAAc,QAAA,SAAS,EAAE,KAAKhB,eAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADJ,EAII;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAEC,oBAAC,QAAD;AACC,QAAA,QAAQ,EAAE,KAAKI,KAAL,CAAWQ,QADtB;AAEC,QAAA,YAAY,EAAE,KAAKE,eAFpB;AAGC,QAAA,SAAS,EAAE,KAAKV,KAAL,CAAWC,aAHvB;AAIC,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWS,YAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,CAJJ,CADD;AAeH;;;;EAzE0BnB,S;;AA4E5B,eAAeI,aAAf","sourcesContent":["import React, { Component } from 'react';\r\n//import QuizCard from './QuizCard.js';\r\nimport QuizCard from './QuizCard/QuizCard.js';\r\nimport QuizSettings from './settings/QuizSettings.js';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' \r\n\r\nclass QuizContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n    \tcategory: 'animals',\r\n    \tquizCompleted: false,\r\n    \tstartNewQuiz: false,\r\n    }\r\n\r\n    this.receiveCategory = this.receiveCategory.bind(this);\r\n   }\r\n\r\nreceiveCategory = (cat) => {\r\n\tconsole.log(cat);\r\n\r\n\t//check if the quiz is complete\r\n\tif(!this.state.quizCompleted){\r\n\t\tconfirmAlert({\r\n        title: 'Confirm to submit',\r\n        message: 'Are you sure you want to restart the quiz? You will lose all progress.',\r\n        buttons: [\r\n          {\r\n            label: 'Yes',\r\n            onClick: () => {\r\n            \tthis.setState({\r\n\t\t\t   \t\tcategory: cat,\r\n\t\t\t   \t});\r\n\t\t\t   \tconsole.log('new quiz starting');\r\n            }\r\n          },\r\n          {\r\n            label: 'No'\r\n            //nothing -> continue with the quiz\r\n          }\r\n        ]\r\n      })\r\n\t}\r\n\telse {\r\n\t\t//wygenerowanie nowego quizu\r\n\r\n\t\tthis.setState({\r\n\t\t\tquizCompleted: false,\r\n\t\t\tstartNewQuiz: true,\r\n\t\t});\r\n\t\tconsole.log('new quiz starting');\r\n\t}\r\n\t\r\n}\r\n\r\ngetQuizComplete = (completion) => {\r\n\tthis.setState({\r\n\t\tquizCompleted: completion,\r\n\t});\r\n\tconsole.log(completion);\r\n}\r\n\r\n\trender() {\r\n\t    return (\r\n\t    \t<div className=\"centered\" id=\"main-Container\">\r\n\t\t        <div className=\"half purple\">\r\n\t\t        \t<QuizSettings changeCat={this.receiveCategory} />\r\n\t\t        </div> \r\n\t\t        <div className=\"other-half\">\r\n\t\t        \t<hr />\r\n\t\t        \t<QuizCard \r\n\t\t        \t\tcategory={this.state.category} \r\n\t\t        \t\tquizComplete={this.getQuizComplete} \r\n\t\t        \t\tcompleted={this.state.quizCompleted}\r\n\t\t        \t\tstartNew={this.state.startNewQuiz} />\r\n\t\t        </div>\r\n\t        </div>\r\n\t    );\r\n\t}\r\n}\r\n\r\nexport default QuizContainer;\r\n"]},"metadata":{},"sourceType":"module"}