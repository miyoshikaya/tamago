{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\uni\\\\tamago\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\uni\\\\tamago\\\\ui\\\\src\\\\components\\\\HomePage\\\\TestSection\\\\CardsContainer\\\\CardsContainer.js\";\nimport React, { Component } from 'react';\nimport './cardscontainer.css';\nimport FlashCard from './FlashCard/FlashCard.js';\nimport DrawButton from './DrawButton/DrawButton.js';\nimport FlipButton from './FlipButton/FlipButton.js';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/database';\nimport { DB_CONFIG } from './Config/Firebase/db_config';\n\nvar CardsContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CardsContainer, _Component);\n\n  function CardsContainer(props) {\n    var _this;\n\n    _classCallCheck(this, CardsContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CardsContainer).call(this, props));\n\n    if (!firebase.apps.length) {\n      _this.app = firebase.initializeApp(DB_CONFIG);\n\n      if (_this.state.language === 'Japanese') {\n        switch (_this.props.cardsCategory) {\n          case 'Animals':\n            console.log(_this.props.cardsCategory);\n            _this.database = _this.app.database().ref().child(\"flashcards/0/krn-cards/0/krn-cards-animals\");\n            break;\n\n          case 'People':\n            console.log(_this.props.cardsCategory);\n            _this.database = _this.app.database().ref().child(\"flashcards/0/krn-cards/1/krn-cards-people\");\n            break;\n\n          case 'Food':\n            console.log(_this.props.cardsCategory);\n            _this.database = _this.app.database().ref().child(\"flashcards/0/krn-cards/2/krn-cards-food\");\n            break;\n\n          default:\n            console.log(\"null\");\n            break;\n        }\n      }\n\n      _this.updateCard = _this.updateCard.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    } else {\n      _this.app = firebase.app().firestore();\n\n      switch (_this.props.cardsCategory) {\n        case 'Animals':\n          console.log(_this.props.cardsCategory);\n          _this.database = firebase.app().database().ref().child(\"flashcards/0/krn-cards/0/krn-cards-animals\");\n          break;\n\n        case 'People':\n          console.log(_this.props.cardsCategory);\n          _this.database = firebase.app().database().ref().child(\"flashcards/0/krn-cards/1/krn-cards-people\");\n          break;\n\n        case 'Food':\n          console.log(_this.props.cardsCategory);\n          _this.database = firebase.app().database().ref().child(\"flashcards/0/krn-cards/2/krn-cards-food\");\n          break;\n\n        default:\n          console.log(\"null\");\n          break;\n      }\n\n      _this.updateCard = _this.updateCard.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    }\n\n    _this.state = {\n      cards: [],\n      currentCard: {},\n      category: '',\n      currentSide: 'front',\n      language: 'Japanese'\n    };\n    _this.turnCard = _this.turnCard.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CardsContainer, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var currentCards = this.state.cards;\n\n      if (firebase.apps.length) {\n        this.database.on('child_added', function (snap) {\n          currentCards.push({\n            id: snap.key,\n            eng: snap.val().eng,\n            kan: snap.val().kan,\n            rom: snap.val().rom\n          });\n\n          _this2.setState({\n            cards: currentCards,\n            currentCard: _this2.getRandomCard(currentCards),\n            category: _this2.props.cardsCategory\n          });\n        });\n      }\n    }\n  }, {\n    key: \"getRandomCard\",\n    value: function getRandomCard(currentCards) {\n      var randomIndex = Math.floor(Math.random() * currentCards.length);\n      var card = currentCards[randomIndex];\n\n      if (card === this.state.currentCard) {\n        this.getRandomCard(currentCards);\n      }\n\n      return card;\n    }\n  }, {\n    key: \"updateCard\",\n    value: function () {\n      var _updateCard = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this3 = this;\n\n        var currentCards, newCards;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                currentCards = this.state.cards;\n                newCards = [];\n\n                if (!(this.state.category !== this.props.category)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 5;\n                return this.setState({\n                  cards: currentCards,\n                  currentCard: this.getRandomCard(currentCards)\n                });\n\n              case 5:\n                if (!firebase.apps.length) {\n                  _context.next = 24;\n                  break;\n                }\n\n                _context.t0 = this.props.cardsCategory;\n                _context.next = _context.t0 === 'Animals' ? 9 : _context.t0 === 'People' ? 13 : _context.t0 === 'Food' ? 17 : 21;\n                break;\n\n              case 9:\n                console.log(this.props.cardsCategory);\n                this.database = firebase.app().database().ref().child(\"flashcards/0/krn-cards/0/krn-cards-animals\");\n\n                if (this.state.category !== this.props.category) {\n                  this.database.on('child_added', function (snap) {\n                    newCards.push({\n                      id: snap.key,\n                      eng: snap.val().eng,\n                      kan: snap.val().kan,\n                      rom: snap.val().rom\n                    });\n\n                    _this3.setState({\n                      cards: newCards,\n                      currentCard: _this3.getRandomCard(newCards),\n                      category: _this3.props.cardsCategory\n                    });\n                  });\n                }\n\n                return _context.abrupt(\"break\", 23);\n\n              case 13:\n                console.log(this.props.cardsCategory);\n                this.database = firebase.app().database().ref().child(\"flashcards/0/krn-cards/1/krn-cards-people\");\n\n                if (this.state.category !== this.props.category) {\n                  this.database.on('child_added', function (snap) {\n                    newCards.push({\n                      id: snap.key,\n                      eng: snap.val().eng,\n                      kan: snap.val().kan,\n                      rom: snap.val().rom\n                    });\n\n                    _this3.setState({\n                      cards: newCards,\n                      currentCard: _this3.getRandomCard(newCards),\n                      category: _this3.props.cardsCategory\n                    });\n                  });\n                }\n\n                return _context.abrupt(\"break\", 23);\n\n              case 17:\n                console.log(this.props.cardsCategory);\n                this.database = firebase.app().database().ref().child(\"flashcards/0/krn-cards/2/krn-cards-food\");\n\n                if (this.state.category !== this.props.category) {\n                  this.database.on('child_added', function (snap) {\n                    newCards.push({\n                      id: snap.key,\n                      eng: snap.val().eng,\n                      kan: snap.val().kan,\n                      rom: snap.val().rom\n                    });\n\n                    _this3.setState({\n                      cards: newCards,\n                      currentCard: _this3.getRandomCard(newCards),\n                      category: _this3.props.cardsCategory\n                    });\n                  });\n                }\n\n                return _context.abrupt(\"break\", 23);\n\n              case 21:\n                console.log(\"null\");\n                return _context.abrupt(\"break\", 23);\n\n              case 23:\n                this.updateCard = this.updateCard.bind(this);\n\n              case 24:\n                console.log(this.state.currentSide);\n\n              case 25:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function updateCard() {\n        return _updateCard.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"turnCard\",\n    value: function () {\n      var _turnCard = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(this.state.currentSide === 'front')) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                _context2.next = 3;\n                return this.setState({\n                  currentSide: 'back'\n                });\n\n              case 3:\n                _context2.next = 7;\n                break;\n\n              case 5:\n                _context2.next = 7;\n                return this.setState({\n                  currentSide: 'front'\n                });\n\n              case 7:\n                console.log(this.state.currentSide);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function turnCard() {\n        return _turnCard.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"card-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cardCol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cardRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(FlashCard, {\n        eng: this.state.currentCard.eng,\n        kan: this.state.currentCard.kan,\n        rom: this.state.currentCard.rom,\n        side: this.state.currentSide,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"buttonRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(DrawButton, {\n        drawCard: this.updateCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }), React.createElement(FlipButton, {\n        flipCard: this.turnCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return CardsContainer;\n}(Component);\n\nexport default CardsContainer;","map":{"version":3,"sources":["D:\\uni\\tamago\\ui\\src\\components\\HomePage\\TestSection\\CardsContainer\\CardsContainer.js"],"names":["React","Component","FlashCard","DrawButton","FlipButton","firebase","DB_CONFIG","CardsContainer","props","apps","length","app","initializeApp","state","language","cardsCategory","console","log","database","ref","child","updateCard","bind","firestore","cards","currentCard","category","currentSide","turnCard","currentCards","on","snap","push","id","key","eng","val","kan","rom","setState","getRandomCard","randomIndex","Math","floor","random","card","newCards"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './cardscontainer.css';\r\nimport FlashCard from './FlashCard/FlashCard.js';\r\nimport DrawButton from './DrawButton/DrawButton.js';\r\nimport FlipButton from './FlipButton/FlipButton.js';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/database';\r\n\r\nimport { DB_CONFIG } from './Config/Firebase/db_config';\r\n\r\n\r\nclass CardsContainer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    if (!firebase.apps.length) {\r\n\r\n      this.app = firebase.initializeApp(DB_CONFIG);\r\n\r\n      if(this.state.language === 'Japanese'){\r\n\r\n        switch (this.props.cardsCategory) {\r\n          case 'Animals':\r\n            console.log(this.props.cardsCategory);\r\n            this.database = this.app.database().ref().child(\"flashcards/0/krn-cards/0/krn-cards-animals\");\r\n            break;\r\n          case 'People':\r\n            console.log(this.props.cardsCategory);\r\n            this.database = this.app.database().ref().child(\"flashcards/0/krn-cards/1/krn-cards-people\");\r\n            break;\r\n          case 'Food':\r\n            console.log(this.props.cardsCategory);\r\n            this.database = this.app.database().ref().child(\"flashcards/0/krn-cards/2/krn-cards-food\");\r\n            break;\r\n          default:\r\n            console.log(\"null\");\r\n            break;\r\n        }\r\n      }\r\n\r\n      this.updateCard = this.updateCard.bind(this);\r\n    }\r\n    else {\r\n      this.app = firebase.app().firestore();\r\n      switch (this.props.cardsCategory) {\r\n        case 'Animals':\r\n          console.log(this.props.cardsCategory);\r\n          this.database = firebase.app().database().ref().child(\"flashcards/0/krn-cards/0/krn-cards-animals\");\r\n          break;\r\n        case 'People':\r\n          console.log(this.props.cardsCategory);\r\n          this.database = firebase.app().database().ref().child(\"flashcards/0/krn-cards/1/krn-cards-people\");\r\n          break;\r\n        case 'Food':\r\n          console.log(this.props.cardsCategory);\r\n          this.database = firebase.app().database().ref().child(\"flashcards/0/krn-cards/2/krn-cards-food\");\r\n          break;\r\n        default:\r\n          console.log(\"null\");\r\n          break;\r\n      }\r\n      this.updateCard = this.updateCard.bind(this);\r\n    }\r\n\r\n\r\n    this.state = {\r\n      cards: [],\r\n      currentCard: {},\r\n      category: '',\r\n      currentSide: 'front',\r\n      language: 'Japanese',\r\n    }\r\n\r\n    this.turnCard = this.turnCard.bind(this);\r\n  }\r\n\r\n\r\n\r\n  componentWillMount() {\r\n    const currentCards = this.state.cards;\r\n    if (firebase.apps.length) {\r\n      this.database.on('child_added', snap => {\r\n        currentCards.push({\r\n          id: snap.key,\r\n          eng: snap.val().eng,\r\n          kan: snap.val().kan,\r\n          rom: snap.val().rom\r\n        })\r\n\r\n        this.setState({\r\n          cards: currentCards,\r\n          currentCard: this.getRandomCard(currentCards),\r\n          category: this.props.cardsCategory\r\n        })\r\n\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  getRandomCard(currentCards) {\r\n    var randomIndex = Math.floor(Math.random() * currentCards.length);\r\n    var card = currentCards[randomIndex];\r\n    if (card === this.state.currentCard) {\r\n      this.getRandomCard(currentCards)\r\n    }\r\n\r\n    return (card);\r\n  }\r\n\r\n  async updateCard() {\r\n    const currentCards = this.state.cards;\r\n    const newCards = [];\r\n    if (this.state.category !== this.props.category) {\r\n      await this.setState({\r\n        cards: currentCards,\r\n        currentCard: this.getRandomCard(currentCards)\r\n      })\r\n    }\r\n\r\n    if (firebase.apps.length) {\r\n      switch (this.props.cardsCategory) {\r\n        case 'Animals':\r\n          console.log(this.props.cardsCategory);\r\n          this.database = firebase.app().database().ref().child(\"flashcards/0/krn-cards/0/krn-cards-animals\");\r\n          if (this.state.category !== this.props.category) {\r\n            this.database.on('child_added', snap => {\r\n              newCards.push({\r\n                id: snap.key,\r\n                eng: snap.val().eng,\r\n                kan: snap.val().kan,\r\n                rom: snap.val().rom\r\n              })\r\n\r\n              this.setState({\r\n                cards: newCards,\r\n                currentCard: this.getRandomCard(newCards),\r\n                category: this.props.cardsCategory\r\n              })\r\n\r\n            })\r\n          }\r\n          break;\r\n        case 'People':\r\n          console.log(this.props.cardsCategory);\r\n          this.database = firebase.app().database().ref().child(\"flashcards/0/krn-cards/1/krn-cards-people\");\r\n\r\n          if (this.state.category !== this.props.category) {\r\n            this.database.on('child_added', snap => {\r\n              newCards.push({\r\n                id: snap.key,\r\n                eng: snap.val().eng,\r\n                kan: snap.val().kan,\r\n                rom: snap.val().rom\r\n              })\r\n\r\n              this.setState({\r\n                cards: newCards,\r\n                currentCard: this.getRandomCard(newCards),\r\n                category: this.props.cardsCategory\r\n              })\r\n\r\n            })\r\n          }\r\n          break;\r\n        case 'Food':\r\n          console.log(this.props.cardsCategory);\r\n          this.database = firebase.app().database().ref().child(\"flashcards/0/krn-cards/2/krn-cards-food\");\r\n          if (this.state.category !== this.props.category) {\r\n            this.database.on('child_added', snap => {\r\n              newCards.push({\r\n                id: snap.key,\r\n                eng: snap.val().eng,\r\n                kan: snap.val().kan,\r\n                rom: snap.val().rom\r\n              })\r\n\r\n              this.setState({\r\n                cards: newCards,\r\n                currentCard: this.getRandomCard(newCards),\r\n                category: this.props.cardsCategory\r\n              })\r\n\r\n            })\r\n          }\r\n          break;\r\n        default:\r\n          console.log(\"null\");\r\n          break;\r\n      }\r\n      this.updateCard = this.updateCard.bind(this);\r\n    }\r\n    console.log(this.state.currentSide);\r\n  }\r\n\r\n  async turnCard() {\r\n    if (this.state.currentSide === 'front') {\r\n      await this.setState({\r\n        currentSide: 'back',\r\n      });\r\n    }\r\n    else {\r\n      await this.setState({\r\n        currentSide: 'front',\r\n      });\r\n    }\r\n    console.log(this.state.currentSide);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card-container\">\r\n        <div className=\"cardCol\">\r\n          <div className=\"cardRow\">\r\n            <FlashCard eng={this.state.currentCard.eng}\r\n              kan={this.state.currentCard.kan}\r\n              rom={this.state.currentCard.rom}\r\n              side={this.state.currentSide} />\r\n          </div>\r\n          <div className=\"buttonRow\">\r\n            <DrawButton drawCard={this.updateCard} />\r\n            <FlipButton flipCard={this.turnCard} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default CardsContainer;"]},"metadata":{},"sourceType":"module"}